{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst dbUrl = environment.apiConfig.apiUrl;\nconst apiKey = environment.apiConfig.apiKey;\nexport let DetailService = /*#__PURE__*/(() => {\n  class DetailService {\n    constructor(http) {\n      this.http = http;\n      this._detail$ = new Subject();\n      this._videos$ = new Subject();\n      this._casts$ = new Subject();\n      this._movies$ = new Subject();\n    }\n\n    getDetail(type, id, params) {\n      return this.http.get(`${dbUrl}/${type}/${id}`, {\n        params: Object.assign(Object.assign({}, params), {\n          api_key: apiKey\n        })\n      }).subscribe(response => {\n        this._detail$.next(response);\n      });\n    }\n\n    getCredits(type, id, params) {\n      return this.http.get(`${dbUrl}/${type}/${id}/credits`, {\n        params: Object.assign(Object.assign({}, params), {\n          api_key: apiKey\n        })\n      }).subscribe(response => {\n        var _a;\n\n        this._casts$.next((_a = response === null || response === void 0 ? void 0 : response.cast) === null || _a === void 0 ? void 0 : _a.slice(0, 5));\n      });\n    }\n\n    getVideos(type, id, params) {\n      return this.http.get(`${dbUrl}/${type}/${id}/videos`, {\n        params: Object.assign(Object.assign({}, params), {\n          api_key: apiKey\n        })\n      }).subscribe(response => {\n        var _a;\n\n        this._videos$.next((_a = response === null || response === void 0 ? void 0 : response.results) === null || _a === void 0 ? void 0 : _a.slice(0, 5));\n      });\n    }\n\n    getMovies(type, id, params) {\n      return this.http.get(`${dbUrl}/${type}/${id}/similar`, {\n        params: Object.assign(Object.assign({}, params), {\n          api_key: apiKey\n        })\n      }).subscribe(response => {\n        this._movies$.next(response === null || response === void 0 ? void 0 : response.results);\n      });\n    }\n\n  }\n\n  DetailService.ɵfac = function DetailService_Factory(t) {\n    return new (t || DetailService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DetailService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DetailService,\n    factory: DetailService.ɵfac,\n    providedIn: 'root'\n  });\n  return DetailService;\n})();","map":null,"metadata":{},"sourceType":"module"}