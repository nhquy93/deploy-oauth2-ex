{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, NgModule, InjectionToken } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport { Subject, of, from, race, throwError, combineLatest, merge } from 'rxjs';\nimport { filter, tap, debounceTime, delay, switchMap, map, first, catchError, timeout, take, mergeMap } from 'rxjs/operators';\nimport fsha256 from 'fast-sha256';\n\nclass DateTimeProvider {}\n\nclass SystemDateTimeProvider extends DateTimeProvider {\n  now() {\n    return Date.now();\n  }\n\n  new() {\n    return new Date();\n  }\n\n}\n\nSystemDateTimeProvider.ɵfac = /* @__PURE__ */function () {\n  let ɵSystemDateTimeProvider_BaseFactory;\n  return function SystemDateTimeProvider_Factory(t) {\n    return (ɵSystemDateTimeProvider_BaseFactory || (ɵSystemDateTimeProvider_BaseFactory = i0.ɵɵgetInheritedFactory(SystemDateTimeProvider)))(t || SystemDateTimeProvider);\n  };\n}();\n\nSystemDateTimeProvider.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SystemDateTimeProvider,\n  factory: SystemDateTimeProvider.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SystemDateTimeProvider, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\n\n\nclass LoginOptions {\n  constructor() {\n    /**\r\n     * Set this to true to disable the nonce\r\n     * check which is used to avoid\r\n     * replay attacks.\r\n     * This flag should never be true in\r\n     * production environments.\r\n     */\n    this.disableNonceCheck = false;\n    /**\r\n     * Normally, you want to clear your hash fragment after\r\n     * the lib read the token(s) so that they are not displayed\r\n     * anymore in the url. If not, set this to true. For code flow\r\n     * this controls removing query string values.\r\n     */\n\n    this.preventClearHashAfterLogin = false;\n  }\n\n}\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\n\n\nclass OAuthLogger {}\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\n\n\nclass OAuthStorage {}\n\nclass MemoryStorage {\n  constructor() {\n    this.data = new Map();\n  }\n\n  getItem(key) {\n    return this.data.get(key);\n  }\n\n  removeItem(key) {\n    this.data.delete(key);\n  }\n\n  setItem(key, data) {\n    this.data.set(key, data);\n  }\n\n}\n\nMemoryStorage.ɵfac = function MemoryStorage_Factory(t) {\n  return new (t || MemoryStorage)();\n};\n\nMemoryStorage.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MemoryStorage,\n  factory: MemoryStorage.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MemoryStorage, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\n\n\nclass ReceivedTokens {}\n\nclass OAuthEvent {\n  constructor(type) {\n    this.type = type;\n  }\n\n}\n\nclass OAuthSuccessEvent extends OAuthEvent {\n  constructor(type, info = null) {\n    super(type);\n    this.info = info;\n  }\n\n}\n\nclass OAuthInfoEvent extends OAuthEvent {\n  constructor(type, info = null) {\n    super(type);\n    this.info = info;\n  }\n\n}\n\nclass OAuthErrorEvent extends OAuthEvent {\n  constructor(type, reason, params = null) {\n    super(type);\n    this.reason = reason;\n    this.params = params;\n  }\n\n} // see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\n\n\nfunction b64DecodeUnicode(str) {\n  const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\n  return decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n}\n\nfunction base64UrlEncode(str) {\n  const base64 = btoa(str);\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nclass AuthConfig {\n  constructor(json) {\n    /**\r\n     * The client's id as registered with the auth server\r\n     */\n    this.clientId = '';\n    /**\r\n     * The client's redirectUri as registered with the auth server\r\n     */\n\n    this.redirectUri = '';\n    /**\r\n     * An optional second redirectUri where the auth server\r\n     * redirects the user to after logging out.\r\n     */\n\n    this.postLogoutRedirectUri = '';\n    /**\r\n     * Defines whether to use 'redirectUri' as a replacement\r\n     * of 'postLogoutRedirectUri' if the latter is not set.\r\n     */\n\n    this.redirectUriAsPostLogoutRedirectUriFallback = true;\n    /**\r\n     * The auth server's endpoint that allows to log\r\n     * the user in when using implicit flow.\r\n     */\n\n    this.loginUrl = '';\n    /**\r\n     * The requested scopes\r\n     */\n\n    this.scope = 'openid profile';\n    this.resource = '';\n    this.rngUrl = '';\n    /**\r\n     * Defines whether to use OpenId Connect during\r\n     * implicit flow.\r\n     */\n\n    this.oidc = true;\n    /**\r\n     * Defines whether to request an access token during\r\n     * implicit flow.\r\n     */\n\n    this.requestAccessToken = true;\n    this.options = null;\n    /**\r\n     * The issuer's uri.\r\n     */\n\n    this.issuer = '';\n    /**\r\n     * The logout url.\r\n     */\n\n    this.logoutUrl = '';\n    /**\r\n     * Defines whether to clear the hash fragment after logging in.\r\n     */\n\n    this.clearHashAfterLogin = true;\n    /**\r\n     * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n     */\n\n    this.tokenEndpoint = null;\n    /**\r\n     * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\r\n     */\n\n    this.revocationEndpoint = null;\n    /**\r\n     * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\r\n     */\n\n    this.customTokenParameters = [];\n    /**\r\n     * Url of the userinfo endpoint as defined by OpenId Connect.\r\n     */\n\n    this.userinfoEndpoint = null;\n    this.responseType = '';\n    /**\r\n     * Defines whether additional debug information should\r\n     * be shown at the console. Note that in certain browsers\r\n     * the verbosity of the console needs to be explicitly set\r\n     * to include Debug level messages.\r\n     */\n\n    this.showDebugInformation = false;\n    /**\r\n     * The redirect uri used when doing silent refresh.\r\n     */\n\n    this.silentRefreshRedirectUri = '';\n    this.silentRefreshMessagePrefix = '';\n    /**\r\n     * Set this to true to display the iframe used for\r\n     * silent refresh for debugging.\r\n     */\n\n    this.silentRefreshShowIFrame = false;\n    /**\r\n     * Timeout for silent refresh.\r\n     * @internal\r\n     * depreacted b/c of typo, see silentRefreshTimeout\r\n     */\n\n    this.siletRefreshTimeout = 1000 * 20;\n    /**\r\n     * Timeout for silent refresh.\r\n     */\n\n    this.silentRefreshTimeout = 1000 * 20;\n    /**\r\n     * Some auth servers don't allow using password flow\r\n     * w/o a client secret while the standards do not\r\n     * demand for it. In this case, you can set a password\r\n     * here. As this password is exposed to the public\r\n     * it does not bring additional security and is therefore\r\n     * as good as using no password.\r\n     */\n\n    this.dummyClientSecret = null;\n    /**\r\n     * Defines whether https is required.\r\n     * The default value is remoteOnly which only allows\r\n     * http for localhost, while every other domains need\r\n     * to be used with https.\r\n     */\n\n    this.requireHttps = 'remoteOnly';\n    /**\r\n     * Defines whether every url provided by the discovery\r\n     * document has to start with the issuer's url.\r\n     */\n\n    this.strictDiscoveryDocumentValidation = true;\n    /**\r\n     * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n     * with keys used to validate received id_tokens.\r\n     * This is taken out of the disovery document. Can be set manually too.\r\n     */\n\n    this.jwks = null;\n    /**\r\n     * Map with additional query parameter that are appended to\r\n     * the request when initializing implicit flow.\r\n     */\n\n    this.customQueryParams = null;\n    this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';\n    /**\r\n     * Defines when the token_timeout event should be raised.\r\n     * If you set this to the default value 0.75, the event\r\n     * is triggered after 75% of the token's life time.\r\n     */\n\n    this.timeoutFactor = 0.75;\n    /**\r\n     * If true, the lib will try to check whether the user\r\n     * is still logged in on a regular basis as described\r\n     * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n     */\n\n    this.sessionChecksEnabled = false;\n    /**\r\n     * Interval in msec for checking the session\r\n     * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n     */\n\n    this.sessionCheckIntervall = 3 * 1000;\n    /**\r\n     * Url for the iframe used for session checks\r\n     */\n\n    this.sessionCheckIFrameUrl = null;\n    /**\r\n     * Name of the iframe to use for session checks\r\n     */\n\n    this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';\n    /**\r\n     * This property has been introduced to disable at_hash checks\r\n     * and is indented for Identity Provider that does not deliver\r\n     * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n     * Of course, when disabling these checks then we are bypassing\r\n     * a security check which means we are more vulnerable.\r\n     */\n\n    this.disableAtHashCheck = false;\n    /**\r\n     * Defines wether to check the subject of a refreshed token after silent refresh.\r\n     * Normally, it should be the same as before.\r\n     */\n\n    this.skipSubjectCheck = false;\n    this.useIdTokenHintForSilentRefresh = false;\n    /**\r\n     * Defined whether to skip the validation of the issuer in the discovery document.\r\n     * Normally, the discovey document's url starts with the url of the issuer.\r\n     */\n\n    this.skipIssuerCheck = false;\n    /**\r\n     * final state sent to issuer is built as follows:\r\n     * state = nonce + nonceStateSeparator + additional state\r\n     * Default separator is ';' (encoded %3B).\r\n     * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n     */\n\n    this.nonceStateSeparator = ';';\n    /**\r\n     * Set this to true to use HTTP BASIC auth for AJAX calls\r\n     */\n\n    this.useHttpBasicAuth = false;\n    /**\r\n     * The interceptors waits this time span if there is no token\r\n     */\n\n    this.waitForTokenInMsec = 0;\n    /**\r\n     * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n     * You can disbale it here by setting this flag to true.\r\n     * https://tools.ietf.org/html/rfc7636#section-1.1\r\n     */\n\n    this.disablePKCE = false;\n    /**\r\n     * Set this to true to preserve the requested route including query parameters after code flow login.\r\n     * This setting enables deep linking for the code flow.\r\n     */\n\n    this.preserveRequestedRoute = false;\n    /**\r\n     * This property allows you to override the method that is used to open the login url,\r\n     * allowing a way for implementations to specify their own method of routing to new\r\n     * urls.\r\n     */\n\n    this.openUri = uri => {\n      location.href = uri;\n    };\n\n    if (json) {\n      Object.assign(this, json);\n    }\n  }\n\n}\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\n\n\nclass WebHttpUrlEncodingCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\n\n\nclass ValidationHandler {}\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\n\n\nclass AbstractValidationHandler {\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\n  validateAtHash(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n      let tokenHash = yield this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n      let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n      let atHash = base64UrlEncode(leftMostHalf);\n      let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n      if (atHash !== claimsAtHash) {\n        console.error('exptected at_hash: ' + atHash);\n        console.error('actual at_hash: ' + claimsAtHash);\n      }\n\n      return atHash === claimsAtHash;\n    });\n  }\n  /**\r\n   * Infers the name of the hash algorithm to use\r\n   * from the alg field of an id_token.\r\n   *\r\n   * @param jwtHeader the id_token's parsed header\r\n   */\n\n\n  inferHashAlgorithm(jwtHeader) {\n    let alg = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n}\n\nclass UrlHelperService {\n  getHashFragmentParams(customHashFragment) {\n    let hash = customHashFragment || window.location.hash;\n    hash = decodeURIComponent(hash);\n\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n\n    const questionMarkPosition = hash.indexOf('?');\n\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n\n    return this.parseQueryString(hash);\n  }\n\n  parseQueryString(queryString) {\n    const data = {};\n    let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\n\n    if (queryString === null) {\n      return data;\n    }\n\n    pairs = queryString.split('&');\n\n    for (let i = 0; i < pairs.length; i++) {\n      pair = pairs[i];\n      separatorIndex = pair.indexOf('=');\n\n      if (separatorIndex === -1) {\n        escapedKey = pair;\n        escapedValue = null;\n      } else {\n        escapedKey = pair.substr(0, separatorIndex);\n        escapedValue = pair.substr(separatorIndex + 1);\n      }\n\n      key = decodeURIComponent(escapedKey);\n      value = decodeURIComponent(escapedValue);\n\n      if (key.substr(0, 1) === '/') {\n        key = key.substr(1);\n      }\n\n      data[key] = value;\n    }\n\n    return data;\n  }\n\n}\n\nUrlHelperService.ɵfac = function UrlHelperService_Factory(t) {\n  return new (t || UrlHelperService)();\n};\n\nUrlHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UrlHelperService,\n  factory: UrlHelperService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UrlHelperService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\r\n *\r\n * @version 0.9.0\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2014-2017\r\n * @license MIT\r\n */\n\n/*jslint bitwise: true */\n\n\nfunction factory() {\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  const HEX_CHARS = '0123456789abcdef'.split('');\n  const EXTRA = [-2147483648, 8388608, 32768, 128];\n  const SHIFT = [24, 16, 8, 0];\n  const K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  const OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n\n    method.create = function () {\n      return new Sha256(is224);\n    };\n\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n\n      if (Array.isArray(message) || ArrayBuffer.isView(message) || message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else {\n      // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n\n    var notString,\n        type = typeof message;\n\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n\n      notString = true;\n    }\n\n    var code,\n        index = 0,\n        i,\n        length = message.length,\n        blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n\n    this.finalized = true;\n    var blocks = this.blocks,\n        i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0,\n        b = this.h1,\n        c = this.h2,\n        d = this.h3,\n        e = this.h4,\n        f = this.h5,\n        g = this.h6,\n        h = this.h7,\n        blocks = this.blocks,\n        j,\n        s0,\n        s1,\n        maj,\n        t1,\n        t2,\n        ch,\n        ab,\n        da,\n        cd,\n        bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = (t1 >>> 7 | t1 << 25) ^ (t1 >>> 18 | t1 << 14) ^ t1 >>> 3;\n      t1 = blocks[j - 2];\n      s1 = (t1 >>> 17 | t1 << 15) ^ (t1 >>> 19 | t1 << 13) ^ t1 >>> 10;\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n\n        this.first = false;\n      } else {\n        s0 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);\n        s1 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);\n        ab = a & b;\n        maj = ab ^ a & c ^ bc;\n        ch = e & f ^ ~e & g;\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n\n      s0 = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10);\n      s1 = (h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7);\n      da = d & a;\n      maj = da ^ d & b ^ ab;\n      ch = h & e ^ ~h & f;\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10);\n      s1 = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7);\n      cd = c & d;\n      maj = cd ^ c & a ^ da;\n      ch = g & h ^ ~g & e;\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = (b >>> 2 | b << 30) ^ (b >>> 13 | b << 19) ^ (b >>> 22 | b << 10);\n      s1 = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7);\n      bc = b & c;\n      maj = bc ^ b & d ^ cd;\n      ch = f & g ^ ~f & h;\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0,\n        h1 = this.h1,\n        h2 = this.h2,\n        h3 = this.h3,\n        h4 = this.h4,\n        h5 = this.h5,\n        h6 = this.h6,\n        h7 = this.h7;\n    var hex = HEX_CHARS[h0 >> 28 & 0x0F] + HEX_CHARS[h0 >> 24 & 0x0F] + HEX_CHARS[h0 >> 20 & 0x0F] + HEX_CHARS[h0 >> 16 & 0x0F] + HEX_CHARS[h0 >> 12 & 0x0F] + HEX_CHARS[h0 >> 8 & 0x0F] + HEX_CHARS[h0 >> 4 & 0x0F] + HEX_CHARS[h0 & 0x0F] + HEX_CHARS[h1 >> 28 & 0x0F] + HEX_CHARS[h1 >> 24 & 0x0F] + HEX_CHARS[h1 >> 20 & 0x0F] + HEX_CHARS[h1 >> 16 & 0x0F] + HEX_CHARS[h1 >> 12 & 0x0F] + HEX_CHARS[h1 >> 8 & 0x0F] + HEX_CHARS[h1 >> 4 & 0x0F] + HEX_CHARS[h1 & 0x0F] + HEX_CHARS[h2 >> 28 & 0x0F] + HEX_CHARS[h2 >> 24 & 0x0F] + HEX_CHARS[h2 >> 20 & 0x0F] + HEX_CHARS[h2 >> 16 & 0x0F] + HEX_CHARS[h2 >> 12 & 0x0F] + HEX_CHARS[h2 >> 8 & 0x0F] + HEX_CHARS[h2 >> 4 & 0x0F] + HEX_CHARS[h2 & 0x0F] + HEX_CHARS[h3 >> 28 & 0x0F] + HEX_CHARS[h3 >> 24 & 0x0F] + HEX_CHARS[h3 >> 20 & 0x0F] + HEX_CHARS[h3 >> 16 & 0x0F] + HEX_CHARS[h3 >> 12 & 0x0F] + HEX_CHARS[h3 >> 8 & 0x0F] + HEX_CHARS[h3 >> 4 & 0x0F] + HEX_CHARS[h3 & 0x0F] + HEX_CHARS[h4 >> 28 & 0x0F] + HEX_CHARS[h4 >> 24 & 0x0F] + HEX_CHARS[h4 >> 20 & 0x0F] + HEX_CHARS[h4 >> 16 & 0x0F] + HEX_CHARS[h4 >> 12 & 0x0F] + HEX_CHARS[h4 >> 8 & 0x0F] + HEX_CHARS[h4 >> 4 & 0x0F] + HEX_CHARS[h4 & 0x0F] + HEX_CHARS[h5 >> 28 & 0x0F] + HEX_CHARS[h5 >> 24 & 0x0F] + HEX_CHARS[h5 >> 20 & 0x0F] + HEX_CHARS[h5 >> 16 & 0x0F] + HEX_CHARS[h5 >> 12 & 0x0F] + HEX_CHARS[h5 >> 8 & 0x0F] + HEX_CHARS[h5 >> 4 & 0x0F] + HEX_CHARS[h5 & 0x0F] + HEX_CHARS[h6 >> 28 & 0x0F] + HEX_CHARS[h6 >> 24 & 0x0F] + HEX_CHARS[h6 >> 20 & 0x0F] + HEX_CHARS[h6 >> 16 & 0x0F] + HEX_CHARS[h6 >> 12 & 0x0F] + HEX_CHARS[h6 >> 8 & 0x0F] + HEX_CHARS[h6 >> 4 & 0x0F] + HEX_CHARS[h6 & 0x0F];\n\n    if (!this.is224) {\n      hex += HEX_CHARS[h7 >> 28 & 0x0F] + HEX_CHARS[h7 >> 24 & 0x0F] + HEX_CHARS[h7 >> 20 & 0x0F] + HEX_CHARS[h7 >> 16 & 0x0F] + HEX_CHARS[h7 >> 12 & 0x0F] + HEX_CHARS[h7 >> 8 & 0x0F] + HEX_CHARS[h7 >> 4 & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0,\n        h1 = this.h1,\n        h2 = this.h2,\n        h3 = this.h3,\n        h4 = this.h4,\n        h5 = this.h5,\n        h6 = this.h6,\n        h7 = this.h7;\n    var arr = [h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF];\n\n    if (!this.is224) {\n      arr.push(h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF);\n    }\n\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i,\n        type = typeof key;\n\n    if (type === 'string') {\n      var bytes = [],\n          length = key.length,\n          index = 0,\n          code;\n\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = 0xc0 | code >> 6;\n          bytes[index++] = 0x80 | code & 0x3f;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = 0xe0 | code >> 12;\n          bytes[index++] = 0x80 | code >> 6 & 0x3f;\n          bytes[index++] = 0x80 | code & 0x3f;\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | key.charCodeAt(++i) & 0x3ff);\n          bytes[index++] = 0xf0 | code >> 18;\n          bytes[index++] = 0x80 | code >> 12 & 0x3f;\n          bytes[index++] = 0x80 | code >> 6 & 0x3f;\n          bytes[index++] = 0x80 | code & 0x3f;\n        }\n      }\n\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = new Sha256(is224, true).update(key).array();\n    }\n\n    var oKeyPad = [],\n        iKeyPad = [];\n\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n  return exports;\n}\n\nconst sha256 = factory();\n/**\r\n * Abstraction for crypto algorithms\r\n */\n\nclass HashHandler {}\n\nfunction decodeUTF8(s) {\n  if (typeof s !== 'string') throw new TypeError('expected string');\n  var i,\n      d = s,\n      b = new Uint8Array(d.length);\n\n  for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n\n  return b;\n}\n\nfunction encodeUTF8(arr) {\n  var i,\n      s = [];\n\n  for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n\n  return s.join('');\n}\n\nclass DefaultHashHandler {\n  calcHash(valueToHash, algorithm) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // const encoder = new TextEncoder();\n      // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n      // const data = encoder.encode(valueToHash);\n      // const fhash = fsha256(valueToHash);\n      const candHash = encodeUTF8(fsha256(decodeUTF8(valueToHash))); // const hashArray = (sha256 as any).array(valueToHash);\n      // // const hashString = this.toHashString(hashArray);\n      // const hashString = this.toHashString2(hashArray);\n      // console.debug('hash orig - cand', candHash, hashString);\n      // alert(1);\n\n      return candHash;\n    });\n  }\n\n  toHashString2(byteArray) {\n    let result = '';\n\n    for (let e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n\n    return result;\n  }\n\n  toHashString(buffer) {\n    const byteArray = new Uint8Array(buffer);\n    let result = '';\n\n    for (let e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n\n    return result;\n  }\n\n}\n\nDefaultHashHandler.ɵfac = function DefaultHashHandler_Factory(t) {\n  return new (t || DefaultHashHandler)();\n};\n\nDefaultHashHandler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DefaultHashHandler,\n  factory: DefaultHashHandler.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultHashHandler, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\n\n\nclass OAuthService extends AuthConfig {\n  constructor(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document, dateTimeService) {\n    var _a;\n\n    super();\n    this.ngZone = ngZone;\n    this.http = http;\n    this.config = config;\n    this.urlHelper = urlHelper;\n    this.logger = logger;\n    this.crypto = crypto;\n    this.dateTimeService = dateTimeService;\n    /**\r\n     * @internal\r\n     * Deprecated:  use property events instead\r\n     */\n\n    this.discoveryDocumentLoaded = false;\n    /**\r\n     * The received (passed around) state, when logging\r\n     * in with implicit flow.\r\n     */\n\n    this.state = '';\n    this.eventsSubject = new Subject();\n    this.discoveryDocumentLoadedSubject = new Subject();\n    this.grantTypesSupported = [];\n    this.inImplicitFlow = false;\n    this.saveNoncesInLocalStorage = false;\n    this.debug('angular-oauth2-oidc v10'); // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed\n\n    this.document = document;\n\n    if (!config) {\n      config = {};\n    }\n\n    this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\n    this.events = this.eventsSubject.asObservable();\n\n    if (tokenValidationHandler) {\n      this.tokenValidationHandler = tokenValidationHandler;\n    }\n\n    if (config) {\n      this.configure(config);\n    }\n\n    try {\n      if (storage) {\n        this.setStorage(storage);\n      } else if (typeof sessionStorage !== 'undefined') {\n        this.setStorage(sessionStorage);\n      }\n    } catch (e) {\n      console.error('No OAuthStorage provided and cannot access default (sessionStorage).' + 'Consider providing a custom OAuthStorage implementation in your module.', e);\n    } // in IE, sessionStorage does not always survive a redirect\n\n\n    if (this.checkLocalStorageAccessable()) {\n      const ua = (_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent;\n      const msie = (ua === null || ua === void 0 ? void 0 : ua.includes('MSIE ')) || (ua === null || ua === void 0 ? void 0 : ua.includes('Trident'));\n\n      if (msie) {\n        this.saveNoncesInLocalStorage = true;\n      }\n    }\n\n    this.setupRefreshTimer();\n  }\n\n  checkLocalStorageAccessable() {\n    if (typeof window === 'undefined') return false;\n    const test = 'test';\n\n    try {\n      if (typeof window['localStorage'] === 'undefined') return false;\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\r\n   * Use this method to configure the service\r\n   * @param config the configuration\r\n   */\n\n\n  configure(config) {\n    // For the sake of downward compatibility with\n    // original configuration API\n    Object.assign(this, new AuthConfig(), config);\n    this.config = Object.assign({}, new AuthConfig(), config);\n\n    if (this.sessionChecksEnabled) {\n      this.setupSessionCheck();\n    }\n\n    this.configChanged();\n  }\n\n  configChanged() {\n    this.setupRefreshTimer();\n  }\n\n  restartSessionChecksIfStillLoggedIn() {\n    if (this.hasValidIdToken()) {\n      this.initSessionCheck();\n    }\n  }\n\n  restartRefreshTimerIfStillLoggedIn() {\n    this.setupExpirationTimers();\n  }\n\n  setupSessionCheck() {\n    this.events.pipe(filter(e => e.type === 'token_received')).subscribe(e => {\n      this.initSessionCheck();\n    });\n  }\n  /**\r\n   * Will setup up silent refreshing for when the token is\r\n   * about to expire. When the user is logged out via this.logOut method, the\r\n   * silent refreshing will pause and not refresh the tokens until the user is\r\n   * logged back in via receiving a new token.\r\n   * @param params Additional parameter to pass\r\n   * @param listenTo Setup automatic refresh of a specific token type\r\n   */\n\n\n  setupAutomaticSilentRefresh(params = {}, listenTo, noPrompt = true) {\n    let shouldRunSilentRefresh = true;\n    this.clearAutomaticRefreshTimer();\n    this.automaticRefreshSubscription = this.events.pipe(tap(e => {\n      if (e.type === 'token_received') {\n        shouldRunSilentRefresh = true;\n      } else if (e.type === 'logout') {\n        shouldRunSilentRefresh = false;\n      }\n    }), filter(e => e.type === 'token_expires' && (listenTo == null || listenTo === 'any' || e.info === listenTo)), debounceTime(1000)).subscribe(_ => {\n      if (shouldRunSilentRefresh) {\n        // this.silentRefresh(params, noPrompt).catch(_ => {\n        this.refreshInternal(params, noPrompt).catch(_ => {\n          this.debug('Automatic silent refresh did not work');\n        });\n      }\n    });\n    this.restartRefreshTimerIfStillLoggedIn();\n  }\n\n  refreshInternal(params, noPrompt) {\n    if (!this.useSilentRefresh && this.responseType === 'code') {\n      return this.refreshToken();\n    } else {\n      return this.silentRefresh(params, noPrompt);\n    }\n  }\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n   * directly chains using the `then(...)` part of the promise to call\r\n   * the `tryLogin(...)` method.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\n\n\n  loadDiscoveryDocumentAndTryLogin(options = null) {\n    return this.loadDiscoveryDocument().then(doc => {\n      return this.tryLogin(options);\n    });\n  }\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n   * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n   * IdToken or no valid AccessToken.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\n\n\n  loadDiscoveryDocumentAndLogin(options = null) {\n    options = options || {};\n    return this.loadDiscoveryDocumentAndTryLogin(options).then(_ => {\n      if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\n        const state = typeof options.state === 'string' ? options.state : '';\n        this.initLoginFlow(state);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  debug(...args) {\n    if (this.showDebugInformation) {\n      this.logger.debug.apply(this.logger, args);\n    }\n  }\n\n  validateUrlFromDiscoveryDocument(url) {\n    const errors = [];\n    const httpsCheck = this.validateUrlForHttps(url);\n    const issuerCheck = this.validateUrlAgainstIssuer(url);\n\n    if (!httpsCheck) {\n      errors.push('https for all urls required. Also for urls received by discovery.');\n    }\n\n    if (!issuerCheck) {\n      errors.push('Every url in discovery document has to start with the issuer url.' + 'Also see property strictDiscoveryDocumentValidation.');\n    }\n\n    return errors;\n  }\n\n  validateUrlForHttps(url) {\n    if (!url) {\n      return true;\n    }\n\n    const lcUrl = url.toLowerCase();\n\n    if (this.requireHttps === false) {\n      return true;\n    }\n\n    if ((lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) || lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) && this.requireHttps === 'remoteOnly') {\n      return true;\n    }\n\n    return lcUrl.startsWith('https://');\n  }\n\n  assertUrlNotNullAndCorrectProtocol(url, description) {\n    if (!url) {\n      throw new Error(`'${description}' should not be null`);\n    }\n\n    if (!this.validateUrlForHttps(url)) {\n      throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\n    }\n  }\n\n  validateUrlAgainstIssuer(url) {\n    if (!this.strictDiscoveryDocumentValidation) {\n      return true;\n    }\n\n    if (!url) {\n      return true;\n    }\n\n    return url.toLowerCase().startsWith(this.issuer.toLowerCase());\n  }\n\n  setupRefreshTimer() {\n    if (typeof window === 'undefined') {\n      this.debug('timer not supported on this plattform');\n      return;\n    }\n\n    if (this.hasValidIdToken() || this.hasValidAccessToken()) {\n      this.clearAccessTokenTimer();\n      this.clearIdTokenTimer();\n      this.setupExpirationTimers();\n    }\n\n    if (this.tokenReceivedSubscription) this.tokenReceivedSubscription.unsubscribe();\n    this.tokenReceivedSubscription = this.events.pipe(filter(e => e.type === 'token_received')).subscribe(_ => {\n      this.clearAccessTokenTimer();\n      this.clearIdTokenTimer();\n      this.setupExpirationTimers();\n    });\n  }\n\n  setupExpirationTimers() {\n    if (this.hasValidAccessToken()) {\n      this.setupAccessTokenTimer();\n    }\n\n    if (this.hasValidIdToken()) {\n      this.setupIdTokenTimer();\n    }\n  }\n\n  setupAccessTokenTimer() {\n    const expiration = this.getAccessTokenExpiration();\n    const storedAt = this.getAccessTokenStoredAt();\n    const timeout = this.calcTimeout(storedAt, expiration);\n    this.ngZone.runOutsideAngular(() => {\n      this.accessTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'access_token')).pipe(delay(timeout)).subscribe(e => {\n        this.ngZone.run(() => {\n          this.eventsSubject.next(e);\n        });\n      });\n    });\n  }\n\n  setupIdTokenTimer() {\n    const expiration = this.getIdTokenExpiration();\n    const storedAt = this.getIdTokenStoredAt();\n    const timeout = this.calcTimeout(storedAt, expiration);\n    this.ngZone.runOutsideAngular(() => {\n      this.idTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'id_token')).pipe(delay(timeout)).subscribe(e => {\n        this.ngZone.run(() => {\n          this.eventsSubject.next(e);\n        });\n      });\n    });\n  }\n  /**\r\n   * Stops timers for automatic refresh.\r\n   * To restart it, call setupAutomaticSilentRefresh again.\r\n   */\n\n\n  stopAutomaticRefresh() {\n    this.clearAccessTokenTimer();\n    this.clearIdTokenTimer();\n    this.clearAutomaticRefreshTimer();\n  }\n\n  clearAccessTokenTimer() {\n    if (this.accessTokenTimeoutSubscription) {\n      this.accessTokenTimeoutSubscription.unsubscribe();\n    }\n  }\n\n  clearIdTokenTimer() {\n    if (this.idTokenTimeoutSubscription) {\n      this.idTokenTimeoutSubscription.unsubscribe();\n    }\n  }\n\n  clearAutomaticRefreshTimer() {\n    if (this.automaticRefreshSubscription) {\n      this.automaticRefreshSubscription.unsubscribe();\n    }\n  }\n\n  calcTimeout(storedAt, expiration) {\n    const now = this.dateTimeService.now();\n    const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\n    return Math.max(0, delta);\n  }\n  /**\r\n   * DEPRECATED. Use a provider for OAuthStorage instead:\r\n   *\r\n   * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n   * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n   * Sets a custom storage used to store the received\r\n   * tokens on client side. By default, the browser's\r\n   * sessionStorage is used.\r\n   * @ignore\r\n   *\r\n   * @param storage\r\n   */\n\n\n  setStorage(storage) {\n    this._storage = storage;\n    this.configChanged();\n  }\n  /**\r\n   * Loads the discovery document to configure most\r\n   * properties of this service. The url of the discovery\r\n   * document is infered from the issuer's url according\r\n   * to the OpenId Connect spec. To use another url you\r\n   * can pass it to to optional parameter fullUrl.\r\n   *\r\n   * @param fullUrl\r\n   */\n\n\n  loadDiscoveryDocument(fullUrl = null) {\n    return new Promise((resolve, reject) => {\n      if (!fullUrl) {\n        fullUrl = this.issuer || '';\n\n        if (!fullUrl.endsWith('/')) {\n          fullUrl += '/';\n        }\n\n        fullUrl += '.well-known/openid-configuration';\n      }\n\n      if (!this.validateUrlForHttps(fullUrl)) {\n        reject(\"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        return;\n      }\n\n      this.http.get(fullUrl).subscribe(doc => {\n        if (!this.validateDiscoveryDocument(doc)) {\n          this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\n          reject('discovery_document_validation_error');\n          return;\n        }\n\n        this.loginUrl = doc.authorization_endpoint;\n        this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\n        this.grantTypesSupported = doc.grant_types_supported;\n        this.issuer = doc.issuer;\n        this.tokenEndpoint = doc.token_endpoint;\n        this.userinfoEndpoint = doc.userinfo_endpoint || this.userinfoEndpoint;\n        this.jwksUri = doc.jwks_uri;\n        this.sessionCheckIFrameUrl = doc.check_session_iframe || this.sessionCheckIFrameUrl;\n        this.discoveryDocumentLoaded = true;\n        this.discoveryDocumentLoadedSubject.next(doc);\n        this.revocationEndpoint = doc.revocation_endpoint || this.revocationEndpoint;\n\n        if (this.sessionChecksEnabled) {\n          this.restartSessionChecksIfStillLoggedIn();\n        }\n\n        this.loadJwks().then(jwks => {\n          const result = {\n            discoveryDocument: doc,\n            jwks: jwks\n          };\n          const event = new OAuthSuccessEvent('discovery_document_loaded', result);\n          this.eventsSubject.next(event);\n          resolve(event);\n          return;\n        }).catch(err => {\n          this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n          reject(err);\n          return;\n        });\n      }, err => {\n        this.logger.error('error loading discovery document', err);\n        this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n        reject(err);\n      });\n    });\n  }\n\n  loadJwks() {\n    return new Promise((resolve, reject) => {\n      if (this.jwksUri) {\n        this.http.get(this.jwksUri).subscribe(jwks => {\n          this.jwks = jwks;\n          this.eventsSubject.next(new OAuthSuccessEvent('discovery_document_loaded'));\n          resolve(jwks);\n        }, err => {\n          this.logger.error('error loading jwks', err);\n          this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\n          reject(err);\n        });\n      } else {\n        resolve(null);\n      }\n    });\n  }\n\n  validateDiscoveryDocument(doc) {\n    let errors;\n\n    if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\n      this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);\n      return false;\n    }\n\n    errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\n\n    if (errors.length > 0) {\n      this.logger.error('error validating authorization_endpoint in discovery document', errors);\n      return false;\n    }\n\n    errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\n\n    if (errors.length > 0) {\n      this.logger.error('error validating end_session_endpoint in discovery document', errors);\n      return false;\n    }\n\n    errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\n\n    if (errors.length > 0) {\n      this.logger.error('error validating token_endpoint in discovery document', errors);\n    }\n\n    errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\n\n    if (errors.length > 0) {\n      this.logger.error('error validating revocation_endpoint in discovery document', errors);\n    }\n\n    errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\n\n    if (errors.length > 0) {\n      this.logger.error('error validating userinfo_endpoint in discovery document', errors);\n      return false;\n    }\n\n    errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\n\n    if (errors.length > 0) {\n      this.logger.error('error validating jwks_uri in discovery document', errors);\n      return false;\n    }\n\n    if (this.sessionChecksEnabled && !doc.check_session_iframe) {\n      this.logger.warn('sessionChecksEnabled is activated but discovery document' + ' does not contain a check_session_iframe field');\n    }\n\n    return true;\n  }\n  /**\r\n   * Uses password flow to exchange userName and password for an\r\n   * access_token. After receiving the access_token, this method\r\n   * uses it to query the userinfo endpoint in order to get information\r\n   * about the user in question.\r\n   *\r\n   * When using this, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation\r\n   * fail.\r\n   *\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\n\n\n  fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password, headers = new HttpHeaders()) {\n    return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(() => this.loadUserProfile());\n  }\n  /**\r\n   * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n   *\r\n   * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation fail.\r\n   */\n\n\n  loadUserProfile() {\n    if (!this.hasValidAccessToken()) {\n      throw new Error('Can not load User Profile without access_token');\n    }\n\n    if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\n      throw new Error(\"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n\n    return new Promise((resolve, reject) => {\n      const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAccessToken());\n      this.http.get(this.userinfoEndpoint, {\n        headers,\n        observe: 'response',\n        responseType: 'text'\n      }).subscribe(response => {\n        this.debug('userinfo received', JSON.stringify(response));\n\n        if (response.headers.get('content-type').startsWith('application/json')) {\n          let info = JSON.parse(response.body);\n          const existingClaims = this.getIdentityClaims() || {};\n\n          if (!this.skipSubjectCheck) {\n            if (this.oidc && (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {\n              const err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' + 'of the user that has logged in with oidc.\\n' + 'if you are not using oidc but just oauth2 password flow set oidc to false';\n              reject(err);\n              return;\n            }\n          }\n\n          info = Object.assign({}, existingClaims, info);\n\n          this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\n\n          this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n          resolve({\n            info\n          });\n        } else {\n          this.debug('userinfo is not JSON, treating it as JWE/JWS');\n          this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n          resolve(JSON.parse(response.body));\n        }\n      }, err => {\n        this.logger.error('error loading user info', err);\n        this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Uses password flow to exchange userName and password for an access_token.\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\n\n\n  fetchTokenUsingPasswordFlow(userName, password, headers = new HttpHeaders()) {\n    const parameters = {\n      username: userName,\n      password: password\n    };\n    return this.fetchTokenUsingGrant('password', parameters, headers);\n  }\n  /**\r\n   * Uses a custom grant type to retrieve tokens.\r\n   * @param grantType Grant type.\r\n   * @param parameters Parameters to pass.\r\n   * @param headers Optional additional HTTP headers.\r\n   */\n\n\n  fetchTokenUsingGrant(grantType, parameters, headers = new HttpHeaders()) {\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    /**\r\n     * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n     * serialize and parse URL parameter keys and values.\r\n     *\r\n     * @stable\r\n     */\n\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    }).set('grant_type', grantType).set('scope', this.scope);\n\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n\n    if (this.customQueryParams) {\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n        params = params.set(key, this.customQueryParams[key]);\n      }\n    } // set explicit parameters last, to allow overwriting\n\n\n    for (const key of Object.keys(parameters)) {\n      params = params.set(key, parameters[key]);\n    }\n\n    headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    return new Promise((resolve, reject) => {\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).subscribe(tokenResponse => {\n        this.debug('tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n\n        if (this.oidc && tokenResponse.id_token) {\n          this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then(result => {\n            this.storeIdToken(result);\n            resolve(tokenResponse);\n          });\n        }\n\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n        resolve(tokenResponse);\n      }, err => {\n        this.logger.error('Error performing ${grantType} flow', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Refreshes the token using a refresh_token.\r\n   * This does not work for implicit flow, b/c\r\n   * there is no refresh_token in this flow.\r\n   * A solution for this is provided by the\r\n   * method silentRefresh.\r\n   */\n\n\n  refreshToken() {\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    return new Promise((resolve, reject) => {\n      let params = new HttpParams({\n        encoder: new WebHttpUrlEncodingCodec()\n      }).set('grant_type', 'refresh_token').set('scope', this.scope).set('refresh_token', this._storage.getItem('refresh_token'));\n      let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\n      if (this.useHttpBasicAuth) {\n        const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n        headers = headers.set('Authorization', 'Basic ' + header);\n      }\n\n      if (!this.useHttpBasicAuth) {\n        params = params.set('client_id', this.clientId);\n      }\n\n      if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n        params = params.set('client_secret', this.dummyClientSecret);\n      }\n\n      if (this.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          params = params.set(key, this.customQueryParams[key]);\n        }\n      }\n\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).pipe(switchMap(tokenResponse => {\n        if (tokenResponse.id_token) {\n          return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(tap(result => this.storeIdToken(result)), map(_ => tokenResponse));\n        } else {\n          return of(tokenResponse);\n        }\n      })).subscribe(tokenResponse => {\n        this.debug('refresh tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n        resolve(tokenResponse);\n      }, err => {\n        this.logger.error('Error refreshing token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n        reject(err);\n      });\n    });\n  }\n\n  removeSilentRefreshEventListener() {\n    if (this.silentRefreshPostMessageEventListener) {\n      window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\n      this.silentRefreshPostMessageEventListener = null;\n    }\n  }\n\n  setupSilentRefreshEventListener() {\n    this.removeSilentRefreshEventListener();\n\n    this.silentRefreshPostMessageEventListener = e => {\n      const message = this.processMessageEventMessage(e);\n      this.tryLogin({\n        customHashFragment: message,\n        preventClearHashAfterLogin: true,\n        customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri\n      }).catch(err => this.debug('tryLogin during silent refresh failed', err));\n    };\n\n    window.addEventListener('message', this.silentRefreshPostMessageEventListener);\n  }\n  /**\r\n   * Performs a silent refresh for implicit flow.\r\n   * Use this method to get new tokens when/before\r\n   * the existing tokens expire.\r\n   */\n\n\n  silentRefresh(params = {}, noPrompt = true) {\n    const claims = this.getIdentityClaims() || {};\n\n    if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\n      params['id_token_hint'] = this.getIdToken();\n    }\n\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n\n    if (typeof this.document === 'undefined') {\n      throw new Error('silent refresh is not supported on this platform');\n    }\n\n    const existingIframe = this.document.getElementById(this.silentRefreshIFrameName);\n\n    if (existingIframe) {\n      this.document.body.removeChild(existingIframe);\n    }\n\n    this.silentRefreshSubject = claims['sub'];\n    const iframe = this.document.createElement('iframe');\n    iframe.id = this.silentRefreshIFrameName;\n    this.setupSilentRefreshEventListener();\n    const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\n    this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\n      iframe.setAttribute('src', url);\n\n      if (!this.silentRefreshShowIFrame) {\n        iframe.style['display'] = 'none';\n      }\n\n      this.document.body.appendChild(iframe);\n    });\n    const errors = this.events.pipe(filter(e => e instanceof OAuthErrorEvent), first());\n    const success = this.events.pipe(filter(e => e.type === 'token_received'), first());\n    const timeout = of(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(delay(this.silentRefreshTimeout));\n    return race([errors, success, timeout]).pipe(map(e => {\n      if (e instanceof OAuthErrorEvent) {\n        if (e.type === 'silent_refresh_timeout') {\n          this.eventsSubject.next(e);\n        } else {\n          e = new OAuthErrorEvent('silent_refresh_error', e);\n          this.eventsSubject.next(e);\n        }\n\n        throw e;\n      } else if (e.type === 'token_received') {\n        e = new OAuthSuccessEvent('silently_refreshed');\n        this.eventsSubject.next(e);\n      }\n\n      return e;\n    })).toPromise();\n  }\n  /**\r\n   * This method exists for backwards compatibility.\r\n   * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n   * and implicit flows.\r\n   */\n\n\n  initImplicitFlowInPopup(options) {\n    return this.initLoginFlowInPopup(options);\n  }\n\n  initLoginFlowInPopup(options) {\n    options = options || {};\n    return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\n      display: 'popup'\n    }).then(url => {\n      return new Promise((resolve, reject) => {\n        /**\r\n         * Error handling section\r\n         */\n        const checkForPopupClosedInterval = 500;\n        let windowRef = null; // If we got no window reference we open a window\n        // else we are using the window already opened\n\n        if (!options.windowRef) {\n          windowRef = window.open(url, 'ngx-oauth2-oidc-login', this.calculatePopupFeatures(options));\n        } else if (options.windowRef && !options.windowRef.closed) {\n          windowRef = options.windowRef;\n          windowRef.location.href = url;\n        }\n\n        let checkForPopupClosedTimer;\n\n        const tryLogin = hash => {\n          this.tryLogin({\n            customHashFragment: hash,\n            preventClearHashAfterLogin: true,\n            customRedirectUri: this.silentRefreshRedirectUri\n          }).then(() => {\n            cleanup();\n            resolve(true);\n          }, err => {\n            cleanup();\n            reject(err);\n          });\n        };\n\n        const checkForPopupClosed = () => {\n          if (!windowRef || windowRef.closed) {\n            cleanup();\n            reject(new OAuthErrorEvent('popup_closed', {}));\n          }\n        };\n\n        if (!windowRef) {\n          reject(new OAuthErrorEvent('popup_blocked', {}));\n        } else {\n          checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\n        }\n\n        const cleanup = () => {\n          window.clearInterval(checkForPopupClosedTimer);\n          window.removeEventListener('storage', storageListener);\n          window.removeEventListener('message', listener);\n\n          if (windowRef !== null) {\n            windowRef.close();\n          }\n\n          windowRef = null;\n        };\n\n        const listener = e => {\n          const message = this.processMessageEventMessage(e);\n\n          if (message && message !== null) {\n            window.removeEventListener('storage', storageListener);\n            tryLogin(message);\n          } else {\n            console.log('false event firing');\n          }\n        };\n\n        const storageListener = event => {\n          if (event.key === 'auth_hash') {\n            window.removeEventListener('message', listener);\n            tryLogin(event.newValue);\n          }\n        };\n\n        window.addEventListener('message', listener);\n        window.addEventListener('storage', storageListener);\n      });\n    });\n  }\n\n  calculatePopupFeatures(options) {\n    // Specify an static height and width and calculate centered position\n    const height = options.height || 470;\n    const width = options.width || 500;\n    const left = window.screenLeft + (window.outerWidth - width) / 2;\n    const top = window.screenTop + (window.outerHeight - height) / 2;\n    return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\n  }\n\n  processMessageEventMessage(e) {\n    let expectedPrefix = '#';\n\n    if (this.silentRefreshMessagePrefix) {\n      expectedPrefix += this.silentRefreshMessagePrefix;\n    }\n\n    if (!e || !e.data || typeof e.data !== 'string') {\n      return;\n    }\n\n    const prefixedMessage = e.data;\n\n    if (!prefixedMessage.startsWith(expectedPrefix)) {\n      return;\n    }\n\n    return '#' + prefixedMessage.substr(expectedPrefix.length);\n  }\n\n  canPerformSessionCheck() {\n    if (!this.sessionChecksEnabled) {\n      return false;\n    }\n\n    if (!this.sessionCheckIFrameUrl) {\n      console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');\n      return false;\n    }\n\n    const sessionState = this.getSessionState();\n\n    if (!sessionState) {\n      console.warn('sessionChecksEnabled is activated but there is no session_state');\n      return false;\n    }\n\n    if (typeof this.document === 'undefined') {\n      return false;\n    }\n\n    return true;\n  }\n\n  setupSessionCheckEventListener() {\n    this.removeSessionCheckEventListener();\n\n    this.sessionCheckEventListener = e => {\n      const origin = e.origin.toLowerCase();\n      const issuer = this.issuer.toLowerCase();\n      this.debug('sessionCheckEventListener');\n\n      if (!issuer.startsWith(origin)) {\n        this.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);\n        return;\n      } // only run in Angular zone if it is 'changed' or 'error'\n\n\n      switch (e.data) {\n        case 'unchanged':\n          this.ngZone.run(() => {\n            this.handleSessionUnchanged();\n          });\n          break;\n\n        case 'changed':\n          this.ngZone.run(() => {\n            this.handleSessionChange();\n          });\n          break;\n\n        case 'error':\n          this.ngZone.run(() => {\n            this.handleSessionError();\n          });\n          break;\n      }\n\n      this.debug('got info from session check inframe', e);\n    }; // prevent Angular from refreshing the view on every message (runs in intervals)\n\n\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('message', this.sessionCheckEventListener);\n    });\n  }\n\n  handleSessionUnchanged() {\n    this.debug('session check', 'session unchanged');\n    this.eventsSubject.next(new OAuthInfoEvent('session_unchanged'));\n  }\n\n  handleSessionChange() {\n    this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\n    this.stopSessionCheckTimer();\n\n    if (!this.useSilentRefresh && this.responseType === 'code') {\n      this.refreshToken().then(_ => {\n        this.debug('token refresh after session change worked');\n      }).catch(_ => {\n        this.debug('token refresh did not work after session changed');\n        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n        this.logOut(true);\n      });\n    } else if (this.silentRefreshRedirectUri) {\n      this.silentRefresh().catch(_ => this.debug('silent refresh failed after session changed'));\n      this.waitForSilentRefreshAfterSessionChange();\n    } else {\n      this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n      this.logOut(true);\n    }\n  }\n\n  waitForSilentRefreshAfterSessionChange() {\n    this.events.pipe(filter(e => e.type === 'silently_refreshed' || e.type === 'silent_refresh_timeout' || e.type === 'silent_refresh_error'), first()).subscribe(e => {\n      if (e.type !== 'silently_refreshed') {\n        this.debug('silent refresh did not work after session changed');\n        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n        this.logOut(true);\n      }\n    });\n  }\n\n  handleSessionError() {\n    this.stopSessionCheckTimer();\n    this.eventsSubject.next(new OAuthInfoEvent('session_error'));\n  }\n\n  removeSessionCheckEventListener() {\n    if (this.sessionCheckEventListener) {\n      window.removeEventListener('message', this.sessionCheckEventListener);\n      this.sessionCheckEventListener = null;\n    }\n  }\n\n  initSessionCheck() {\n    if (!this.canPerformSessionCheck()) {\n      return;\n    }\n\n    const existingIframe = this.document.getElementById(this.sessionCheckIFrameName);\n\n    if (existingIframe) {\n      this.document.body.removeChild(existingIframe);\n    }\n\n    const iframe = this.document.createElement('iframe');\n    iframe.id = this.sessionCheckIFrameName;\n    this.setupSessionCheckEventListener();\n    const url = this.sessionCheckIFrameUrl;\n    iframe.setAttribute('src', url);\n    iframe.style.display = 'none';\n    this.document.body.appendChild(iframe);\n    this.startSessionCheckTimer();\n  }\n\n  startSessionCheckTimer() {\n    this.stopSessionCheckTimer();\n    this.ngZone.runOutsideAngular(() => {\n      this.sessionCheckTimer = setInterval(this.checkSession.bind(this), this.sessionCheckIntervall);\n    });\n  }\n\n  stopSessionCheckTimer() {\n    if (this.sessionCheckTimer) {\n      clearInterval(this.sessionCheckTimer);\n      this.sessionCheckTimer = null;\n    }\n  }\n\n  checkSession() {\n    const iframe = this.document.getElementById(this.sessionCheckIFrameName);\n\n    if (!iframe) {\n      this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);\n    }\n\n    const sessionState = this.getSessionState();\n\n    if (!sessionState) {\n      this.stopSessionCheckTimer();\n    }\n\n    const message = this.clientId + ' ' + sessionState;\n    iframe.contentWindow.postMessage(message, this.issuer);\n  }\n\n  createLoginUrl(state = '', loginHint = '', customRedirectUri = '', noPrompt = false, params = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const that = this;\n      let redirectUri;\n\n      if (customRedirectUri) {\n        redirectUri = customRedirectUri;\n      } else {\n        redirectUri = this.redirectUri;\n      }\n\n      const nonce = yield this.createAndSaveNonce();\n\n      if (state) {\n        state = nonce + this.config.nonceStateSeparator + encodeURIComponent(state);\n      } else {\n        state = nonce;\n      }\n\n      if (!this.requestAccessToken && !this.oidc) {\n        throw new Error('Either requestAccessToken or oidc or both must be true');\n      }\n\n      if (this.config.responseType) {\n        this.responseType = this.config.responseType;\n      } else {\n        if (this.oidc && this.requestAccessToken) {\n          this.responseType = 'id_token token';\n        } else if (this.oidc && !this.requestAccessToken) {\n          this.responseType = 'id_token';\n        } else {\n          this.responseType = 'token';\n        }\n      }\n\n      const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\n      let scope = that.scope;\n\n      if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\n        scope = 'openid ' + scope;\n      }\n\n      let url = that.loginUrl + seperationChar + 'response_type=' + encodeURIComponent(that.responseType) + '&client_id=' + encodeURIComponent(that.clientId) + '&state=' + encodeURIComponent(state) + '&redirect_uri=' + encodeURIComponent(redirectUri) + '&scope=' + encodeURIComponent(scope);\n\n      if (this.responseType.includes('code') && !this.disablePKCE) {\n        const [challenge, verifier] = yield this.createChallangeVerifierPairForPKCE();\n\n        if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n          localStorage.setItem('PKCE_verifier', verifier);\n        } else {\n          this._storage.setItem('PKCE_verifier', verifier);\n        }\n\n        url += '&code_challenge=' + challenge;\n        url += '&code_challenge_method=S256';\n      }\n\n      if (loginHint) {\n        url += '&login_hint=' + encodeURIComponent(loginHint);\n      }\n\n      if (that.resource) {\n        url += '&resource=' + encodeURIComponent(that.resource);\n      }\n\n      if (that.oidc) {\n        url += '&nonce=' + encodeURIComponent(nonce);\n      }\n\n      if (noPrompt) {\n        url += '&prompt=none';\n      }\n\n      for (const key of Object.keys(params)) {\n        url += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }\n\n      if (this.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          url += '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\n        }\n      }\n\n      return url;\n    });\n  }\n\n  initImplicitFlowInternal(additionalState = '', params = '') {\n    if (this.inImplicitFlow) {\n      return;\n    }\n\n    this.inImplicitFlow = true;\n\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n\n    let addParams = {};\n    let loginHint = null;\n\n    if (typeof params === 'string') {\n      loginHint = params;\n    } else if (typeof params === 'object') {\n      addParams = params;\n    }\n\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(error => {\n      console.error('Error in initImplicitFlow', error);\n      this.inImplicitFlow = false;\n    });\n  }\n  /**\r\n   * Starts the implicit flow and redirects to user to\r\n   * the auth servers' login url.\r\n   *\r\n   * @param additionalState Optional state that is passed around.\r\n   *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n   * @param params Hash with additional parameter. If it is a string, it is used for the\r\n   *               parameter loginHint (for the sake of compatibility with former versions)\r\n   */\n\n\n  initImplicitFlow(additionalState = '', params = '') {\n    if (this.loginUrl !== '') {\n      this.initImplicitFlowInternal(additionalState, params);\n    } else {\n      this.events.pipe(filter(e => e.type === 'discovery_document_loaded')).subscribe(_ => this.initImplicitFlowInternal(additionalState, params));\n    }\n  }\n  /**\r\n   * Reset current implicit flow\r\n   *\r\n   * @description This method allows resetting the current implict flow in order to be initialized again.\r\n   */\n\n\n  resetImplicitFlow() {\n    this.inImplicitFlow = false;\n  }\n\n  callOnTokenReceivedIfExists(options) {\n    const that = this;\n\n    if (options.onTokenReceived) {\n      const tokenParams = {\n        idClaims: that.getIdentityClaims(),\n        idToken: that.getIdToken(),\n        accessToken: that.getAccessToken(),\n        state: that.state\n      };\n      options.onTokenReceived(tokenParams);\n    }\n  }\n\n  storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {\n    this._storage.setItem('access_token', accessToken);\n\n    if (grantedScopes && !Array.isArray(grantedScopes)) {\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split(' ')));\n    } else if (grantedScopes && Array.isArray(grantedScopes)) {\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\n    }\n\n    this._storage.setItem('access_token_stored_at', '' + this.dateTimeService.now());\n\n    if (expiresIn) {\n      const expiresInMilliSeconds = expiresIn * 1000;\n      const now = this.dateTimeService.new();\n      const expiresAt = now.getTime() + expiresInMilliSeconds;\n\n      this._storage.setItem('expires_at', '' + expiresAt);\n    }\n\n    if (refreshToken) {\n      this._storage.setItem('refresh_token', refreshToken);\n    }\n\n    if (customParameters) {\n      customParameters.forEach((value, key) => {\n        this._storage.setItem(key, value);\n      });\n    }\n  }\n  /**\r\n   * Delegates to tryLoginImplicitFlow for the sake of competability\r\n   * @param options Optional options.\r\n   */\n\n\n  tryLogin(options = null) {\n    if (this.config.responseType === 'code') {\n      return this.tryLoginCodeFlow(options).then(_ => true);\n    } else {\n      return this.tryLoginImplicitFlow(options);\n    }\n  }\n\n  parseQueryString(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return {};\n    }\n\n    if (queryString.charAt(0) === '?') {\n      queryString = queryString.substr(1);\n    }\n\n    return this.urlHelper.parseQueryString(queryString);\n  }\n\n  tryLoginCodeFlow(options = null) {\n    return __awaiter(this, void 0, void 0, function* () {\n      options = options || {};\n      const querySource = options.customHashFragment ? options.customHashFragment.substring(1) : window.location.search;\n      const parts = this.getCodePartsFromUrl(querySource);\n      const code = parts['code'];\n      const state = parts['state'];\n      const sessionState = parts['session_state'];\n\n      if (!options.preventClearHashAfterLogin) {\n        const href = location.origin + location.pathname + location.search.replace(/code=[^&\\$]*/, '').replace(/scope=[^&\\$]*/, '').replace(/state=[^&\\$]*/, '').replace(/session_state=[^&\\$]*/, '').replace(/^\\?&/, '?').replace(/&$/, '').replace(/^\\?$/, '').replace(/&+/g, '&').replace(/\\?&/, '?').replace(/\\?$/, '') + location.hash;\n        history.replaceState(null, window.name, href);\n      }\n\n      let [nonceInState, userState] = this.parseState(state);\n      this.state = userState;\n\n      if (parts['error']) {\n        this.debug('error trying to login');\n        this.handleLoginError(options, parts);\n        const err = new OAuthErrorEvent('code_error', {}, parts);\n        this.eventsSubject.next(err);\n        return Promise.reject(err);\n      }\n\n      if (!options.disableNonceCheck) {\n        if (!nonceInState) {\n          this.saveRequestedRoute();\n          return Promise.resolve();\n        }\n\n        if (!options.disableOAuth2StateCheck) {\n          const success = this.validateNonce(nonceInState);\n\n          if (!success) {\n            const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n            this.eventsSubject.next(event);\n            return Promise.reject(event);\n          }\n        }\n\n        this.storeSessionState(sessionState);\n\n        if (code) {\n          yield this.getTokenFromCode(code, options);\n          this.restoreRequestedRoute();\n          return Promise.resolve();\n        } else {\n          return Promise.resolve();\n        }\n      }\n\n      return Promise.reject();\n    });\n  }\n\n  saveRequestedRoute() {\n    if (this.config.preserveRequestedRoute) {\n      this._storage.setItem('requested_route', window.location.pathname + window.location.search);\n    }\n  }\n\n  restoreRequestedRoute() {\n    const requestedRoute = this._storage.getItem('requested_route');\n\n    if (requestedRoute) {\n      history.replaceState(null, '', window.location.origin + requestedRoute);\n    }\n  }\n  /**\r\n   * Retrieve the returned auth code from the redirect uri that has been called.\r\n   * If required also check hash, as we could use hash location strategy.\r\n   */\n\n\n  getCodePartsFromUrl(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return this.urlHelper.getHashFragmentParams();\n    } // normalize query string\n\n\n    if (queryString.charAt(0) === '?') {\n      queryString = queryString.substr(1);\n    }\n\n    return this.urlHelper.parseQueryString(queryString);\n  }\n  /**\r\n   * Get token using an intermediate code. Works for the Authorization Code flow.\r\n   */\n\n\n  getTokenFromCode(code, options) {\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    }).set('grant_type', 'authorization_code').set('code', code).set('redirect_uri', options.customRedirectUri || this.redirectUri);\n\n    if (!this.disablePKCE) {\n      let PKCEVerifier;\n\n      if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n        PKCEVerifier = localStorage.getItem('PKCE_verifier');\n      } else {\n        PKCEVerifier = this._storage.getItem('PKCE_verifier');\n      }\n\n      if (!PKCEVerifier) {\n        console.warn('No PKCE verifier found in oauth storage!');\n      } else {\n        params = params.set('code_verifier', PKCEVerifier);\n      }\n    }\n\n    return this.fetchAndProcessToken(params, options);\n  }\n\n  fetchAndProcessToken(params, options) {\n    options = options || {};\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n\n    return new Promise((resolve, reject) => {\n      if (this.customQueryParams) {\n        for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          params = params.set(key, this.customQueryParams[key]);\n        }\n      }\n\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).subscribe(tokenResponse => {\n        this.debug('refresh tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n\n        if (this.oidc && tokenResponse.id_token) {\n          this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, options.disableNonceCheck).then(result => {\n            this.storeIdToken(result);\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n            this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n            resolve(tokenResponse);\n          }).catch(reason => {\n            this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n            console.error('Error validating tokens');\n            console.error(reason);\n            reject(reason);\n          });\n        } else {\n          this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n          this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n          resolve(tokenResponse);\n        }\n      }, err => {\n        console.error('Error getting token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Checks whether there are tokens in the hash fragment\r\n   * as a result of the implicit flow. These tokens are\r\n   * parsed, validated and used to sign the user in to the\r\n   * current client.\r\n   *\r\n   * @param options Optional options.\r\n   */\n\n\n  tryLoginImplicitFlow(options = null) {\n    options = options || {};\n    let parts;\n\n    if (options.customHashFragment) {\n      parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\n    } else {\n      parts = this.urlHelper.getHashFragmentParams();\n    }\n\n    this.debug('parsed url', parts);\n    const state = parts['state'];\n    let [nonceInState, userState] = this.parseState(state);\n    this.state = userState;\n\n    if (parts['error']) {\n      this.debug('error trying to login');\n      this.handleLoginError(options, parts);\n      const err = new OAuthErrorEvent('token_error', {}, parts);\n      this.eventsSubject.next(err);\n      return Promise.reject(err);\n    }\n\n    const accessToken = parts['access_token'];\n    const idToken = parts['id_token'];\n    const sessionState = parts['session_state'];\n    const grantedScopes = parts['scope'];\n\n    if (!this.requestAccessToken && !this.oidc) {\n      return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');\n    }\n\n    if (this.requestAccessToken && !accessToken) {\n      return Promise.resolve(false);\n    }\n\n    if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\n      return Promise.resolve(false);\n    }\n\n    if (this.oidc && !idToken) {\n      return Promise.resolve(false);\n    }\n\n    if (this.sessionChecksEnabled && !sessionState) {\n      this.logger.warn('session checks (Session Status Change Notification) ' + 'were activated in the configuration but the id_token ' + 'does not contain a session_state claim');\n    }\n\n    if (this.requestAccessToken && !options.disableNonceCheck) {\n      const success = this.validateNonce(nonceInState);\n\n      if (!success) {\n        const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n        this.eventsSubject.next(event);\n        return Promise.reject(event);\n      }\n    }\n\n    if (this.requestAccessToken) {\n      this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);\n    }\n\n    if (!this.oidc) {\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n        this.clearLocationHash();\n      }\n\n      this.callOnTokenReceivedIfExists(options);\n      return Promise.resolve(true);\n    }\n\n    return this.processIdToken(idToken, accessToken, options.disableNonceCheck).then(result => {\n      if (options.validationHandler) {\n        return options.validationHandler({\n          accessToken: accessToken,\n          idClaims: result.idTokenClaims,\n          idToken: result.idToken,\n          state: state\n        }).then(_ => result);\n      }\n\n      return result;\n    }).then(result => {\n      this.storeIdToken(result);\n      this.storeSessionState(sessionState);\n\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n        this.clearLocationHash();\n      }\n\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n      this.callOnTokenReceivedIfExists(options);\n      this.inImplicitFlow = false;\n      return true;\n    }).catch(reason => {\n      this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n      this.logger.error('Error validating tokens');\n      this.logger.error(reason);\n      return Promise.reject(reason);\n    });\n  }\n\n  parseState(state) {\n    let nonce = state;\n    let userState = '';\n\n    if (state) {\n      const idx = state.indexOf(this.config.nonceStateSeparator);\n\n      if (idx > -1) {\n        nonce = state.substr(0, idx);\n        userState = state.substr(idx + this.config.nonceStateSeparator.length);\n      }\n    }\n\n    return [nonce, userState];\n  }\n\n  validateNonce(nonceInState) {\n    let savedNonce;\n\n    if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n      savedNonce = localStorage.getItem('nonce');\n    } else {\n      savedNonce = this._storage.getItem('nonce');\n    }\n\n    if (savedNonce !== nonceInState) {\n      const err = 'Validating access_token failed, wrong state/nonce.';\n      console.error(err, savedNonce, nonceInState);\n      return false;\n    }\n\n    return true;\n  }\n\n  storeIdToken(idToken) {\n    this._storage.setItem('id_token', idToken.idToken);\n\n    this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\n\n    this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\n\n    this._storage.setItem('id_token_stored_at', '' + this.dateTimeService.now());\n  }\n\n  storeSessionState(sessionState) {\n    this._storage.setItem('session_state', sessionState);\n  }\n\n  getSessionState() {\n    return this._storage.getItem('session_state');\n  }\n\n  handleLoginError(options, parts) {\n    if (options.onLoginError) {\n      options.onLoginError(parts);\n    }\n\n    if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n      this.clearLocationHash();\n    }\n  }\n\n  getClockSkewInMsec(defaultSkewMsc = 600000) {\n    if (!this.clockSkewInSec) {\n      return defaultSkewMsc;\n    }\n\n    return this.clockSkewInSec * 1000;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  processIdToken(idToken, accessToken, skipNonceCheck = false) {\n    const tokenParts = idToken.split('.');\n    const headerBase64 = this.padBase64(tokenParts[0]);\n    const headerJson = b64DecodeUnicode(headerBase64);\n    const header = JSON.parse(headerJson);\n    const claimsBase64 = this.padBase64(tokenParts[1]);\n    const claimsJson = b64DecodeUnicode(claimsBase64);\n    const claims = JSON.parse(claimsJson);\n    let savedNonce;\n\n    if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n      savedNonce = localStorage.getItem('nonce');\n    } else {\n      savedNonce = this._storage.getItem('nonce');\n    }\n\n    if (Array.isArray(claims.aud)) {\n      if (claims.aud.every(v => v !== this.clientId)) {\n        const err = 'Wrong audience: ' + claims.aud.join(',');\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n    } else {\n      if (claims.aud !== this.clientId) {\n        const err = 'Wrong audience: ' + claims.aud;\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n    }\n\n    if (!claims.sub) {\n      const err = 'No sub claim in id_token';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    /* For now, we only check whether the sub against\r\n     * silentRefreshSubject when sessionChecksEnabled is on\r\n     * We will reconsider in a later version to do this\r\n     * in every other case too.\r\n     */\n\n\n    if (this.sessionChecksEnabled && this.silentRefreshSubject && this.silentRefreshSubject !== claims['sub']) {\n      const err = 'After refreshing, we got an id_token for another user (sub). ' + `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n\n    if (!claims.iat) {\n      const err = 'No iat claim in id_token';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n\n    if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\n      const err = 'Wrong issuer: ' + claims.iss;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n\n    if (!skipNonceCheck && claims.nonce !== savedNonce) {\n      const err = 'Wrong nonce: ' + claims.nonce;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    } // at_hash is not applicable to authorization code flow\n    // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\n    // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\n    // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\n\n\n    if (this.hasOwnProperty('responseType') && (this.responseType === 'code' || this.responseType === 'id_token')) {\n      this.disableAtHashCheck = true;\n    }\n\n    if (!this.disableAtHashCheck && this.requestAccessToken && !claims['at_hash']) {\n      const err = 'An at_hash is needed!';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n\n    const now = this.dateTimeService.now();\n    const issuedAtMSec = claims.iat * 1000;\n    const expiresAtMSec = claims.exp * 1000;\n    const clockSkewInMSec = this.getClockSkewInMsec(); // (this.getClockSkewInMsec() || 600) * 1000;\n\n    if (issuedAtMSec - clockSkewInMSec >= now || expiresAtMSec + clockSkewInMSec <= now) {\n      const err = 'Token has expired';\n      console.error(err);\n      console.error({\n        now: now,\n        issuedAtMSec: issuedAtMSec,\n        expiresAtMSec: expiresAtMSec\n      });\n      return Promise.reject(err);\n    }\n\n    const validationParams = {\n      accessToken: accessToken,\n      idToken: idToken,\n      jwks: this.jwks,\n      idTokenClaims: claims,\n      idTokenHeader: header,\n      loadKeys: () => this.loadJwks()\n    };\n\n    if (this.disableAtHashCheck) {\n      return this.checkSignature(validationParams).then(_ => {\n        const result = {\n          idToken: idToken,\n          idTokenClaims: claims,\n          idTokenClaimsJson: claimsJson,\n          idTokenHeader: header,\n          idTokenHeaderJson: headerJson,\n          idTokenExpiresAt: expiresAtMSec\n        };\n        return result;\n      });\n    }\n\n    return this.checkAtHash(validationParams).then(atHashValid => {\n      if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\n        const err = 'Wrong at_hash';\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n\n      return this.checkSignature(validationParams).then(_ => {\n        const atHashCheckEnabled = !this.disableAtHashCheck;\n        const result = {\n          idToken: idToken,\n          idTokenClaims: claims,\n          idTokenClaimsJson: claimsJson,\n          idTokenHeader: header,\n          idTokenHeaderJson: headerJson,\n          idTokenExpiresAt: expiresAtMSec\n        };\n\n        if (atHashCheckEnabled) {\n          return this.checkAtHash(validationParams).then(atHashValid => {\n            if (this.requestAccessToken && !atHashValid) {\n              const err = 'Wrong at_hash';\n              this.logger.warn(err);\n              return Promise.reject(err);\n            } else {\n              return result;\n            }\n          });\n        } else {\n          return result;\n        }\n      });\n    });\n  }\n  /**\r\n   * Returns the received claims about the user.\r\n   */\n\n\n  getIdentityClaims() {\n    const claims = this._storage.getItem('id_token_claims_obj');\n\n    if (!claims) {\n      return null;\n    }\n\n    return JSON.parse(claims);\n  }\n  /**\r\n   * Returns the granted scopes from the server.\r\n   */\n\n\n  getGrantedScopes() {\n    const scopes = this._storage.getItem('granted_scopes');\n\n    if (!scopes) {\n      return null;\n    }\n\n    return JSON.parse(scopes);\n  }\n  /**\r\n   * Returns the current id_token.\r\n   */\n\n\n  getIdToken() {\n    return this._storage ? this._storage.getItem('id_token') : null;\n  }\n\n  padBase64(base64data) {\n    while (base64data.length % 4 !== 0) {\n      base64data += '=';\n    }\n\n    return base64data;\n  }\n  /**\r\n   * Returns the current access_token.\r\n   */\n\n\n  getAccessToken() {\n    return this._storage ? this._storage.getItem('access_token') : null;\n  }\n\n  getRefreshToken() {\n    return this._storage ? this._storage.getItem('refresh_token') : null;\n  }\n  /**\r\n   * Returns the expiration date of the access_token\r\n   * as milliseconds since 1970.\r\n   */\n\n\n  getAccessTokenExpiration() {\n    if (!this._storage.getItem('expires_at')) {\n      return null;\n    }\n\n    return parseInt(this._storage.getItem('expires_at'), 10);\n  }\n\n  getAccessTokenStoredAt() {\n    return parseInt(this._storage.getItem('access_token_stored_at'), 10);\n  }\n\n  getIdTokenStoredAt() {\n    return parseInt(this._storage.getItem('id_token_stored_at'), 10);\n  }\n  /**\r\n   * Returns the expiration date of the id_token\r\n   * as milliseconds since 1970.\r\n   */\n\n\n  getIdTokenExpiration() {\n    if (!this._storage.getItem('id_token_expires_at')) {\n      return null;\n    }\n\n    return parseInt(this._storage.getItem('id_token_expires_at'), 10);\n  }\n  /**\r\n   * Checkes, whether there is a valid access_token.\r\n   */\n\n\n  hasValidAccessToken() {\n    if (this.getAccessToken()) {\n      const expiresAt = this._storage.getItem('expires_at');\n\n      const now = this.dateTimeService.new();\n\n      if (expiresAt && parseInt(expiresAt, 10) < now.getTime() - this.getClockSkewInMsec()) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\r\n   * Checks whether there is a valid id_token.\r\n   */\n\n\n  hasValidIdToken() {\n    if (this.getIdToken()) {\n      const expiresAt = this._storage.getItem('id_token_expires_at');\n\n      const now = this.dateTimeService.new();\n\n      if (expiresAt && parseInt(expiresAt, 10) < now.getTime() - this.getClockSkewInMsec()) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\r\n   * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\r\n   */\n\n\n  getCustomTokenResponseProperty(requestedProperty) {\n    return this._storage && this.config.customTokenParameters && this.config.customTokenParameters.indexOf(requestedProperty) >= 0 && this._storage.getItem(requestedProperty) !== null ? JSON.parse(this._storage.getItem(requestedProperty)) : null;\n  }\n  /**\r\n   * Returns the auth-header that can be used\r\n   * to transmit the access_token to a service\r\n   */\n\n\n  authorizationHeader() {\n    return 'Bearer ' + this.getAccessToken();\n  }\n\n  logOut(customParameters = {}, state = '') {\n    let noRedirectToLogoutUrl = false;\n\n    if (typeof customParameters === 'boolean') {\n      noRedirectToLogoutUrl = customParameters;\n      customParameters = {};\n    }\n\n    const id_token = this.getIdToken();\n\n    this._storage.removeItem('access_token');\n\n    this._storage.removeItem('id_token');\n\n    this._storage.removeItem('refresh_token');\n\n    if (this.saveNoncesInLocalStorage) {\n      localStorage.removeItem('nonce');\n      localStorage.removeItem('PKCE_verifier');\n    } else {\n      this._storage.removeItem('nonce');\n\n      this._storage.removeItem('PKCE_verifier');\n    }\n\n    this._storage.removeItem('expires_at');\n\n    this._storage.removeItem('id_token_claims_obj');\n\n    this._storage.removeItem('id_token_expires_at');\n\n    this._storage.removeItem('id_token_stored_at');\n\n    this._storage.removeItem('access_token_stored_at');\n\n    this._storage.removeItem('granted_scopes');\n\n    this._storage.removeItem('session_state');\n\n    if (this.config.customTokenParameters) {\n      this.config.customTokenParameters.forEach(customParam => this._storage.removeItem(customParam));\n    }\n\n    this.silentRefreshSubject = null;\n    this.eventsSubject.next(new OAuthInfoEvent('logout'));\n\n    if (!this.logoutUrl) {\n      return;\n    }\n\n    if (noRedirectToLogoutUrl) {\n      return;\n    }\n\n    if (!id_token && !this.postLogoutRedirectUri) {\n      return;\n    }\n\n    let logoutUrl;\n\n    if (!this.validateUrlForHttps(this.logoutUrl)) {\n      throw new Error(\"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    } // For backward compatibility\n\n\n    if (this.logoutUrl.indexOf('{{') > -1) {\n      logoutUrl = this.logoutUrl.replace(/\\{\\{id_token\\}\\}/, encodeURIComponent(id_token)).replace(/\\{\\{client_id\\}\\}/, encodeURIComponent(this.clientId));\n    } else {\n      let params = new HttpParams({\n        encoder: new WebHttpUrlEncodingCodec()\n      });\n\n      if (id_token) {\n        params = params.set('id_token_hint', id_token);\n      }\n\n      const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUriAsPostLogoutRedirectUriFallback && this.redirectUri || '';\n\n      if (postLogoutUrl) {\n        params = params.set('post_logout_redirect_uri', postLogoutUrl);\n\n        if (state) {\n          params = params.set('state', state);\n        }\n      }\n\n      for (let key in customParameters) {\n        params = params.set(key, customParameters[key]);\n      }\n\n      logoutUrl = this.logoutUrl + (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') + params.toString();\n    }\n\n    this.config.openUri(logoutUrl);\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  createAndSaveNonce() {\n    const that = this;\n    return this.createNonce().then(function (nonce) {\n      // Use localStorage for nonce if possible\n      // localStorage is the only storage who survives a\n      // redirect in ALL browsers (also IE)\n      // Otherwiese we'd force teams who have to support\n      // IE into using localStorage for everything\n      if (that.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n        localStorage.setItem('nonce', nonce);\n      } else {\n        that._storage.setItem('nonce', nonce);\n      }\n\n      return nonce;\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  ngOnDestroy() {\n    this.clearAccessTokenTimer();\n    this.clearIdTokenTimer();\n    this.removeSilentRefreshEventListener();\n    const silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);\n\n    if (silentRefreshFrame) {\n      silentRefreshFrame.remove();\n    }\n\n    this.stopSessionCheckTimer();\n    this.removeSessionCheckEventListener();\n    const sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);\n\n    if (sessionCheckFrame) {\n      sessionCheckFrame.remove();\n    }\n  }\n\n  createNonce() {\n    return new Promise(resolve => {\n      if (this.rngUrl) {\n        throw new Error('createNonce with rng-web-api has not been implemented so far');\n      }\n      /*\r\n       * This alphabet is from:\r\n       * https://tools.ietf.org/html/rfc7636#section-4.1\r\n       *\r\n       * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n       */\n\n\n      const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n      let size = 45;\n      let id = '';\n      const crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\n\n      if (crypto) {\n        let bytes = new Uint8Array(size);\n        crypto.getRandomValues(bytes); // Needed for IE\n\n        if (!bytes.map) {\n          bytes.map = Array.prototype.map;\n        }\n\n        bytes = bytes.map(x => unreserved.charCodeAt(x % unreserved.length));\n        id = String.fromCharCode.apply(null, bytes);\n      } else {\n        while (0 < size--) {\n          id += unreserved[Math.random() * unreserved.length | 0];\n        }\n      }\n\n      resolve(base64UrlEncode(id));\n    });\n  }\n\n  checkAtHash(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.tokenValidationHandler) {\n        this.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');\n        return true;\n      }\n\n      return this.tokenValidationHandler.validateAtHash(params);\n    });\n  }\n\n  checkSignature(params) {\n    if (!this.tokenValidationHandler) {\n      this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');\n      return Promise.resolve(null);\n    }\n\n    return this.tokenValidationHandler.validateSignature(params);\n  }\n  /**\r\n   * Start the implicit flow or the code flow,\r\n   * depending on your configuration.\r\n   */\n\n\n  initLoginFlow(additionalState = '', params = {}) {\n    if (this.responseType === 'code') {\n      return this.initCodeFlow(additionalState, params);\n    } else {\n      return this.initImplicitFlow(additionalState, params);\n    }\n  }\n  /**\r\n   * Starts the authorization code flow and redirects to user to\r\n   * the auth servers login url.\r\n   */\n\n\n  initCodeFlow(additionalState = '', params = {}) {\n    if (this.loginUrl !== '') {\n      this.initCodeFlowInternal(additionalState, params);\n    } else {\n      this.events.pipe(filter(e => e.type === 'discovery_document_loaded')).subscribe(_ => this.initCodeFlowInternal(additionalState, params));\n    }\n  }\n\n  initCodeFlowInternal(additionalState = '', params = {}) {\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n\n    let addParams = {};\n    let loginHint = null;\n\n    if (typeof params === 'string') {\n      loginHint = params;\n    } else if (typeof params === 'object') {\n      addParams = params;\n    }\n\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(error => {\n      console.error('Error in initAuthorizationCodeFlow');\n      console.error(error);\n    });\n  }\n\n  createChallangeVerifierPairForPKCE() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.crypto) {\n        throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\n      }\n\n      const verifier = yield this.createNonce();\n      const challengeRaw = yield this.crypto.calcHash(verifier, 'sha-256');\n      const challenge = base64UrlEncode(challengeRaw);\n      return [challenge, verifier];\n    });\n  }\n\n  extractRecognizedCustomParameters(tokenResponse) {\n    let foundParameters = new Map();\n\n    if (!this.config.customTokenParameters) {\n      return foundParameters;\n    }\n\n    this.config.customTokenParameters.forEach(recognizedParameter => {\n      if (tokenResponse[recognizedParameter]) {\n        foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\n      }\n    });\n    return foundParameters;\n  }\n  /**\r\n   * Revokes the auth token to secure the vulnarability\r\n   * of the token issued allowing the authorization server to clean\r\n   * up any security credentials associated with the authorization\r\n   */\n\n\n  revokeTokenAndLogout(customParameters = {}, ignoreCorsIssues = false) {\n    let revokeEndpoint = this.revocationEndpoint;\n    let accessToken = this.getAccessToken();\n    let refreshToken = this.getRefreshToken();\n\n    if (!accessToken) {\n      return;\n    }\n\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    });\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n\n    if (this.customQueryParams) {\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n        params = params.set(key, this.customQueryParams[key]);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      let revokeAccessToken;\n      let revokeRefreshToken;\n\n      if (accessToken) {\n        let revokationParams = params.set('token', accessToken).set('token_type_hint', 'access_token');\n        revokeAccessToken = this.http.post(revokeEndpoint, revokationParams, {\n          headers\n        });\n      } else {\n        revokeAccessToken = of(null);\n      }\n\n      if (refreshToken) {\n        let revokationParams = params.set('token', refreshToken).set('token_type_hint', 'refresh_token');\n        revokeRefreshToken = this.http.post(revokeEndpoint, revokationParams, {\n          headers\n        });\n      } else {\n        revokeRefreshToken = of(null);\n      }\n\n      if (ignoreCorsIssues) {\n        revokeAccessToken = revokeAccessToken.pipe(catchError(err => {\n          if (err.status === 0) {\n            return of(null);\n          }\n\n          return throwError(err);\n        }));\n        revokeRefreshToken = revokeRefreshToken.pipe(catchError(err => {\n          if (err.status === 0) {\n            return of(null);\n          }\n\n          return throwError(err);\n        }));\n      }\n\n      combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe(res => {\n        this.logOut(customParameters);\n        resolve(res);\n        this.logger.info('Token successfully revoked');\n      }, err => {\n        this.logger.error('Error revoking token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Clear location.hash if it's present\r\n   */\n\n\n  clearLocationHash() {\n    // Checking for empty hash is necessary for Firefox\n    // as setting an empty hash to an empty string adds # to the URL\n    if (location.hash != '') {\n      location.hash = '';\n    }\n  }\n\n}\n\nOAuthService.ɵfac = function OAuthService_Factory(t) {\n  return new (t || OAuthService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(OAuthStorage, 8), i0.ɵɵinject(ValidationHandler, 8), i0.ɵɵinject(AuthConfig, 8), i0.ɵɵinject(UrlHelperService), i0.ɵɵinject(OAuthLogger), i0.ɵɵinject(HashHandler, 8), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(DateTimeProvider));\n};\n\nOAuthService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OAuthService,\n  factory: OAuthService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OAuthService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i1.HttpClient\n    }, {\n      type: OAuthStorage,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ValidationHandler,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: AuthConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: UrlHelperService\n    }, {\n      type: OAuthLogger\n    }, {\n      type: HashHandler,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: DateTimeProvider\n    }];\n  }, null);\n})();\n\nclass OAuthModuleConfig {}\n\nclass OAuthResourceServerConfig {}\n\nclass OAuthResourceServerErrorHandler {}\n\nclass OAuthNoopResourceServerErrorHandler {\n  handleError(err) {\n    return throwError(err);\n  }\n\n}\n\nclass DefaultOAuthInterceptor {\n  constructor(oAuthService, errorHandler, moduleConfig) {\n    this.oAuthService = oAuthService;\n    this.errorHandler = errorHandler;\n    this.moduleConfig = moduleConfig;\n  }\n\n  checkUrl(url) {\n    if (this.moduleConfig.resourceServer.customUrlValidation) {\n      return this.moduleConfig.resourceServer.customUrlValidation(url);\n    }\n\n    if (this.moduleConfig.resourceServer.allowedUrls) {\n      return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.toLowerCase().startsWith(u.toLowerCase()));\n    }\n\n    return true;\n  }\n\n  intercept(req, next) {\n    const url = req.url.toLowerCase();\n\n    if (!this.moduleConfig || !this.moduleConfig.resourceServer || !this.checkUrl(url)) {\n      return next.handle(req);\n    }\n\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n    if (!sendAccessToken) {\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)));\n    }\n\n    return merge(of(this.oAuthService.getAccessToken()).pipe(filter(token => !!token)), this.oAuthService.events.pipe(filter(e => e.type === 'token_received'), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError(_ => of(null)), // timeout is not an error\n    map(_ => this.oAuthService.getAccessToken()))).pipe(take(1), mergeMap(token => {\n      if (token) {\n        const header = 'Bearer ' + token;\n        const headers = req.headers.set('Authorization', header);\n        req = req.clone({\n          headers\n        });\n      }\n\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)));\n    }));\n  }\n\n}\n\nDefaultOAuthInterceptor.ɵfac = function DefaultOAuthInterceptor_Factory(t) {\n  return new (t || DefaultOAuthInterceptor)(i0.ɵɵinject(OAuthService), i0.ɵɵinject(OAuthResourceServerErrorHandler), i0.ɵɵinject(OAuthModuleConfig, 8));\n};\n\nDefaultOAuthInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DefaultOAuthInterceptor,\n  factory: DefaultOAuthInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultOAuthInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: OAuthService\n    }, {\n      type: OAuthResourceServerErrorHandler\n    }, {\n      type: OAuthModuleConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\n\n\nclass NullValidationHandler {\n  validateSignature(validationParams) {\n    return Promise.resolve(null);\n  }\n\n  validateAtHash(validationParams) {\n    return Promise.resolve(true);\n  }\n\n}\n\nfunction createDefaultLogger() {\n  return console;\n}\n\nfunction createDefaultStorage() {\n  return typeof sessionStorage !== 'undefined' ? sessionStorage : new MemoryStorage();\n}\n\nclass OAuthModule {\n  static forRoot(config = null, validationHandlerClass = NullValidationHandler) {\n    return {\n      ngModule: OAuthModule,\n      providers: [OAuthService, UrlHelperService, {\n        provide: OAuthLogger,\n        useFactory: createDefaultLogger\n      }, {\n        provide: OAuthStorage,\n        useFactory: createDefaultStorage\n      }, {\n        provide: ValidationHandler,\n        useClass: validationHandlerClass\n      }, {\n        provide: HashHandler,\n        useClass: DefaultHashHandler\n      }, {\n        provide: OAuthResourceServerErrorHandler,\n        useClass: OAuthNoopResourceServerErrorHandler\n      }, {\n        provide: OAuthModuleConfig,\n        useValue: config\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: DefaultOAuthInterceptor,\n        multi: true\n      }, {\n        provide: DateTimeProvider,\n        useClass: SystemDateTimeProvider\n      }]\n    };\n  }\n\n}\n\nOAuthModule.ɵfac = function OAuthModule_Factory(t) {\n  return new (t || OAuthModule)();\n};\n\nOAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OAuthModule\n});\nOAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OAuthModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [],\n      exports: []\n    }]\n  }], null, null);\n})();\n\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\n\nclass JwksValidationHandler extends NullValidationHandler {\n  constructor() {\n    super();\n    console.error(err);\n  }\n\n}\n\nconst AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DateTimeProvider, DefaultHashHandler, DefaultOAuthInterceptor, HashHandler, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, SystemDateTimeProvider, UrlHelperService, ValidationHandler };","map":{"version":3,"names":["i0","Injectable","Optional","Inject","NgModule","InjectionToken","DOCUMENT","CommonModule","i1","HttpHeaders","HttpParams","HTTP_INTERCEPTORS","__awaiter","Subject","of","from","race","throwError","combineLatest","merge","filter","tap","debounceTime","delay","switchMap","map","first","catchError","timeout","take","mergeMap","fsha256","DateTimeProvider","SystemDateTimeProvider","now","Date","new","ɵfac","ɵprov","type","LoginOptions","constructor","disableNonceCheck","preventClearHashAfterLogin","OAuthLogger","OAuthStorage","MemoryStorage","data","Map","getItem","key","get","removeItem","delete","setItem","set","ReceivedTokens","OAuthEvent","OAuthSuccessEvent","info","OAuthInfoEvent","OAuthErrorEvent","reason","params","b64DecodeUnicode","str","base64","replace","decodeURIComponent","atob","split","c","charCodeAt","toString","slice","join","base64UrlEncode","btoa","AuthConfig","json","clientId","redirectUri","postLogoutRedirectUri","redirectUriAsPostLogoutRedirectUriFallback","loginUrl","scope","resource","rngUrl","oidc","requestAccessToken","options","issuer","logoutUrl","clearHashAfterLogin","tokenEndpoint","revocationEndpoint","customTokenParameters","userinfoEndpoint","responseType","showDebugInformation","silentRefreshRedirectUri","silentRefreshMessagePrefix","silentRefreshShowIFrame","siletRefreshTimeout","silentRefreshTimeout","dummyClientSecret","requireHttps","strictDiscoveryDocumentValidation","jwks","customQueryParams","silentRefreshIFrameName","timeoutFactor","sessionChecksEnabled","sessionCheckIntervall","sessionCheckIFrameUrl","sessionCheckIFrameName","disableAtHashCheck","skipSubjectCheck","useIdTokenHintForSilentRefresh","skipIssuerCheck","nonceStateSeparator","useHttpBasicAuth","waitForTokenInMsec","disablePKCE","preserveRequestedRoute","openUri","uri","location","href","Object","assign","WebHttpUrlEncodingCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeValue","ValidationHandler","AbstractValidationHandler","validateAtHash","hashAlg","inferHashAlgorithm","idTokenHeader","tokenHash","calcHash","accessToken","leftMostHalf","substr","length","atHash","claimsAtHash","idTokenClaims","console","error","jwtHeader","alg","match","Error","UrlHelperService","getHashFragmentParams","customHashFragment","hash","window","indexOf","questionMarkPosition","parseQueryString","queryString","pairs","pair","separatorIndex","escapedKey","escapedValue","value","i","factory","ERROR","WINDOW","root","JS_SHA256_NO_WINDOW","WEB_WORKER","self","NODE_JS","JS_SHA256_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA256_NO_COMMON_JS","module","exports","AMD","define","amd","ARRAY_BUFFER","JS_SHA256_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","EXTRA","SHIFT","K","OUTPUT_TYPES","blocks","Array","isArray","obj","prototype","call","JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","is224","message","Sha256","update","createMethod","method","nodeWrap","create","crypto","eval","Buffer","algorithm","nodeMethod","createHash","digest","undefined","Uint8Array","createHmacOutputMethod","HmacSha256","createHmacMethod","sharedMemory","h0","h1","h2","h3","h4","h5","h6","h7","block","start","bytes","hBytes","finalized","hashed","notString","code","index","lastByteIndex","finalize","a","b","d","e","f","g","h","j","s0","s1","maj","t1","t2","ch","ab","da","cd","bc","hex","arr","push","array","arrayBuffer","dataView","DataView","setUint32","oKeyPad","iKeyPad","inner","innerHash","sha256","sha224","hmac","HashHandler","decodeUTF8","s","TypeError","encodeUTF8","String","fromCharCode","DefaultHashHandler","valueToHash","candHash","toHashString2","byteArray","result","toHashString","OAuthService","ngZone","http","storage","tokenValidationHandler","config","urlHelper","logger","document","dateTimeService","_a","discoveryDocumentLoaded","state","eventsSubject","discoveryDocumentLoadedSubject","grantTypesSupported","inImplicitFlow","saveNoncesInLocalStorage","debug","discoveryDocumentLoaded$","asObservable","events","configure","setStorage","sessionStorage","checkLocalStorageAccessable","ua","navigator","userAgent","msie","includes","setupRefreshTimer","test","localStorage","setupSessionCheck","configChanged","restartSessionChecksIfStillLoggedIn","hasValidIdToken","initSessionCheck","restartRefreshTimerIfStillLoggedIn","setupExpirationTimers","pipe","subscribe","setupAutomaticSilentRefresh","listenTo","noPrompt","shouldRunSilentRefresh","clearAutomaticRefreshTimer","automaticRefreshSubscription","_","refreshInternal","catch","useSilentRefresh","refreshToken","silentRefresh","loadDiscoveryDocumentAndTryLogin","loadDiscoveryDocument","then","doc","tryLogin","loadDiscoveryDocumentAndLogin","hasValidAccessToken","initLoginFlow","args","apply","validateUrlFromDiscoveryDocument","url","errors","httpsCheck","validateUrlForHttps","issuerCheck","validateUrlAgainstIssuer","lcUrl","toLowerCase","startsWith","assertUrlNotNullAndCorrectProtocol","description","clearAccessTokenTimer","clearIdTokenTimer","tokenReceivedSubscription","unsubscribe","setupAccessTokenTimer","setupIdTokenTimer","expiration","getAccessTokenExpiration","storedAt","getAccessTokenStoredAt","calcTimeout","runOutsideAngular","accessTokenTimeoutSubscription","run","next","getIdTokenExpiration","getIdTokenStoredAt","idTokenTimeoutSubscription","stopAutomaticRefresh","delta","Math","max","_storage","fullUrl","Promise","resolve","reject","endsWith","validateDiscoveryDocument","authorization_endpoint","end_session_endpoint","grant_types_supported","token_endpoint","userinfo_endpoint","jwksUri","jwks_uri","check_session_iframe","revocation_endpoint","loadJwks","discoveryDocument","event","err","warn","fetchTokenUsingPasswordFlowAndLoadUserProfile","userName","password","headers","fetchTokenUsingPasswordFlow","loadUserProfile","getAccessToken","observe","response","JSON","stringify","parse","body","existingClaims","getIdentityClaims","sub","parameters","username","fetchTokenUsingGrant","grantType","encoder","header","getOwnPropertyNames","keys","post","tokenResponse","storeAccessTokenResponse","access_token","refresh_token","expires_in","fallbackAccessTokenExpirationTimeInSec","extractRecognizedCustomParameters","id_token","processIdToken","storeIdToken","removeSilentRefreshEventListener","silentRefreshPostMessageEventListener","removeEventListener","setupSilentRefreshEventListener","processMessageEventMessage","customRedirectUri","addEventListener","claims","getIdToken","existingIframe","getElementById","removeChild","silentRefreshSubject","iframe","createElement","id","createLoginUrl","setAttribute","style","appendChild","success","toPromise","initImplicitFlowInPopup","initLoginFlowInPopup","display","checkForPopupClosedInterval","windowRef","open","calculatePopupFeatures","closed","checkForPopupClosedTimer","cleanup","checkForPopupClosed","setInterval","clearInterval","storageListener","listener","close","log","newValue","height","width","left","screenLeft","outerWidth","top","screenTop","outerHeight","expectedPrefix","prefixedMessage","canPerformSessionCheck","sessionState","getSessionState","setupSessionCheckEventListener","removeSessionCheckEventListener","sessionCheckEventListener","origin","handleSessionUnchanged","handleSessionChange","handleSessionError","stopSessionCheckTimer","logOut","waitForSilentRefreshAfterSessionChange","startSessionCheckTimer","sessionCheckTimer","checkSession","bind","contentWindow","postMessage","loginHint","that","nonce","createAndSaveNonce","seperationChar","challenge","verifier","createChallangeVerifierPairForPKCE","initImplicitFlowInternal","additionalState","addParams","initImplicitFlow","resetImplicitFlow","callOnTokenReceivedIfExists","onTokenReceived","tokenParams","idClaims","idToken","expiresIn","grantedScopes","customParameters","expiresInMilliSeconds","expiresAt","getTime","forEach","tryLoginCodeFlow","tryLoginImplicitFlow","charAt","querySource","substring","search","parts","getCodePartsFromUrl","pathname","history","replaceState","name","nonceInState","userState","parseState","handleLoginError","saveRequestedRoute","disableOAuth2StateCheck","validateNonce","storeSessionState","getTokenFromCode","restoreRequestedRoute","requestedRoute","PKCEVerifier","fetchAndProcessToken","clearLocationHash","validationHandler","idx","savedNonce","idTokenClaimsJson","idTokenExpiresAt","onLoginError","getClockSkewInMsec","defaultSkewMsc","clockSkewInSec","skipNonceCheck","tokenParts","headerBase64","padBase64","headerJson","claimsBase64","claimsJson","aud","every","iat","iss","hasOwnProperty","issuedAtMSec","expiresAtMSec","exp","clockSkewInMSec","validationParams","loadKeys","checkSignature","idTokenHeaderJson","checkAtHash","atHashValid","atHashCheckEnabled","getGrantedScopes","scopes","base64data","getRefreshToken","parseInt","getCustomTokenResponseProperty","requestedProperty","authorizationHeader","noRedirectToLogoutUrl","customParam","postLogoutUrl","createNonce","ngOnDestroy","silentRefreshFrame","remove","sessionCheckFrame","unreserved","size","getRandomValues","x","random","validateSignature","initCodeFlow","initCodeFlowInternal","challengeRaw","foundParameters","recognizedParameter","revokeTokenAndLogout","ignoreCorsIssues","revokeEndpoint","revokeAccessToken","revokeRefreshToken","revokationParams","status","res","NgZone","HttpClient","decorators","OAuthModuleConfig","OAuthResourceServerConfig","OAuthResourceServerErrorHandler","OAuthNoopResourceServerErrorHandler","handleError","DefaultOAuthInterceptor","oAuthService","errorHandler","moduleConfig","checkUrl","resourceServer","customUrlValidation","allowedUrls","find","u","intercept","req","handle","sendAccessToken","token","clone","NullValidationHandler","createDefaultLogger","createDefaultStorage","OAuthModule","forRoot","validationHandlerClass","ngModule","providers","provide","useFactory","useClass","useValue","multi","ɵmod","ɵinj","imports","declarations","JwksValidationHandler","AUTH_CONFIG"],"sources":["/Users/nhquy93/git-angular/deploy-oauth2-ex/node_modules/angular-oauth2-oidc/fesm2015/angular-oauth2-oidc.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, NgModule, InjectionToken } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport { Subject, of, from, race, throwError, combineLatest, merge } from 'rxjs';\nimport { filter, tap, debounceTime, delay, switchMap, map, first, catchError, timeout, take, mergeMap } from 'rxjs/operators';\nimport fsha256 from 'fast-sha256';\n\nclass DateTimeProvider {\r\n}\r\nclass SystemDateTimeProvider extends DateTimeProvider {\r\n    now() {\r\n        return Date.now();\r\n    }\r\n    new() {\r\n        return new Date();\r\n    }\r\n}\r\nSystemDateTimeProvider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: SystemDateTimeProvider, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nSystemDateTimeProvider.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: SystemDateTimeProvider });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: SystemDateTimeProvider, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\r\nclass LoginOptions {\r\n    constructor() {\r\n        /**\r\n         * Set this to true to disable the nonce\r\n         * check which is used to avoid\r\n         * replay attacks.\r\n         * This flag should never be true in\r\n         * production environments.\r\n         */\r\n        this.disableNonceCheck = false;\r\n        /**\r\n         * Normally, you want to clear your hash fragment after\r\n         * the lib read the token(s) so that they are not displayed\r\n         * anymore in the url. If not, set this to true. For code flow\r\n         * this controls removing query string values.\r\n         */\r\n        this.preventClearHashAfterLogin = false;\r\n    }\r\n}\r\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\r\nclass OAuthLogger {\r\n}\r\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\r\nclass OAuthStorage {\r\n}\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.data = new Map();\r\n    }\r\n    getItem(key) {\r\n        return this.data.get(key);\r\n    }\r\n    removeItem(key) {\r\n        this.data.delete(key);\r\n    }\r\n    setItem(key, data) {\r\n        this.data.set(key, data);\r\n    }\r\n}\r\nMemoryStorage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MemoryStorage, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nMemoryStorage.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MemoryStorage });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MemoryStorage, decorators: [{\r\n            type: Injectable\r\n        }] });\r\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\r\nclass ReceivedTokens {\r\n}\n\nclass OAuthEvent {\r\n    constructor(type) {\r\n        this.type = type;\r\n    }\r\n}\r\nclass OAuthSuccessEvent extends OAuthEvent {\r\n    constructor(type, info = null) {\r\n        super(type);\r\n        this.info = info;\r\n    }\r\n}\r\nclass OAuthInfoEvent extends OAuthEvent {\r\n    constructor(type, info = null) {\r\n        super(type);\r\n        this.info = info;\r\n    }\r\n}\r\nclass OAuthErrorEvent extends OAuthEvent {\r\n    constructor(type, reason, params = null) {\r\n        super(type);\r\n        this.reason = reason;\r\n        this.params = params;\r\n    }\r\n}\n\n// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\r\nfunction b64DecodeUnicode(str) {\r\n    const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n    return decodeURIComponent(atob(base64)\r\n        .split('')\r\n        .map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    })\r\n        .join(''));\r\n}\r\nfunction base64UrlEncode(str) {\r\n    const base64 = btoa(str);\r\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\r\n}\n\nclass AuthConfig {\r\n    constructor(json) {\r\n        /**\r\n         * The client's id as registered with the auth server\r\n         */\r\n        this.clientId = '';\r\n        /**\r\n         * The client's redirectUri as registered with the auth server\r\n         */\r\n        this.redirectUri = '';\r\n        /**\r\n         * An optional second redirectUri where the auth server\r\n         * redirects the user to after logging out.\r\n         */\r\n        this.postLogoutRedirectUri = '';\r\n        /**\r\n         * Defines whether to use 'redirectUri' as a replacement\r\n         * of 'postLogoutRedirectUri' if the latter is not set.\r\n         */\r\n        this.redirectUriAsPostLogoutRedirectUriFallback = true;\r\n        /**\r\n         * The auth server's endpoint that allows to log\r\n         * the user in when using implicit flow.\r\n         */\r\n        this.loginUrl = '';\r\n        /**\r\n         * The requested scopes\r\n         */\r\n        this.scope = 'openid profile';\r\n        this.resource = '';\r\n        this.rngUrl = '';\r\n        /**\r\n         * Defines whether to use OpenId Connect during\r\n         * implicit flow.\r\n         */\r\n        this.oidc = true;\r\n        /**\r\n         * Defines whether to request an access token during\r\n         * implicit flow.\r\n         */\r\n        this.requestAccessToken = true;\r\n        this.options = null;\r\n        /**\r\n         * The issuer's uri.\r\n         */\r\n        this.issuer = '';\r\n        /**\r\n         * The logout url.\r\n         */\r\n        this.logoutUrl = '';\r\n        /**\r\n         * Defines whether to clear the hash fragment after logging in.\r\n         */\r\n        this.clearHashAfterLogin = true;\r\n        /**\r\n         * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n         */\r\n        this.tokenEndpoint = null;\r\n        /**\r\n         * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\r\n         */\r\n        this.revocationEndpoint = null;\r\n        /**\r\n         * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\r\n         */\r\n        this.customTokenParameters = [];\r\n        /**\r\n         * Url of the userinfo endpoint as defined by OpenId Connect.\r\n         */\r\n        this.userinfoEndpoint = null;\r\n        this.responseType = '';\r\n        /**\r\n         * Defines whether additional debug information should\r\n         * be shown at the console. Note that in certain browsers\r\n         * the verbosity of the console needs to be explicitly set\r\n         * to include Debug level messages.\r\n         */\r\n        this.showDebugInformation = false;\r\n        /**\r\n         * The redirect uri used when doing silent refresh.\r\n         */\r\n        this.silentRefreshRedirectUri = '';\r\n        this.silentRefreshMessagePrefix = '';\r\n        /**\r\n         * Set this to true to display the iframe used for\r\n         * silent refresh for debugging.\r\n         */\r\n        this.silentRefreshShowIFrame = false;\r\n        /**\r\n         * Timeout for silent refresh.\r\n         * @internal\r\n         * depreacted b/c of typo, see silentRefreshTimeout\r\n         */\r\n        this.siletRefreshTimeout = 1000 * 20;\r\n        /**\r\n         * Timeout for silent refresh.\r\n         */\r\n        this.silentRefreshTimeout = 1000 * 20;\r\n        /**\r\n         * Some auth servers don't allow using password flow\r\n         * w/o a client secret while the standards do not\r\n         * demand for it. In this case, you can set a password\r\n         * here. As this password is exposed to the public\r\n         * it does not bring additional security and is therefore\r\n         * as good as using no password.\r\n         */\r\n        this.dummyClientSecret = null;\r\n        /**\r\n         * Defines whether https is required.\r\n         * The default value is remoteOnly which only allows\r\n         * http for localhost, while every other domains need\r\n         * to be used with https.\r\n         */\r\n        this.requireHttps = 'remoteOnly';\r\n        /**\r\n         * Defines whether every url provided by the discovery\r\n         * document has to start with the issuer's url.\r\n         */\r\n        this.strictDiscoveryDocumentValidation = true;\r\n        /**\r\n         * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n         * with keys used to validate received id_tokens.\r\n         * This is taken out of the disovery document. Can be set manually too.\r\n         */\r\n        this.jwks = null;\r\n        /**\r\n         * Map with additional query parameter that are appended to\r\n         * the request when initializing implicit flow.\r\n         */\r\n        this.customQueryParams = null;\r\n        this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';\r\n        /**\r\n         * Defines when the token_timeout event should be raised.\r\n         * If you set this to the default value 0.75, the event\r\n         * is triggered after 75% of the token's life time.\r\n         */\r\n        this.timeoutFactor = 0.75;\r\n        /**\r\n         * If true, the lib will try to check whether the user\r\n         * is still logged in on a regular basis as described\r\n         * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n         */\r\n        this.sessionChecksEnabled = false;\r\n        /**\r\n         * Interval in msec for checking the session\r\n         * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n         */\r\n        this.sessionCheckIntervall = 3 * 1000;\r\n        /**\r\n         * Url for the iframe used for session checks\r\n         */\r\n        this.sessionCheckIFrameUrl = null;\r\n        /**\r\n         * Name of the iframe to use for session checks\r\n         */\r\n        this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';\r\n        /**\r\n         * This property has been introduced to disable at_hash checks\r\n         * and is indented for Identity Provider that does not deliver\r\n         * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n         * Of course, when disabling these checks then we are bypassing\r\n         * a security check which means we are more vulnerable.\r\n         */\r\n        this.disableAtHashCheck = false;\r\n        /**\r\n         * Defines wether to check the subject of a refreshed token after silent refresh.\r\n         * Normally, it should be the same as before.\r\n         */\r\n        this.skipSubjectCheck = false;\r\n        this.useIdTokenHintForSilentRefresh = false;\r\n        /**\r\n         * Defined whether to skip the validation of the issuer in the discovery document.\r\n         * Normally, the discovey document's url starts with the url of the issuer.\r\n         */\r\n        this.skipIssuerCheck = false;\r\n        /**\r\n         * final state sent to issuer is built as follows:\r\n         * state = nonce + nonceStateSeparator + additional state\r\n         * Default separator is ';' (encoded %3B).\r\n         * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n         */\r\n        this.nonceStateSeparator = ';';\r\n        /**\r\n         * Set this to true to use HTTP BASIC auth for AJAX calls\r\n         */\r\n        this.useHttpBasicAuth = false;\r\n        /**\r\n         * The interceptors waits this time span if there is no token\r\n         */\r\n        this.waitForTokenInMsec = 0;\r\n        /**\r\n         * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n         * You can disbale it here by setting this flag to true.\r\n         * https://tools.ietf.org/html/rfc7636#section-1.1\r\n         */\r\n        this.disablePKCE = false;\r\n        /**\r\n         * Set this to true to preserve the requested route including query parameters after code flow login.\r\n         * This setting enables deep linking for the code flow.\r\n         */\r\n        this.preserveRequestedRoute = false;\r\n        /**\r\n         * This property allows you to override the method that is used to open the login url,\r\n         * allowing a way for implementations to specify their own method of routing to new\r\n         * urls.\r\n         */\r\n        this.openUri = (uri) => {\r\n            location.href = uri;\r\n        };\r\n        if (json) {\r\n            Object.assign(this, json);\r\n        }\r\n    }\r\n}\n\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\r\nclass WebHttpUrlEncodingCodec {\r\n    encodeKey(k) {\r\n        return encodeURIComponent(k);\r\n    }\r\n    encodeValue(v) {\r\n        return encodeURIComponent(v);\r\n    }\r\n    decodeKey(k) {\r\n        return decodeURIComponent(k);\r\n    }\r\n    decodeValue(v) {\r\n        return decodeURIComponent(v);\r\n    }\r\n}\n\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\r\nclass ValidationHandler {\r\n}\r\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\r\nclass AbstractValidationHandler {\r\n    /**\r\n     * Validates the at_hash in an id_token against the received access_token.\r\n     */\r\n    validateAtHash(params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\r\n            let tokenHash = yield this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\r\n            let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\r\n            let atHash = base64UrlEncode(leftMostHalf);\r\n            let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\r\n            if (atHash !== claimsAtHash) {\r\n                console.error('exptected at_hash: ' + atHash);\r\n                console.error('actual at_hash: ' + claimsAtHash);\r\n            }\r\n            return atHash === claimsAtHash;\r\n        });\r\n    }\r\n    /**\r\n     * Infers the name of the hash algorithm to use\r\n     * from the alg field of an id_token.\r\n     *\r\n     * @param jwtHeader the id_token's parsed header\r\n     */\r\n    inferHashAlgorithm(jwtHeader) {\r\n        let alg = jwtHeader['alg'];\r\n        if (!alg.match(/^.S[0-9]{3}$/)) {\r\n            throw new Error('Algorithm not supported: ' + alg);\r\n        }\r\n        return 'sha-' + alg.substr(2);\r\n    }\r\n}\n\nclass UrlHelperService {\r\n    getHashFragmentParams(customHashFragment) {\r\n        let hash = customHashFragment || window.location.hash;\r\n        hash = decodeURIComponent(hash);\r\n        if (hash.indexOf('#') !== 0) {\r\n            return {};\r\n        }\r\n        const questionMarkPosition = hash.indexOf('?');\r\n        if (questionMarkPosition > -1) {\r\n            hash = hash.substr(questionMarkPosition + 1);\r\n        }\r\n        else {\r\n            hash = hash.substr(1);\r\n        }\r\n        return this.parseQueryString(hash);\r\n    }\r\n    parseQueryString(queryString) {\r\n        const data = {};\r\n        let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\r\n        if (queryString === null) {\r\n            return data;\r\n        }\r\n        pairs = queryString.split('&');\r\n        for (let i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            separatorIndex = pair.indexOf('=');\r\n            if (separatorIndex === -1) {\r\n                escapedKey = pair;\r\n                escapedValue = null;\r\n            }\r\n            else {\r\n                escapedKey = pair.substr(0, separatorIndex);\r\n                escapedValue = pair.substr(separatorIndex + 1);\r\n            }\r\n            key = decodeURIComponent(escapedKey);\r\n            value = decodeURIComponent(escapedValue);\r\n            if (key.substr(0, 1) === '/') {\r\n                key = key.substr(1);\r\n            }\r\n            data[key] = value;\r\n        }\r\n        return data;\r\n    }\r\n}\r\nUrlHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: UrlHelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nUrlHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: UrlHelperService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: UrlHelperService, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\r\n *\r\n * @version 0.9.0\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2014-2017\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\nfunction factory() {\r\n    var ERROR = 'input is invalid type';\r\n    var WINDOW = typeof window === 'object';\r\n    var root = WINDOW ? window : {};\r\n    if (root.JS_SHA256_NO_WINDOW) {\r\n        WINDOW = false;\r\n    }\r\n    var WEB_WORKER = !WINDOW && typeof self === 'object';\r\n    var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n    if (NODE_JS) {\r\n        root = global;\r\n    }\r\n    else if (WEB_WORKER) {\r\n        root = self;\r\n    }\r\n    var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n    var AMD = typeof define === 'function' && define.amd;\r\n    var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\r\n    const HEX_CHARS = '0123456789abcdef'.split('');\r\n    const EXTRA = [-2147483648, 8388608, 32768, 128];\r\n    const SHIFT = [24, 16, 8, 0];\r\n    const K = [\r\n        0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n        0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n        0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n        0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n        0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n        0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n        0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n        0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n    ];\r\n    const OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\r\n    var blocks = [];\r\n    if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\r\n        Array.isArray = function (obj) {\r\n            return Object.prototype.toString.call(obj) === '[object Array]';\r\n        };\r\n    }\r\n    if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\r\n        ArrayBuffer.isView = function (obj) {\r\n            return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\r\n        };\r\n    }\r\n    var createOutputMethod = function (outputType, is224) {\r\n        return function (message) {\r\n            return new Sha256(is224, true).update(message)[outputType]();\r\n        };\r\n    };\r\n    var createMethod = function (is224) {\r\n        var method = createOutputMethod('hex', is224);\r\n        if (NODE_JS) {\r\n            method = nodeWrap(method, is224);\r\n        }\r\n        method.create = function () {\r\n            return new Sha256(is224);\r\n        };\r\n        method.update = function (message) {\r\n            return method.create().update(message);\r\n        };\r\n        for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n            var type = OUTPUT_TYPES[i];\r\n            method[type] = createOutputMethod(type, is224);\r\n        }\r\n        return method;\r\n    };\r\n    var nodeWrap = function (method, is224) {\r\n        var crypto = eval(\"require('crypto')\");\r\n        var Buffer = eval(\"require('buffer').Buffer\");\r\n        var algorithm = is224 ? 'sha224' : 'sha256';\r\n        var nodeMethod = function (message) {\r\n            if (typeof message === 'string') {\r\n                return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\r\n            }\r\n            else {\r\n                if (message === null || message === undefined) {\r\n                    throw new Error(ERROR);\r\n                }\r\n                else if (message.constructor === ArrayBuffer) {\r\n                    message = new Uint8Array(message);\r\n                }\r\n            }\r\n            if (Array.isArray(message) || ArrayBuffer.isView(message) ||\r\n                message.constructor === Buffer) {\r\n                return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\r\n            }\r\n            else {\r\n                return method(message);\r\n            }\r\n        };\r\n        return nodeMethod;\r\n    };\r\n    var createHmacOutputMethod = function (outputType, is224) {\r\n        return function (key, message) {\r\n            return new HmacSha256(key, is224, true).update(message)[outputType]();\r\n        };\r\n    };\r\n    var createHmacMethod = function (is224) {\r\n        var method = createHmacOutputMethod('hex', is224);\r\n        method.create = function (key) {\r\n            return new HmacSha256(key, is224);\r\n        };\r\n        method.update = function (key, message) {\r\n            return method.create(key).update(message);\r\n        };\r\n        for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n            var type = OUTPUT_TYPES[i];\r\n            method[type] = createHmacOutputMethod(type, is224);\r\n        }\r\n        return method;\r\n    };\r\n    function Sha256(is224, sharedMemory) {\r\n        if (sharedMemory) {\r\n            blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n                blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n                    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n                        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n            this.blocks = blocks;\r\n        }\r\n        else {\r\n            this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        }\r\n        if (is224) {\r\n            this.h0 = 0xc1059ed8;\r\n            this.h1 = 0x367cd507;\r\n            this.h2 = 0x3070dd17;\r\n            this.h3 = 0xf70e5939;\r\n            this.h4 = 0xffc00b31;\r\n            this.h5 = 0x68581511;\r\n            this.h6 = 0x64f98fa7;\r\n            this.h7 = 0xbefa4fa4;\r\n        }\r\n        else { // 256\r\n            this.h0 = 0x6a09e667;\r\n            this.h1 = 0xbb67ae85;\r\n            this.h2 = 0x3c6ef372;\r\n            this.h3 = 0xa54ff53a;\r\n            this.h4 = 0x510e527f;\r\n            this.h5 = 0x9b05688c;\r\n            this.h6 = 0x1f83d9ab;\r\n            this.h7 = 0x5be0cd19;\r\n        }\r\n        this.block = this.start = this.bytes = this.hBytes = 0;\r\n        this.finalized = this.hashed = false;\r\n        this.first = true;\r\n        this.is224 = is224;\r\n    }\r\n    Sha256.prototype.update = function (message) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        var notString, type = typeof message;\r\n        if (type !== 'string') {\r\n            if (type === 'object') {\r\n                if (message === null) {\r\n                    throw new Error(ERROR);\r\n                }\r\n                else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\r\n                    message = new Uint8Array(message);\r\n                }\r\n                else if (!Array.isArray(message)) {\r\n                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\r\n                        throw new Error(ERROR);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(ERROR);\r\n            }\r\n            notString = true;\r\n        }\r\n        var code, index = 0, i, length = message.length, blocks = this.blocks;\r\n        while (index < length) {\r\n            if (this.hashed) {\r\n                this.hashed = false;\r\n                blocks[0] = this.block;\r\n                blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n                    blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n                        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n                            blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n            }\r\n            if (notString) {\r\n                for (i = this.start; index < length && i < 64; ++index) {\r\n                    blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n                }\r\n            }\r\n            else {\r\n                for (i = this.start; index < length && i < 64; ++index) {\r\n                    code = message.charCodeAt(index);\r\n                    if (code < 0x80) {\r\n                        blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n                    }\r\n                    else if (code < 0x800) {\r\n                        blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n                    }\r\n                    else if (code < 0xd800 || code >= 0xe000) {\r\n                        blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n                    }\r\n                    else {\r\n                        code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n                        blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n                    }\r\n                }\r\n            }\r\n            this.lastByteIndex = i;\r\n            this.bytes += i - this.start;\r\n            if (i >= 64) {\r\n                this.block = blocks[16];\r\n                this.start = i - 64;\r\n                this.hash();\r\n                this.hashed = true;\r\n            }\r\n            else {\r\n                this.start = i;\r\n            }\r\n        }\r\n        if (this.bytes > 4294967295) {\r\n            this.hBytes += this.bytes / 4294967296 << 0;\r\n            this.bytes = this.bytes % 4294967296;\r\n        }\r\n        return this;\r\n    };\r\n    Sha256.prototype.finalize = function () {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        var blocks = this.blocks, i = this.lastByteIndex;\r\n        blocks[16] = this.block;\r\n        blocks[i >> 2] |= EXTRA[i & 3];\r\n        this.block = blocks[16];\r\n        if (i >= 56) {\r\n            if (!this.hashed) {\r\n                this.hash();\r\n            }\r\n            blocks[0] = this.block;\r\n            blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n                blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n                    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n                        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n        }\r\n        blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\r\n        blocks[15] = this.bytes << 3;\r\n        this.hash();\r\n    };\r\n    Sha256.prototype.hash = function () {\r\n        var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6, h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\r\n        for (j = 16; j < 64; ++j) {\r\n            // rightrotate\r\n            t1 = blocks[j - 15];\r\n            s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\r\n            t1 = blocks[j - 2];\r\n            s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\r\n            blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\r\n        }\r\n        bc = b & c;\r\n        for (j = 0; j < 64; j += 4) {\r\n            if (this.first) {\r\n                if (this.is224) {\r\n                    ab = 300032;\r\n                    t1 = blocks[0] - 1413257819;\r\n                    h = t1 - 150054599 << 0;\r\n                    d = t1 + 24177077 << 0;\r\n                }\r\n                else {\r\n                    ab = 704751109;\r\n                    t1 = blocks[0] - 210244248;\r\n                    h = t1 - 1521486534 << 0;\r\n                    d = t1 + 143694565 << 0;\r\n                }\r\n                this.first = false;\r\n            }\r\n            else {\r\n                s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\r\n                s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\r\n                ab = a & b;\r\n                maj = ab ^ (a & c) ^ bc;\r\n                ch = (e & f) ^ (~e & g);\r\n                t1 = h + s1 + ch + K[j] + blocks[j];\r\n                t2 = s0 + maj;\r\n                h = d + t1 << 0;\r\n                d = t1 + t2 << 0;\r\n            }\r\n            s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\r\n            s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\r\n            da = d & a;\r\n            maj = da ^ (d & b) ^ ab;\r\n            ch = (h & e) ^ (~h & f);\r\n            t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\r\n            t2 = s0 + maj;\r\n            g = c + t1 << 0;\r\n            c = t1 + t2 << 0;\r\n            s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\r\n            s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\r\n            cd = c & d;\r\n            maj = cd ^ (c & a) ^ da;\r\n            ch = (g & h) ^ (~g & e);\r\n            t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\r\n            t2 = s0 + maj;\r\n            f = b + t1 << 0;\r\n            b = t1 + t2 << 0;\r\n            s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\r\n            s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\r\n            bc = b & c;\r\n            maj = bc ^ (b & d) ^ cd;\r\n            ch = (f & g) ^ (~f & h);\r\n            t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\r\n            t2 = s0 + maj;\r\n            e = a + t1 << 0;\r\n            a = t1 + t2 << 0;\r\n        }\r\n        this.h0 = this.h0 + a << 0;\r\n        this.h1 = this.h1 + b << 0;\r\n        this.h2 = this.h2 + c << 0;\r\n        this.h3 = this.h3 + d << 0;\r\n        this.h4 = this.h4 + e << 0;\r\n        this.h5 = this.h5 + f << 0;\r\n        this.h6 = this.h6 + g << 0;\r\n        this.h7 = this.h7 + h << 0;\r\n    };\r\n    Sha256.prototype.hex = function () {\r\n        this.finalize();\r\n        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;\r\n        var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\r\n            HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\r\n            HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\r\n            HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\r\n            HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\r\n            HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\r\n            HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\r\n        if (!this.is224) {\r\n            hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\r\n                HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\r\n                HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\r\n                HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\r\n        }\r\n        return hex;\r\n    };\r\n    Sha256.prototype.toString = Sha256.prototype.hex;\r\n    Sha256.prototype.digest = function () {\r\n        this.finalize();\r\n        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;\r\n        var arr = [\r\n            (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\r\n            (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\r\n            (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\r\n            (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\r\n            (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\r\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\r\n            (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\r\n        ];\r\n        if (!this.is224) {\r\n            arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\r\n        }\r\n        return arr;\r\n    };\r\n    Sha256.prototype.array = Sha256.prototype.digest;\r\n    Sha256.prototype.arrayBuffer = function () {\r\n        this.finalize();\r\n        var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\r\n        var dataView = new DataView(buffer);\r\n        dataView.setUint32(0, this.h0);\r\n        dataView.setUint32(4, this.h1);\r\n        dataView.setUint32(8, this.h2);\r\n        dataView.setUint32(12, this.h3);\r\n        dataView.setUint32(16, this.h4);\r\n        dataView.setUint32(20, this.h5);\r\n        dataView.setUint32(24, this.h6);\r\n        if (!this.is224) {\r\n            dataView.setUint32(28, this.h7);\r\n        }\r\n        return buffer;\r\n    };\r\n    function HmacSha256(key, is224, sharedMemory) {\r\n        var i, type = typeof key;\r\n        if (type === 'string') {\r\n            var bytes = [], length = key.length, index = 0, code;\r\n            for (i = 0; i < length; ++i) {\r\n                code = key.charCodeAt(i);\r\n                if (code < 0x80) {\r\n                    bytes[index++] = code;\r\n                }\r\n                else if (code < 0x800) {\r\n                    bytes[index++] = (0xc0 | (code >> 6));\r\n                    bytes[index++] = (0x80 | (code & 0x3f));\r\n                }\r\n                else if (code < 0xd800 || code >= 0xe000) {\r\n                    bytes[index++] = (0xe0 | (code >> 12));\r\n                    bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\r\n                    bytes[index++] = (0x80 | (code & 0x3f));\r\n                }\r\n                else {\r\n                    code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\r\n                    bytes[index++] = (0xf0 | (code >> 18));\r\n                    bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\r\n                    bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\r\n                    bytes[index++] = (0x80 | (code & 0x3f));\r\n                }\r\n            }\r\n            key = bytes;\r\n        }\r\n        else {\r\n            if (type === 'object') {\r\n                if (key === null) {\r\n                    throw new Error(ERROR);\r\n                }\r\n                else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\r\n                    key = new Uint8Array(key);\r\n                }\r\n                else if (!Array.isArray(key)) {\r\n                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\r\n                        throw new Error(ERROR);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(ERROR);\r\n            }\r\n        }\r\n        if (key.length > 64) {\r\n            key = (new Sha256(is224, true)).update(key).array();\r\n        }\r\n        var oKeyPad = [], iKeyPad = [];\r\n        for (i = 0; i < 64; ++i) {\r\n            var b = key[i] || 0;\r\n            oKeyPad[i] = 0x5c ^ b;\r\n            iKeyPad[i] = 0x36 ^ b;\r\n        }\r\n        Sha256.call(this, is224, sharedMemory);\r\n        this.update(iKeyPad);\r\n        this.oKeyPad = oKeyPad;\r\n        this.inner = true;\r\n        this.sharedMemory = sharedMemory;\r\n    }\r\n    HmacSha256.prototype = new Sha256();\r\n    HmacSha256.prototype.finalize = function () {\r\n        Sha256.prototype.finalize.call(this);\r\n        if (this.inner) {\r\n            this.inner = false;\r\n            var innerHash = this.array();\r\n            Sha256.call(this, this.is224, this.sharedMemory);\r\n            this.update(this.oKeyPad);\r\n            this.update(innerHash);\r\n            Sha256.prototype.finalize.call(this);\r\n        }\r\n    };\r\n    var exports = createMethod();\r\n    exports.sha256 = exports;\r\n    exports.sha224 = createMethod(true);\r\n    exports.sha256.hmac = createHmacMethod();\r\n    exports.sha224.hmac = createHmacMethod(true);\r\n    return exports;\r\n}\n\nconst sha256 = factory();\r\n/**\r\n * Abstraction for crypto algorithms\r\n */\r\nclass HashHandler {\r\n}\r\nfunction decodeUTF8(s) {\r\n    if (typeof s !== 'string')\r\n        throw new TypeError('expected string');\r\n    var i, d = s, b = new Uint8Array(d.length);\r\n    for (i = 0; i < d.length; i++)\r\n        b[i] = d.charCodeAt(i);\r\n    return b;\r\n}\r\nfunction encodeUTF8(arr) {\r\n    var i, s = [];\r\n    for (i = 0; i < arr.length; i++)\r\n        s.push(String.fromCharCode(arr[i]));\r\n    return s.join('');\r\n}\r\nclass DefaultHashHandler {\r\n    calcHash(valueToHash, algorithm) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // const encoder = new TextEncoder();\r\n            // const hashArray = await window.crypto.subtle.digest(algorithm, data);\r\n            // const data = encoder.encode(valueToHash);\r\n            // const fhash = fsha256(valueToHash);\r\n            const candHash = encodeUTF8(fsha256(decodeUTF8(valueToHash)));\r\n            // const hashArray = (sha256 as any).array(valueToHash);\r\n            // // const hashString = this.toHashString(hashArray);\r\n            // const hashString = this.toHashString2(hashArray);\r\n            // console.debug('hash orig - cand', candHash, hashString);\r\n            // alert(1);\r\n            return candHash;\r\n        });\r\n    }\r\n    toHashString2(byteArray) {\r\n        let result = '';\r\n        for (let e of byteArray) {\r\n            result += String.fromCharCode(e);\r\n        }\r\n        return result;\r\n    }\r\n    toHashString(buffer) {\r\n        const byteArray = new Uint8Array(buffer);\r\n        let result = '';\r\n        for (let e of byteArray) {\r\n            result += String.fromCharCode(e);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nDefaultHashHandler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultHashHandler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nDefaultHashHandler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultHashHandler });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultHashHandler, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\r\nclass OAuthService extends AuthConfig {\r\n    constructor(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document, dateTimeService) {\r\n        var _a;\r\n        super();\r\n        this.ngZone = ngZone;\r\n        this.http = http;\r\n        this.config = config;\r\n        this.urlHelper = urlHelper;\r\n        this.logger = logger;\r\n        this.crypto = crypto;\r\n        this.dateTimeService = dateTimeService;\r\n        /**\r\n         * @internal\r\n         * Deprecated:  use property events instead\r\n         */\r\n        this.discoveryDocumentLoaded = false;\r\n        /**\r\n         * The received (passed around) state, when logging\r\n         * in with implicit flow.\r\n         */\r\n        this.state = '';\r\n        this.eventsSubject = new Subject();\r\n        this.discoveryDocumentLoadedSubject = new Subject();\r\n        this.grantTypesSupported = [];\r\n        this.inImplicitFlow = false;\r\n        this.saveNoncesInLocalStorage = false;\r\n        this.debug('angular-oauth2-oidc v10');\r\n        // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed\r\n        this.document = document;\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        this.discoveryDocumentLoaded$ =\r\n            this.discoveryDocumentLoadedSubject.asObservable();\r\n        this.events = this.eventsSubject.asObservable();\r\n        if (tokenValidationHandler) {\r\n            this.tokenValidationHandler = tokenValidationHandler;\r\n        }\r\n        if (config) {\r\n            this.configure(config);\r\n        }\r\n        try {\r\n            if (storage) {\r\n                this.setStorage(storage);\r\n            }\r\n            else if (typeof sessionStorage !== 'undefined') {\r\n                this.setStorage(sessionStorage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error('No OAuthStorage provided and cannot access default (sessionStorage).' +\r\n                'Consider providing a custom OAuthStorage implementation in your module.', e);\r\n        }\r\n        // in IE, sessionStorage does not always survive a redirect\r\n        if (this.checkLocalStorageAccessable()) {\r\n            const ua = (_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent;\r\n            const msie = (ua === null || ua === void 0 ? void 0 : ua.includes('MSIE ')) || (ua === null || ua === void 0 ? void 0 : ua.includes('Trident'));\r\n            if (msie) {\r\n                this.saveNoncesInLocalStorage = true;\r\n            }\r\n        }\r\n        this.setupRefreshTimer();\r\n    }\r\n    checkLocalStorageAccessable() {\r\n        if (typeof window === 'undefined')\r\n            return false;\r\n        const test = 'test';\r\n        try {\r\n            if (typeof window['localStorage'] === 'undefined')\r\n                return false;\r\n            localStorage.setItem(test, test);\r\n            localStorage.removeItem(test);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to configure the service\r\n     * @param config the configuration\r\n     */\r\n    configure(config) {\r\n        // For the sake of downward compatibility with\r\n        // original configuration API\r\n        Object.assign(this, new AuthConfig(), config);\r\n        this.config = Object.assign({}, new AuthConfig(), config);\r\n        if (this.sessionChecksEnabled) {\r\n            this.setupSessionCheck();\r\n        }\r\n        this.configChanged();\r\n    }\r\n    configChanged() {\r\n        this.setupRefreshTimer();\r\n    }\r\n    restartSessionChecksIfStillLoggedIn() {\r\n        if (this.hasValidIdToken()) {\r\n            this.initSessionCheck();\r\n        }\r\n    }\r\n    restartRefreshTimerIfStillLoggedIn() {\r\n        this.setupExpirationTimers();\r\n    }\r\n    setupSessionCheck() {\r\n        this.events\r\n            .pipe(filter((e) => e.type === 'token_received'))\r\n            .subscribe((e) => {\r\n            this.initSessionCheck();\r\n        });\r\n    }\r\n    /**\r\n     * Will setup up silent refreshing for when the token is\r\n     * about to expire. When the user is logged out via this.logOut method, the\r\n     * silent refreshing will pause and not refresh the tokens until the user is\r\n     * logged back in via receiving a new token.\r\n     * @param params Additional parameter to pass\r\n     * @param listenTo Setup automatic refresh of a specific token type\r\n     */\r\n    setupAutomaticSilentRefresh(params = {}, listenTo, noPrompt = true) {\r\n        let shouldRunSilentRefresh = true;\r\n        this.clearAutomaticRefreshTimer();\r\n        this.automaticRefreshSubscription = this.events\r\n            .pipe(tap((e) => {\r\n            if (e.type === 'token_received') {\r\n                shouldRunSilentRefresh = true;\r\n            }\r\n            else if (e.type === 'logout') {\r\n                shouldRunSilentRefresh = false;\r\n            }\r\n        }), filter((e) => e.type === 'token_expires' &&\r\n            (listenTo == null || listenTo === 'any' || e.info === listenTo)), debounceTime(1000))\r\n            .subscribe((_) => {\r\n            if (shouldRunSilentRefresh) {\r\n                // this.silentRefresh(params, noPrompt).catch(_ => {\r\n                this.refreshInternal(params, noPrompt).catch((_) => {\r\n                    this.debug('Automatic silent refresh did not work');\r\n                });\r\n            }\r\n        });\r\n        this.restartRefreshTimerIfStillLoggedIn();\r\n    }\r\n    refreshInternal(params, noPrompt) {\r\n        if (!this.useSilentRefresh && this.responseType === 'code') {\r\n            return this.refreshToken();\r\n        }\r\n        else {\r\n            return this.silentRefresh(params, noPrompt);\r\n        }\r\n    }\r\n    /**\r\n     * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n     * directly chains using the `then(...)` part of the promise to call\r\n     * the `tryLogin(...)` method.\r\n     *\r\n     * @param options LoginOptions to pass through to `tryLogin(...)`\r\n     */\r\n    loadDiscoveryDocumentAndTryLogin(options = null) {\r\n        return this.loadDiscoveryDocument().then((doc) => {\r\n            return this.tryLogin(options);\r\n        });\r\n    }\r\n    /**\r\n     * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n     * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n     * IdToken or no valid AccessToken.\r\n     *\r\n     * @param options LoginOptions to pass through to `tryLogin(...)`\r\n     */\r\n    loadDiscoveryDocumentAndLogin(options = null) {\r\n        options = options || {};\r\n        return this.loadDiscoveryDocumentAndTryLogin(options).then((_) => {\r\n            if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\r\n                const state = typeof options.state === 'string' ? options.state : '';\r\n                this.initLoginFlow(state);\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n    debug(...args) {\r\n        if (this.showDebugInformation) {\r\n            this.logger.debug.apply(this.logger, args);\r\n        }\r\n    }\r\n    validateUrlFromDiscoveryDocument(url) {\r\n        const errors = [];\r\n        const httpsCheck = this.validateUrlForHttps(url);\r\n        const issuerCheck = this.validateUrlAgainstIssuer(url);\r\n        if (!httpsCheck) {\r\n            errors.push('https for all urls required. Also for urls received by discovery.');\r\n        }\r\n        if (!issuerCheck) {\r\n            errors.push('Every url in discovery document has to start with the issuer url.' +\r\n                'Also see property strictDiscoveryDocumentValidation.');\r\n        }\r\n        return errors;\r\n    }\r\n    validateUrlForHttps(url) {\r\n        if (!url) {\r\n            return true;\r\n        }\r\n        const lcUrl = url.toLowerCase();\r\n        if (this.requireHttps === false) {\r\n            return true;\r\n        }\r\n        if ((lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) ||\r\n            lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) &&\r\n            this.requireHttps === 'remoteOnly') {\r\n            return true;\r\n        }\r\n        return lcUrl.startsWith('https://');\r\n    }\r\n    assertUrlNotNullAndCorrectProtocol(url, description) {\r\n        if (!url) {\r\n            throw new Error(`'${description}' should not be null`);\r\n        }\r\n        if (!this.validateUrlForHttps(url)) {\r\n            throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\r\n        }\r\n    }\r\n    validateUrlAgainstIssuer(url) {\r\n        if (!this.strictDiscoveryDocumentValidation) {\r\n            return true;\r\n        }\r\n        if (!url) {\r\n            return true;\r\n        }\r\n        return url.toLowerCase().startsWith(this.issuer.toLowerCase());\r\n    }\r\n    setupRefreshTimer() {\r\n        if (typeof window === 'undefined') {\r\n            this.debug('timer not supported on this plattform');\r\n            return;\r\n        }\r\n        if (this.hasValidIdToken() || this.hasValidAccessToken()) {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        }\r\n        if (this.tokenReceivedSubscription)\r\n            this.tokenReceivedSubscription.unsubscribe();\r\n        this.tokenReceivedSubscription = this.events\r\n            .pipe(filter((e) => e.type === 'token_received'))\r\n            .subscribe((_) => {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        });\r\n    }\r\n    setupExpirationTimers() {\r\n        if (this.hasValidAccessToken()) {\r\n            this.setupAccessTokenTimer();\r\n        }\r\n        if (this.hasValidIdToken()) {\r\n            this.setupIdTokenTimer();\r\n        }\r\n    }\r\n    setupAccessTokenTimer() {\r\n        const expiration = this.getAccessTokenExpiration();\r\n        const storedAt = this.getAccessTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.accessTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'access_token'))\r\n                .pipe(delay(timeout))\r\n                .subscribe((e) => {\r\n                this.ngZone.run(() => {\r\n                    this.eventsSubject.next(e);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    setupIdTokenTimer() {\r\n        const expiration = this.getIdTokenExpiration();\r\n        const storedAt = this.getIdTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.idTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'id_token'))\r\n                .pipe(delay(timeout))\r\n                .subscribe((e) => {\r\n                this.ngZone.run(() => {\r\n                    this.eventsSubject.next(e);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Stops timers for automatic refresh.\r\n     * To restart it, call setupAutomaticSilentRefresh again.\r\n     */\r\n    stopAutomaticRefresh() {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n        this.clearAutomaticRefreshTimer();\r\n    }\r\n    clearAccessTokenTimer() {\r\n        if (this.accessTokenTimeoutSubscription) {\r\n            this.accessTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n    clearIdTokenTimer() {\r\n        if (this.idTokenTimeoutSubscription) {\r\n            this.idTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n    clearAutomaticRefreshTimer() {\r\n        if (this.automaticRefreshSubscription) {\r\n            this.automaticRefreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    calcTimeout(storedAt, expiration) {\r\n        const now = this.dateTimeService.now();\r\n        const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\r\n        return Math.max(0, delta);\r\n    }\r\n    /**\r\n     * DEPRECATED. Use a provider for OAuthStorage instead:\r\n     *\r\n     * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n     * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n     * Sets a custom storage used to store the received\r\n     * tokens on client side. By default, the browser's\r\n     * sessionStorage is used.\r\n     * @ignore\r\n     *\r\n     * @param storage\r\n     */\r\n    setStorage(storage) {\r\n        this._storage = storage;\r\n        this.configChanged();\r\n    }\r\n    /**\r\n     * Loads the discovery document to configure most\r\n     * properties of this service. The url of the discovery\r\n     * document is infered from the issuer's url according\r\n     * to the OpenId Connect spec. To use another url you\r\n     * can pass it to to optional parameter fullUrl.\r\n     *\r\n     * @param fullUrl\r\n     */\r\n    loadDiscoveryDocument(fullUrl = null) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!fullUrl) {\r\n                fullUrl = this.issuer || '';\r\n                if (!fullUrl.endsWith('/')) {\r\n                    fullUrl += '/';\r\n                }\r\n                fullUrl += '.well-known/openid-configuration';\r\n            }\r\n            if (!this.validateUrlForHttps(fullUrl)) {\r\n                reject(\"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n                return;\r\n            }\r\n            this.http.get(fullUrl).subscribe((doc) => {\r\n                if (!this.validateDiscoveryDocument(doc)) {\r\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\r\n                    reject('discovery_document_validation_error');\r\n                    return;\r\n                }\r\n                this.loginUrl = doc.authorization_endpoint;\r\n                this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\r\n                this.grantTypesSupported = doc.grant_types_supported;\r\n                this.issuer = doc.issuer;\r\n                this.tokenEndpoint = doc.token_endpoint;\r\n                this.userinfoEndpoint =\r\n                    doc.userinfo_endpoint || this.userinfoEndpoint;\r\n                this.jwksUri = doc.jwks_uri;\r\n                this.sessionCheckIFrameUrl =\r\n                    doc.check_session_iframe || this.sessionCheckIFrameUrl;\r\n                this.discoveryDocumentLoaded = true;\r\n                this.discoveryDocumentLoadedSubject.next(doc);\r\n                this.revocationEndpoint =\r\n                    doc.revocation_endpoint || this.revocationEndpoint;\r\n                if (this.sessionChecksEnabled) {\r\n                    this.restartSessionChecksIfStillLoggedIn();\r\n                }\r\n                this.loadJwks()\r\n                    .then((jwks) => {\r\n                    const result = {\r\n                        discoveryDocument: doc,\r\n                        jwks: jwks,\r\n                    };\r\n                    const event = new OAuthSuccessEvent('discovery_document_loaded', result);\r\n                    this.eventsSubject.next(event);\r\n                    resolve(event);\r\n                    return;\r\n                })\r\n                    .catch((err) => {\r\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\r\n                    reject(err);\r\n                    return;\r\n                });\r\n            }, (err) => {\r\n                this.logger.error('error loading discovery document', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    loadJwks() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.jwksUri) {\r\n                this.http.get(this.jwksUri).subscribe((jwks) => {\r\n                    this.jwks = jwks;\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('discovery_document_loaded'));\r\n                    resolve(jwks);\r\n                }, (err) => {\r\n                    this.logger.error('error loading jwks', err);\r\n                    this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\r\n                    reject(err);\r\n                });\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    }\r\n    validateDiscoveryDocument(doc) {\r\n        let errors;\r\n        if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\r\n            this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating authorization_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating end_session_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating token_endpoint in discovery document', errors);\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating revocation_endpoint in discovery document', errors);\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating userinfo_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating jwks_uri in discovery document', errors);\r\n            return false;\r\n        }\r\n        if (this.sessionChecksEnabled && !doc.check_session_iframe) {\r\n            this.logger.warn('sessionChecksEnabled is activated but discovery document' +\r\n                ' does not contain a check_session_iframe field');\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Uses password flow to exchange userName and password for an\r\n     * access_token. After receiving the access_token, this method\r\n     * uses it to query the userinfo endpoint in order to get information\r\n     * about the user in question.\r\n     *\r\n     * When using this, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take place that make this operation\r\n     * fail.\r\n     *\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password, headers = new HttpHeaders()) {\r\n        return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(() => this.loadUserProfile());\r\n    }\r\n    /**\r\n     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n     *\r\n     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take place that make this operation fail.\r\n     */\r\n    loadUserProfile() {\r\n        if (!this.hasValidAccessToken()) {\r\n            throw new Error('Can not load User Profile without access_token');\r\n        }\r\n        if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\r\n            throw new Error(\"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAccessToken());\r\n            this.http\r\n                .get(this.userinfoEndpoint, {\r\n                headers,\r\n                observe: 'response',\r\n                responseType: 'text',\r\n            })\r\n                .subscribe((response) => {\r\n                this.debug('userinfo received', JSON.stringify(response));\r\n                if (response.headers\r\n                    .get('content-type')\r\n                    .startsWith('application/json')) {\r\n                    let info = JSON.parse(response.body);\r\n                    const existingClaims = this.getIdentityClaims() || {};\r\n                    if (!this.skipSubjectCheck) {\r\n                        if (this.oidc &&\r\n                            (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {\r\n                            const err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' +\r\n                                'of the user that has logged in with oidc.\\n' +\r\n                                'if you are not using oidc but just oauth2 password flow set oidc to false';\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                    }\r\n                    info = Object.assign({}, existingClaims, info);\r\n                    this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\r\n                    resolve({ info });\r\n                }\r\n                else {\r\n                    this.debug('userinfo is not JSON, treating it as JWE/JWS');\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\r\n                    resolve(JSON.parse(response.body));\r\n                }\r\n            }, (err) => {\r\n                this.logger.error('error loading user info', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Uses password flow to exchange userName and password for an access_token.\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    fetchTokenUsingPasswordFlow(userName, password, headers = new HttpHeaders()) {\r\n        const parameters = {\r\n            username: userName,\r\n            password: password,\r\n        };\r\n        return this.fetchTokenUsingGrant('password', parameters, headers);\r\n    }\r\n    /**\r\n     * Uses a custom grant type to retrieve tokens.\r\n     * @param grantType Grant type.\r\n     * @param parameters Parameters to pass.\r\n     * @param headers Optional additional HTTP headers.\r\n     */\r\n    fetchTokenUsingGrant(grantType, parameters, headers = new HttpHeaders()) {\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        /**\r\n         * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n         * serialize and parse URL parameter keys and values.\r\n         *\r\n         * @stable\r\n         */\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n            .set('grant_type', grantType)\r\n            .set('scope', this.scope);\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                params = params.set(key, this.customQueryParams[key]);\r\n            }\r\n        }\r\n        // set explicit parameters last, to allow overwriting\r\n        for (const key of Object.keys(parameters)) {\r\n            params = params.set(key, parameters[key]);\r\n        }\r\n        headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n        return new Promise((resolve, reject) => {\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                if (this.oidc && tokenResponse.id_token) {\r\n                    this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then((result) => {\r\n                        this.storeIdToken(result);\r\n                        resolve(tokenResponse);\r\n                    });\r\n                }\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                resolve(tokenResponse);\r\n            }, (err) => {\r\n                this.logger.error('Error performing ${grantType} flow', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Refreshes the token using a refresh_token.\r\n     * This does not work for implicit flow, b/c\r\n     * there is no refresh_token in this flow.\r\n     * A solution for this is provided by the\r\n     * method silentRefresh.\r\n     */\r\n    refreshToken() {\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        return new Promise((resolve, reject) => {\r\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n                .set('grant_type', 'refresh_token')\r\n                .set('scope', this.scope)\r\n                .set('refresh_token', this._storage.getItem('refresh_token'));\r\n            let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n            if (this.useHttpBasicAuth) {\r\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n                headers = headers.set('Authorization', 'Basic ' + header);\r\n            }\r\n            if (!this.useHttpBasicAuth) {\r\n                params = params.set('client_id', this.clientId);\r\n            }\r\n            if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n                params = params.set('client_secret', this.dummyClientSecret);\r\n            }\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .pipe(switchMap((tokenResponse) => {\r\n                if (tokenResponse.id_token) {\r\n                    return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(tap((result) => this.storeIdToken(result)), map((_) => tokenResponse));\r\n                }\r\n                else {\r\n                    return of(tokenResponse);\r\n                }\r\n            }))\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('refresh tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                resolve(tokenResponse);\r\n            }, (err) => {\r\n                this.logger.error('Error refreshing token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    removeSilentRefreshEventListener() {\r\n        if (this.silentRefreshPostMessageEventListener) {\r\n            window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\r\n            this.silentRefreshPostMessageEventListener = null;\r\n        }\r\n    }\r\n    setupSilentRefreshEventListener() {\r\n        this.removeSilentRefreshEventListener();\r\n        this.silentRefreshPostMessageEventListener = (e) => {\r\n            const message = this.processMessageEventMessage(e);\r\n            this.tryLogin({\r\n                customHashFragment: message,\r\n                preventClearHashAfterLogin: true,\r\n                customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri,\r\n            }).catch((err) => this.debug('tryLogin during silent refresh failed', err));\r\n        };\r\n        window.addEventListener('message', this.silentRefreshPostMessageEventListener);\r\n    }\r\n    /**\r\n     * Performs a silent refresh for implicit flow.\r\n     * Use this method to get new tokens when/before\r\n     * the existing tokens expire.\r\n     */\r\n    silentRefresh(params = {}, noPrompt = true) {\r\n        const claims = this.getIdentityClaims() || {};\r\n        if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\r\n            params['id_token_hint'] = this.getIdToken();\r\n        }\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        if (typeof this.document === 'undefined') {\r\n            throw new Error('silent refresh is not supported on this platform');\r\n        }\r\n        const existingIframe = this.document.getElementById(this.silentRefreshIFrameName);\r\n        if (existingIframe) {\r\n            this.document.body.removeChild(existingIframe);\r\n        }\r\n        this.silentRefreshSubject = claims['sub'];\r\n        const iframe = this.document.createElement('iframe');\r\n        iframe.id = this.silentRefreshIFrameName;\r\n        this.setupSilentRefreshEventListener();\r\n        const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\r\n        this.createLoginUrl(null, null, redirectUri, noPrompt, params).then((url) => {\r\n            iframe.setAttribute('src', url);\r\n            if (!this.silentRefreshShowIFrame) {\r\n                iframe.style['display'] = 'none';\r\n            }\r\n            this.document.body.appendChild(iframe);\r\n        });\r\n        const errors = this.events.pipe(filter((e) => e instanceof OAuthErrorEvent), first());\r\n        const success = this.events.pipe(filter((e) => e.type === 'token_received'), first());\r\n        const timeout = of(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(delay(this.silentRefreshTimeout));\r\n        return race([errors, success, timeout])\r\n            .pipe(map((e) => {\r\n            if (e instanceof OAuthErrorEvent) {\r\n                if (e.type === 'silent_refresh_timeout') {\r\n                    this.eventsSubject.next(e);\r\n                }\r\n                else {\r\n                    e = new OAuthErrorEvent('silent_refresh_error', e);\r\n                    this.eventsSubject.next(e);\r\n                }\r\n                throw e;\r\n            }\r\n            else if (e.type === 'token_received') {\r\n                e = new OAuthSuccessEvent('silently_refreshed');\r\n                this.eventsSubject.next(e);\r\n            }\r\n            return e;\r\n        }))\r\n            .toPromise();\r\n    }\r\n    /**\r\n     * This method exists for backwards compatibility.\r\n     * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n     * and implicit flows.\r\n     */\r\n    initImplicitFlowInPopup(options) {\r\n        return this.initLoginFlowInPopup(options);\r\n    }\r\n    initLoginFlowInPopup(options) {\r\n        options = options || {};\r\n        return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\r\n            display: 'popup',\r\n        }).then((url) => {\r\n            return new Promise((resolve, reject) => {\r\n                /**\r\n                 * Error handling section\r\n                 */\r\n                const checkForPopupClosedInterval = 500;\r\n                let windowRef = null;\r\n                // If we got no window reference we open a window\r\n                // else we are using the window already opened\r\n                if (!options.windowRef) {\r\n                    windowRef = window.open(url, 'ngx-oauth2-oidc-login', this.calculatePopupFeatures(options));\r\n                }\r\n                else if (options.windowRef && !options.windowRef.closed) {\r\n                    windowRef = options.windowRef;\r\n                    windowRef.location.href = url;\r\n                }\r\n                let checkForPopupClosedTimer;\r\n                const tryLogin = (hash) => {\r\n                    this.tryLogin({\r\n                        customHashFragment: hash,\r\n                        preventClearHashAfterLogin: true,\r\n                        customRedirectUri: this.silentRefreshRedirectUri,\r\n                    }).then(() => {\r\n                        cleanup();\r\n                        resolve(true);\r\n                    }, (err) => {\r\n                        cleanup();\r\n                        reject(err);\r\n                    });\r\n                };\r\n                const checkForPopupClosed = () => {\r\n                    if (!windowRef || windowRef.closed) {\r\n                        cleanup();\r\n                        reject(new OAuthErrorEvent('popup_closed', {}));\r\n                    }\r\n                };\r\n                if (!windowRef) {\r\n                    reject(new OAuthErrorEvent('popup_blocked', {}));\r\n                }\r\n                else {\r\n                    checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\r\n                }\r\n                const cleanup = () => {\r\n                    window.clearInterval(checkForPopupClosedTimer);\r\n                    window.removeEventListener('storage', storageListener);\r\n                    window.removeEventListener('message', listener);\r\n                    if (windowRef !== null) {\r\n                        windowRef.close();\r\n                    }\r\n                    windowRef = null;\r\n                };\r\n                const listener = (e) => {\r\n                    const message = this.processMessageEventMessage(e);\r\n                    if (message && message !== null) {\r\n                        window.removeEventListener('storage', storageListener);\r\n                        tryLogin(message);\r\n                    }\r\n                    else {\r\n                        console.log('false event firing');\r\n                    }\r\n                };\r\n                const storageListener = (event) => {\r\n                    if (event.key === 'auth_hash') {\r\n                        window.removeEventListener('message', listener);\r\n                        tryLogin(event.newValue);\r\n                    }\r\n                };\r\n                window.addEventListener('message', listener);\r\n                window.addEventListener('storage', storageListener);\r\n            });\r\n        });\r\n    }\r\n    calculatePopupFeatures(options) {\r\n        // Specify an static height and width and calculate centered position\r\n        const height = options.height || 470;\r\n        const width = options.width || 500;\r\n        const left = window.screenLeft + (window.outerWidth - width) / 2;\r\n        const top = window.screenTop + (window.outerHeight - height) / 2;\r\n        return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\r\n    }\r\n    processMessageEventMessage(e) {\r\n        let expectedPrefix = '#';\r\n        if (this.silentRefreshMessagePrefix) {\r\n            expectedPrefix += this.silentRefreshMessagePrefix;\r\n        }\r\n        if (!e || !e.data || typeof e.data !== 'string') {\r\n            return;\r\n        }\r\n        const prefixedMessage = e.data;\r\n        if (!prefixedMessage.startsWith(expectedPrefix)) {\r\n            return;\r\n        }\r\n        return '#' + prefixedMessage.substr(expectedPrefix.length);\r\n    }\r\n    canPerformSessionCheck() {\r\n        if (!this.sessionChecksEnabled) {\r\n            return false;\r\n        }\r\n        if (!this.sessionCheckIFrameUrl) {\r\n            console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');\r\n            return false;\r\n        }\r\n        const sessionState = this.getSessionState();\r\n        if (!sessionState) {\r\n            console.warn('sessionChecksEnabled is activated but there is no session_state');\r\n            return false;\r\n        }\r\n        if (typeof this.document === 'undefined') {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    setupSessionCheckEventListener() {\r\n        this.removeSessionCheckEventListener();\r\n        this.sessionCheckEventListener = (e) => {\r\n            const origin = e.origin.toLowerCase();\r\n            const issuer = this.issuer.toLowerCase();\r\n            this.debug('sessionCheckEventListener');\r\n            if (!issuer.startsWith(origin)) {\r\n                this.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);\r\n                return;\r\n            }\r\n            // only run in Angular zone if it is 'changed' or 'error'\r\n            switch (e.data) {\r\n                case 'unchanged':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionUnchanged();\r\n                    });\r\n                    break;\r\n                case 'changed':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionChange();\r\n                    });\r\n                    break;\r\n                case 'error':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionError();\r\n                    });\r\n                    break;\r\n            }\r\n            this.debug('got info from session check inframe', e);\r\n        };\r\n        // prevent Angular from refreshing the view on every message (runs in intervals)\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.addEventListener('message', this.sessionCheckEventListener);\r\n        });\r\n    }\r\n    handleSessionUnchanged() {\r\n        this.debug('session check', 'session unchanged');\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_unchanged'));\r\n    }\r\n    handleSessionChange() {\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\r\n        this.stopSessionCheckTimer();\r\n        if (!this.useSilentRefresh && this.responseType === 'code') {\r\n            this.refreshToken()\r\n                .then((_) => {\r\n                this.debug('token refresh after session change worked');\r\n            })\r\n                .catch((_) => {\r\n                this.debug('token refresh did not work after session changed');\r\n                this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n                this.logOut(true);\r\n            });\r\n        }\r\n        else if (this.silentRefreshRedirectUri) {\r\n            this.silentRefresh().catch((_) => this.debug('silent refresh failed after session changed'));\r\n            this.waitForSilentRefreshAfterSessionChange();\r\n        }\r\n        else {\r\n            this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n            this.logOut(true);\r\n        }\r\n    }\r\n    waitForSilentRefreshAfterSessionChange() {\r\n        this.events\r\n            .pipe(filter((e) => e.type === 'silently_refreshed' ||\r\n            e.type === 'silent_refresh_timeout' ||\r\n            e.type === 'silent_refresh_error'), first())\r\n            .subscribe((e) => {\r\n            if (e.type !== 'silently_refreshed') {\r\n                this.debug('silent refresh did not work after session changed');\r\n                this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n                this.logOut(true);\r\n            }\r\n        });\r\n    }\r\n    handleSessionError() {\r\n        this.stopSessionCheckTimer();\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_error'));\r\n    }\r\n    removeSessionCheckEventListener() {\r\n        if (this.sessionCheckEventListener) {\r\n            window.removeEventListener('message', this.sessionCheckEventListener);\r\n            this.sessionCheckEventListener = null;\r\n        }\r\n    }\r\n    initSessionCheck() {\r\n        if (!this.canPerformSessionCheck()) {\r\n            return;\r\n        }\r\n        const existingIframe = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (existingIframe) {\r\n            this.document.body.removeChild(existingIframe);\r\n        }\r\n        const iframe = this.document.createElement('iframe');\r\n        iframe.id = this.sessionCheckIFrameName;\r\n        this.setupSessionCheckEventListener();\r\n        const url = this.sessionCheckIFrameUrl;\r\n        iframe.setAttribute('src', url);\r\n        iframe.style.display = 'none';\r\n        this.document.body.appendChild(iframe);\r\n        this.startSessionCheckTimer();\r\n    }\r\n    startSessionCheckTimer() {\r\n        this.stopSessionCheckTimer();\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.sessionCheckTimer = setInterval(this.checkSession.bind(this), this.sessionCheckIntervall);\r\n        });\r\n    }\r\n    stopSessionCheckTimer() {\r\n        if (this.sessionCheckTimer) {\r\n            clearInterval(this.sessionCheckTimer);\r\n            this.sessionCheckTimer = null;\r\n        }\r\n    }\r\n    checkSession() {\r\n        const iframe = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (!iframe) {\r\n            this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);\r\n        }\r\n        const sessionState = this.getSessionState();\r\n        if (!sessionState) {\r\n            this.stopSessionCheckTimer();\r\n        }\r\n        const message = this.clientId + ' ' + sessionState;\r\n        iframe.contentWindow.postMessage(message, this.issuer);\r\n    }\r\n    createLoginUrl(state = '', loginHint = '', customRedirectUri = '', noPrompt = false, params = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const that = this;\r\n            let redirectUri;\r\n            if (customRedirectUri) {\r\n                redirectUri = customRedirectUri;\r\n            }\r\n            else {\r\n                redirectUri = this.redirectUri;\r\n            }\r\n            const nonce = yield this.createAndSaveNonce();\r\n            if (state) {\r\n                state =\r\n                    nonce + this.config.nonceStateSeparator + encodeURIComponent(state);\r\n            }\r\n            else {\r\n                state = nonce;\r\n            }\r\n            if (!this.requestAccessToken && !this.oidc) {\r\n                throw new Error('Either requestAccessToken or oidc or both must be true');\r\n            }\r\n            if (this.config.responseType) {\r\n                this.responseType = this.config.responseType;\r\n            }\r\n            else {\r\n                if (this.oidc && this.requestAccessToken) {\r\n                    this.responseType = 'id_token token';\r\n                }\r\n                else if (this.oidc && !this.requestAccessToken) {\r\n                    this.responseType = 'id_token';\r\n                }\r\n                else {\r\n                    this.responseType = 'token';\r\n                }\r\n            }\r\n            const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\r\n            let scope = that.scope;\r\n            if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\r\n                scope = 'openid ' + scope;\r\n            }\r\n            let url = that.loginUrl +\r\n                seperationChar +\r\n                'response_type=' +\r\n                encodeURIComponent(that.responseType) +\r\n                '&client_id=' +\r\n                encodeURIComponent(that.clientId) +\r\n                '&state=' +\r\n                encodeURIComponent(state) +\r\n                '&redirect_uri=' +\r\n                encodeURIComponent(redirectUri) +\r\n                '&scope=' +\r\n                encodeURIComponent(scope);\r\n            if (this.responseType.includes('code') && !this.disablePKCE) {\r\n                const [challenge, verifier] = yield this.createChallangeVerifierPairForPKCE();\r\n                if (this.saveNoncesInLocalStorage &&\r\n                    typeof window['localStorage'] !== 'undefined') {\r\n                    localStorage.setItem('PKCE_verifier', verifier);\r\n                }\r\n                else {\r\n                    this._storage.setItem('PKCE_verifier', verifier);\r\n                }\r\n                url += '&code_challenge=' + challenge;\r\n                url += '&code_challenge_method=S256';\r\n            }\r\n            if (loginHint) {\r\n                url += '&login_hint=' + encodeURIComponent(loginHint);\r\n            }\r\n            if (that.resource) {\r\n                url += '&resource=' + encodeURIComponent(that.resource);\r\n            }\r\n            if (that.oidc) {\r\n                url += '&nonce=' + encodeURIComponent(nonce);\r\n            }\r\n            if (noPrompt) {\r\n                url += '&prompt=none';\r\n            }\r\n            for (const key of Object.keys(params)) {\r\n                url +=\r\n                    '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n            }\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    url +=\r\n                        '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\r\n                }\r\n            }\r\n            return url;\r\n        });\r\n    }\r\n    initImplicitFlowInternal(additionalState = '', params = '') {\r\n        if (this.inImplicitFlow) {\r\n            return;\r\n        }\r\n        this.inImplicitFlow = true;\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        let addParams = {};\r\n        let loginHint = null;\r\n        if (typeof params === 'string') {\r\n            loginHint = params;\r\n        }\r\n        else if (typeof params === 'object') {\r\n            addParams = params;\r\n        }\r\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n            .then(this.config.openUri)\r\n            .catch((error) => {\r\n            console.error('Error in initImplicitFlow', error);\r\n            this.inImplicitFlow = false;\r\n        });\r\n    }\r\n    /**\r\n     * Starts the implicit flow and redirects to user to\r\n     * the auth servers' login url.\r\n     *\r\n     * @param additionalState Optional state that is passed around.\r\n     *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n     * @param params Hash with additional parameter. If it is a string, it is used for the\r\n     *               parameter loginHint (for the sake of compatibility with former versions)\r\n     */\r\n    initImplicitFlow(additionalState = '', params = '') {\r\n        if (this.loginUrl !== '') {\r\n            this.initImplicitFlowInternal(additionalState, params);\r\n        }\r\n        else {\r\n            this.events\r\n                .pipe(filter((e) => e.type === 'discovery_document_loaded'))\r\n                .subscribe((_) => this.initImplicitFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n    /**\r\n     * Reset current implicit flow\r\n     *\r\n     * @description This method allows resetting the current implict flow in order to be initialized again.\r\n     */\r\n    resetImplicitFlow() {\r\n        this.inImplicitFlow = false;\r\n    }\r\n    callOnTokenReceivedIfExists(options) {\r\n        const that = this;\r\n        if (options.onTokenReceived) {\r\n            const tokenParams = {\r\n                idClaims: that.getIdentityClaims(),\r\n                idToken: that.getIdToken(),\r\n                accessToken: that.getAccessToken(),\r\n                state: that.state,\r\n            };\r\n            options.onTokenReceived(tokenParams);\r\n        }\r\n    }\r\n    storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {\r\n        this._storage.setItem('access_token', accessToken);\r\n        if (grantedScopes && !Array.isArray(grantedScopes)) {\r\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split(' ')));\r\n        }\r\n        else if (grantedScopes && Array.isArray(grantedScopes)) {\r\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\r\n        }\r\n        this._storage.setItem('access_token_stored_at', '' + this.dateTimeService.now());\r\n        if (expiresIn) {\r\n            const expiresInMilliSeconds = expiresIn * 1000;\r\n            const now = this.dateTimeService.new();\r\n            const expiresAt = now.getTime() + expiresInMilliSeconds;\r\n            this._storage.setItem('expires_at', '' + expiresAt);\r\n        }\r\n        if (refreshToken) {\r\n            this._storage.setItem('refresh_token', refreshToken);\r\n        }\r\n        if (customParameters) {\r\n            customParameters.forEach((value, key) => {\r\n                this._storage.setItem(key, value);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Delegates to tryLoginImplicitFlow for the sake of competability\r\n     * @param options Optional options.\r\n     */\r\n    tryLogin(options = null) {\r\n        if (this.config.responseType === 'code') {\r\n            return this.tryLoginCodeFlow(options).then((_) => true);\r\n        }\r\n        else {\r\n            return this.tryLoginImplicitFlow(options);\r\n        }\r\n    }\r\n    parseQueryString(queryString) {\r\n        if (!queryString || queryString.length === 0) {\r\n            return {};\r\n        }\r\n        if (queryString.charAt(0) === '?') {\r\n            queryString = queryString.substr(1);\r\n        }\r\n        return this.urlHelper.parseQueryString(queryString);\r\n    }\r\n    tryLoginCodeFlow(options = null) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            options = options || {};\r\n            const querySource = options.customHashFragment\r\n                ? options.customHashFragment.substring(1)\r\n                : window.location.search;\r\n            const parts = this.getCodePartsFromUrl(querySource);\r\n            const code = parts['code'];\r\n            const state = parts['state'];\r\n            const sessionState = parts['session_state'];\r\n            if (!options.preventClearHashAfterLogin) {\r\n                const href = location.origin +\r\n                    location.pathname +\r\n                    location.search\r\n                        .replace(/code=[^&\\$]*/, '')\r\n                        .replace(/scope=[^&\\$]*/, '')\r\n                        .replace(/state=[^&\\$]*/, '')\r\n                        .replace(/session_state=[^&\\$]*/, '')\r\n                        .replace(/^\\?&/, '?')\r\n                        .replace(/&$/, '')\r\n                        .replace(/^\\?$/, '')\r\n                        .replace(/&+/g, '&')\r\n                        .replace(/\\?&/, '?')\r\n                        .replace(/\\?$/, '') +\r\n                    location.hash;\r\n                history.replaceState(null, window.name, href);\r\n            }\r\n            let [nonceInState, userState] = this.parseState(state);\r\n            this.state = userState;\r\n            if (parts['error']) {\r\n                this.debug('error trying to login');\r\n                this.handleLoginError(options, parts);\r\n                const err = new OAuthErrorEvent('code_error', {}, parts);\r\n                this.eventsSubject.next(err);\r\n                return Promise.reject(err);\r\n            }\r\n            if (!options.disableNonceCheck) {\r\n                if (!nonceInState) {\r\n                    this.saveRequestedRoute();\r\n                    return Promise.resolve();\r\n                }\r\n                if (!options.disableOAuth2StateCheck) {\r\n                    const success = this.validateNonce(nonceInState);\r\n                    if (!success) {\r\n                        const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n                        this.eventsSubject.next(event);\r\n                        return Promise.reject(event);\r\n                    }\r\n                }\r\n                this.storeSessionState(sessionState);\r\n                if (code) {\r\n                    yield this.getTokenFromCode(code, options);\r\n                    this.restoreRequestedRoute();\r\n                    return Promise.resolve();\r\n                }\r\n                else {\r\n                    return Promise.resolve();\r\n                }\r\n            }\r\n            return Promise.reject();\r\n        });\r\n    }\r\n    saveRequestedRoute() {\r\n        if (this.config.preserveRequestedRoute) {\r\n            this._storage.setItem('requested_route', window.location.pathname + window.location.search);\r\n        }\r\n    }\r\n    restoreRequestedRoute() {\r\n        const requestedRoute = this._storage.getItem('requested_route');\r\n        if (requestedRoute) {\r\n            history.replaceState(null, '', window.location.origin + requestedRoute);\r\n        }\r\n    }\r\n    /**\r\n     * Retrieve the returned auth code from the redirect uri that has been called.\r\n     * If required also check hash, as we could use hash location strategy.\r\n     */\r\n    getCodePartsFromUrl(queryString) {\r\n        if (!queryString || queryString.length === 0) {\r\n            return this.urlHelper.getHashFragmentParams();\r\n        }\r\n        // normalize query string\r\n        if (queryString.charAt(0) === '?') {\r\n            queryString = queryString.substr(1);\r\n        }\r\n        return this.urlHelper.parseQueryString(queryString);\r\n    }\r\n    /**\r\n     * Get token using an intermediate code. Works for the Authorization Code flow.\r\n     */\r\n    getTokenFromCode(code, options) {\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n            .set('grant_type', 'authorization_code')\r\n            .set('code', code)\r\n            .set('redirect_uri', options.customRedirectUri || this.redirectUri);\r\n        if (!this.disablePKCE) {\r\n            let PKCEVerifier;\r\n            if (this.saveNoncesInLocalStorage &&\r\n                typeof window['localStorage'] !== 'undefined') {\r\n                PKCEVerifier = localStorage.getItem('PKCE_verifier');\r\n            }\r\n            else {\r\n                PKCEVerifier = this._storage.getItem('PKCE_verifier');\r\n            }\r\n            if (!PKCEVerifier) {\r\n                console.warn('No PKCE verifier found in oauth storage!');\r\n            }\r\n            else {\r\n                params = params.set('code_verifier', PKCEVerifier);\r\n            }\r\n        }\r\n        return this.fetchAndProcessToken(params, options);\r\n    }\r\n    fetchAndProcessToken(params, options) {\r\n        options = options || {};\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            if (this.customQueryParams) {\r\n                for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('refresh tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                if (this.oidc && tokenResponse.id_token) {\r\n                    this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, options.disableNonceCheck)\r\n                        .then((result) => {\r\n                        this.storeIdToken(result);\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                        resolve(tokenResponse);\r\n                    })\r\n                        .catch((reason) => {\r\n                        this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\r\n                        console.error('Error validating tokens');\r\n                        console.error(reason);\r\n                        reject(reason);\r\n                    });\r\n                }\r\n                else {\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                    resolve(tokenResponse);\r\n                }\r\n            }, (err) => {\r\n                console.error('Error getting token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Checks whether there are tokens in the hash fragment\r\n     * as a result of the implicit flow. These tokens are\r\n     * parsed, validated and used to sign the user in to the\r\n     * current client.\r\n     *\r\n     * @param options Optional options.\r\n     */\r\n    tryLoginImplicitFlow(options = null) {\r\n        options = options || {};\r\n        let parts;\r\n        if (options.customHashFragment) {\r\n            parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\r\n        }\r\n        else {\r\n            parts = this.urlHelper.getHashFragmentParams();\r\n        }\r\n        this.debug('parsed url', parts);\r\n        const state = parts['state'];\r\n        let [nonceInState, userState] = this.parseState(state);\r\n        this.state = userState;\r\n        if (parts['error']) {\r\n            this.debug('error trying to login');\r\n            this.handleLoginError(options, parts);\r\n            const err = new OAuthErrorEvent('token_error', {}, parts);\r\n            this.eventsSubject.next(err);\r\n            return Promise.reject(err);\r\n        }\r\n        const accessToken = parts['access_token'];\r\n        const idToken = parts['id_token'];\r\n        const sessionState = parts['session_state'];\r\n        const grantedScopes = parts['scope'];\r\n        if (!this.requestAccessToken && !this.oidc) {\r\n            return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');\r\n        }\r\n        if (this.requestAccessToken && !accessToken) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.oidc && !idToken) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.sessionChecksEnabled && !sessionState) {\r\n            this.logger.warn('session checks (Session Status Change Notification) ' +\r\n                'were activated in the configuration but the id_token ' +\r\n                'does not contain a session_state claim');\r\n        }\r\n        if (this.requestAccessToken && !options.disableNonceCheck) {\r\n            const success = this.validateNonce(nonceInState);\r\n            if (!success) {\r\n                const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n                this.eventsSubject.next(event);\r\n                return Promise.reject(event);\r\n            }\r\n        }\r\n        if (this.requestAccessToken) {\r\n            this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);\r\n        }\r\n        if (!this.oidc) {\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                this.clearLocationHash();\r\n            }\r\n            this.callOnTokenReceivedIfExists(options);\r\n            return Promise.resolve(true);\r\n        }\r\n        return this.processIdToken(idToken, accessToken, options.disableNonceCheck)\r\n            .then((result) => {\r\n            if (options.validationHandler) {\r\n                return options\r\n                    .validationHandler({\r\n                    accessToken: accessToken,\r\n                    idClaims: result.idTokenClaims,\r\n                    idToken: result.idToken,\r\n                    state: state,\r\n                })\r\n                    .then((_) => result);\r\n            }\r\n            return result;\r\n        })\r\n            .then((result) => {\r\n            this.storeIdToken(result);\r\n            this.storeSessionState(sessionState);\r\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                this.clearLocationHash();\r\n            }\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            this.callOnTokenReceivedIfExists(options);\r\n            this.inImplicitFlow = false;\r\n            return true;\r\n        })\r\n            .catch((reason) => {\r\n            this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\r\n            this.logger.error('Error validating tokens');\r\n            this.logger.error(reason);\r\n            return Promise.reject(reason);\r\n        });\r\n    }\r\n    parseState(state) {\r\n        let nonce = state;\r\n        let userState = '';\r\n        if (state) {\r\n            const idx = state.indexOf(this.config.nonceStateSeparator);\r\n            if (idx > -1) {\r\n                nonce = state.substr(0, idx);\r\n                userState = state.substr(idx + this.config.nonceStateSeparator.length);\r\n            }\r\n        }\r\n        return [nonce, userState];\r\n    }\r\n    validateNonce(nonceInState) {\r\n        let savedNonce;\r\n        if (this.saveNoncesInLocalStorage &&\r\n            typeof window['localStorage'] !== 'undefined') {\r\n            savedNonce = localStorage.getItem('nonce');\r\n        }\r\n        else {\r\n            savedNonce = this._storage.getItem('nonce');\r\n        }\r\n        if (savedNonce !== nonceInState) {\r\n            const err = 'Validating access_token failed, wrong state/nonce.';\r\n            console.error(err, savedNonce, nonceInState);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    storeIdToken(idToken) {\r\n        this._storage.setItem('id_token', idToken.idToken);\r\n        this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\r\n        this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\r\n        this._storage.setItem('id_token_stored_at', '' + this.dateTimeService.now());\r\n    }\r\n    storeSessionState(sessionState) {\r\n        this._storage.setItem('session_state', sessionState);\r\n    }\r\n    getSessionState() {\r\n        return this._storage.getItem('session_state');\r\n    }\r\n    handleLoginError(options, parts) {\r\n        if (options.onLoginError) {\r\n            options.onLoginError(parts);\r\n        }\r\n        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n            this.clearLocationHash();\r\n        }\r\n    }\r\n    getClockSkewInMsec(defaultSkewMsc = 600000) {\r\n        if (!this.clockSkewInSec) {\r\n            return defaultSkewMsc;\r\n        }\r\n        return this.clockSkewInSec * 1000;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processIdToken(idToken, accessToken, skipNonceCheck = false) {\r\n        const tokenParts = idToken.split('.');\r\n        const headerBase64 = this.padBase64(tokenParts[0]);\r\n        const headerJson = b64DecodeUnicode(headerBase64);\r\n        const header = JSON.parse(headerJson);\r\n        const claimsBase64 = this.padBase64(tokenParts[1]);\r\n        const claimsJson = b64DecodeUnicode(claimsBase64);\r\n        const claims = JSON.parse(claimsJson);\r\n        let savedNonce;\r\n        if (this.saveNoncesInLocalStorage &&\r\n            typeof window['localStorage'] !== 'undefined') {\r\n            savedNonce = localStorage.getItem('nonce');\r\n        }\r\n        else {\r\n            savedNonce = this._storage.getItem('nonce');\r\n        }\r\n        if (Array.isArray(claims.aud)) {\r\n            if (claims.aud.every((v) => v !== this.clientId)) {\r\n                const err = 'Wrong audience: ' + claims.aud.join(',');\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n        else {\r\n            if (claims.aud !== this.clientId) {\r\n                const err = 'Wrong audience: ' + claims.aud;\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n        if (!claims.sub) {\r\n            const err = 'No sub claim in id_token';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        /* For now, we only check whether the sub against\r\n         * silentRefreshSubject when sessionChecksEnabled is on\r\n         * We will reconsider in a later version to do this\r\n         * in every other case too.\r\n         */\r\n        if (this.sessionChecksEnabled &&\r\n            this.silentRefreshSubject &&\r\n            this.silentRefreshSubject !== claims['sub']) {\r\n            const err = 'After refreshing, we got an id_token for another user (sub). ' +\r\n                `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!claims.iat) {\r\n            const err = 'No iat claim in id_token';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\r\n            const err = 'Wrong issuer: ' + claims.iss;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!skipNonceCheck && claims.nonce !== savedNonce) {\r\n            const err = 'Wrong nonce: ' + claims.nonce;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        // at_hash is not applicable to authorization code flow\r\n        // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\r\n        // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\r\n        // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\r\n        if (this.hasOwnProperty('responseType') &&\r\n            (this.responseType === 'code' || this.responseType === 'id_token')) {\r\n            this.disableAtHashCheck = true;\r\n        }\r\n        if (!this.disableAtHashCheck &&\r\n            this.requestAccessToken &&\r\n            !claims['at_hash']) {\r\n            const err = 'An at_hash is needed!';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        const now = this.dateTimeService.now();\r\n        const issuedAtMSec = claims.iat * 1000;\r\n        const expiresAtMSec = claims.exp * 1000;\r\n        const clockSkewInMSec = this.getClockSkewInMsec(); // (this.getClockSkewInMsec() || 600) * 1000;\r\n        if (issuedAtMSec - clockSkewInMSec >= now ||\r\n            expiresAtMSec + clockSkewInMSec <= now) {\r\n            const err = 'Token has expired';\r\n            console.error(err);\r\n            console.error({\r\n                now: now,\r\n                issuedAtMSec: issuedAtMSec,\r\n                expiresAtMSec: expiresAtMSec,\r\n            });\r\n            return Promise.reject(err);\r\n        }\r\n        const validationParams = {\r\n            accessToken: accessToken,\r\n            idToken: idToken,\r\n            jwks: this.jwks,\r\n            idTokenClaims: claims,\r\n            idTokenHeader: header,\r\n            loadKeys: () => this.loadJwks(),\r\n        };\r\n        if (this.disableAtHashCheck) {\r\n            return this.checkSignature(validationParams).then((_) => {\r\n                const result = {\r\n                    idToken: idToken,\r\n                    idTokenClaims: claims,\r\n                    idTokenClaimsJson: claimsJson,\r\n                    idTokenHeader: header,\r\n                    idTokenHeaderJson: headerJson,\r\n                    idTokenExpiresAt: expiresAtMSec,\r\n                };\r\n                return result;\r\n            });\r\n        }\r\n        return this.checkAtHash(validationParams).then((atHashValid) => {\r\n            if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\r\n                const err = 'Wrong at_hash';\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n            return this.checkSignature(validationParams).then((_) => {\r\n                const atHashCheckEnabled = !this.disableAtHashCheck;\r\n                const result = {\r\n                    idToken: idToken,\r\n                    idTokenClaims: claims,\r\n                    idTokenClaimsJson: claimsJson,\r\n                    idTokenHeader: header,\r\n                    idTokenHeaderJson: headerJson,\r\n                    idTokenExpiresAt: expiresAtMSec,\r\n                };\r\n                if (atHashCheckEnabled) {\r\n                    return this.checkAtHash(validationParams).then((atHashValid) => {\r\n                        if (this.requestAccessToken && !atHashValid) {\r\n                            const err = 'Wrong at_hash';\r\n                            this.logger.warn(err);\r\n                            return Promise.reject(err);\r\n                        }\r\n                        else {\r\n                            return result;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return result;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Returns the received claims about the user.\r\n     */\r\n    getIdentityClaims() {\r\n        const claims = this._storage.getItem('id_token_claims_obj');\r\n        if (!claims) {\r\n            return null;\r\n        }\r\n        return JSON.parse(claims);\r\n    }\r\n    /**\r\n     * Returns the granted scopes from the server.\r\n     */\r\n    getGrantedScopes() {\r\n        const scopes = this._storage.getItem('granted_scopes');\r\n        if (!scopes) {\r\n            return null;\r\n        }\r\n        return JSON.parse(scopes);\r\n    }\r\n    /**\r\n     * Returns the current id_token.\r\n     */\r\n    getIdToken() {\r\n        return this._storage ? this._storage.getItem('id_token') : null;\r\n    }\r\n    padBase64(base64data) {\r\n        while (base64data.length % 4 !== 0) {\r\n            base64data += '=';\r\n        }\r\n        return base64data;\r\n    }\r\n    /**\r\n     * Returns the current access_token.\r\n     */\r\n    getAccessToken() {\r\n        return this._storage ? this._storage.getItem('access_token') : null;\r\n    }\r\n    getRefreshToken() {\r\n        return this._storage ? this._storage.getItem('refresh_token') : null;\r\n    }\r\n    /**\r\n     * Returns the expiration date of the access_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    getAccessTokenExpiration() {\r\n        if (!this._storage.getItem('expires_at')) {\r\n            return null;\r\n        }\r\n        return parseInt(this._storage.getItem('expires_at'), 10);\r\n    }\r\n    getAccessTokenStoredAt() {\r\n        return parseInt(this._storage.getItem('access_token_stored_at'), 10);\r\n    }\r\n    getIdTokenStoredAt() {\r\n        return parseInt(this._storage.getItem('id_token_stored_at'), 10);\r\n    }\r\n    /**\r\n     * Returns the expiration date of the id_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    getIdTokenExpiration() {\r\n        if (!this._storage.getItem('id_token_expires_at')) {\r\n            return null;\r\n        }\r\n        return parseInt(this._storage.getItem('id_token_expires_at'), 10);\r\n    }\r\n    /**\r\n     * Checkes, whether there is a valid access_token.\r\n     */\r\n    hasValidAccessToken() {\r\n        if (this.getAccessToken()) {\r\n            const expiresAt = this._storage.getItem('expires_at');\r\n            const now = this.dateTimeService.new();\r\n            if (expiresAt &&\r\n                parseInt(expiresAt, 10) < now.getTime() - this.getClockSkewInMsec()) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Checks whether there is a valid id_token.\r\n     */\r\n    hasValidIdToken() {\r\n        if (this.getIdToken()) {\r\n            const expiresAt = this._storage.getItem('id_token_expires_at');\r\n            const now = this.dateTimeService.new();\r\n            if (expiresAt &&\r\n                parseInt(expiresAt, 10) < now.getTime() - this.getClockSkewInMsec()) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\r\n     */\r\n    getCustomTokenResponseProperty(requestedProperty) {\r\n        return this._storage &&\r\n            this.config.customTokenParameters &&\r\n            this.config.customTokenParameters.indexOf(requestedProperty) >= 0 &&\r\n            this._storage.getItem(requestedProperty) !== null\r\n            ? JSON.parse(this._storage.getItem(requestedProperty))\r\n            : null;\r\n    }\r\n    /**\r\n     * Returns the auth-header that can be used\r\n     * to transmit the access_token to a service\r\n     */\r\n    authorizationHeader() {\r\n        return 'Bearer ' + this.getAccessToken();\r\n    }\r\n    logOut(customParameters = {}, state = '') {\r\n        let noRedirectToLogoutUrl = false;\r\n        if (typeof customParameters === 'boolean') {\r\n            noRedirectToLogoutUrl = customParameters;\r\n            customParameters = {};\r\n        }\r\n        const id_token = this.getIdToken();\r\n        this._storage.removeItem('access_token');\r\n        this._storage.removeItem('id_token');\r\n        this._storage.removeItem('refresh_token');\r\n        if (this.saveNoncesInLocalStorage) {\r\n            localStorage.removeItem('nonce');\r\n            localStorage.removeItem('PKCE_verifier');\r\n        }\r\n        else {\r\n            this._storage.removeItem('nonce');\r\n            this._storage.removeItem('PKCE_verifier');\r\n        }\r\n        this._storage.removeItem('expires_at');\r\n        this._storage.removeItem('id_token_claims_obj');\r\n        this._storage.removeItem('id_token_expires_at');\r\n        this._storage.removeItem('id_token_stored_at');\r\n        this._storage.removeItem('access_token_stored_at');\r\n        this._storage.removeItem('granted_scopes');\r\n        this._storage.removeItem('session_state');\r\n        if (this.config.customTokenParameters) {\r\n            this.config.customTokenParameters.forEach((customParam) => this._storage.removeItem(customParam));\r\n        }\r\n        this.silentRefreshSubject = null;\r\n        this.eventsSubject.next(new OAuthInfoEvent('logout'));\r\n        if (!this.logoutUrl) {\r\n            return;\r\n        }\r\n        if (noRedirectToLogoutUrl) {\r\n            return;\r\n        }\r\n        if (!id_token && !this.postLogoutRedirectUri) {\r\n            return;\r\n        }\r\n        let logoutUrl;\r\n        if (!this.validateUrlForHttps(this.logoutUrl)) {\r\n            throw new Error(\"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        // For backward compatibility\r\n        if (this.logoutUrl.indexOf('{{') > -1) {\r\n            logoutUrl = this.logoutUrl\r\n                .replace(/\\{\\{id_token\\}\\}/, encodeURIComponent(id_token))\r\n                .replace(/\\{\\{client_id\\}\\}/, encodeURIComponent(this.clientId));\r\n        }\r\n        else {\r\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() });\r\n            if (id_token) {\r\n                params = params.set('id_token_hint', id_token);\r\n            }\r\n            const postLogoutUrl = this.postLogoutRedirectUri ||\r\n                (this.redirectUriAsPostLogoutRedirectUriFallback && this.redirectUri) ||\r\n                '';\r\n            if (postLogoutUrl) {\r\n                params = params.set('post_logout_redirect_uri', postLogoutUrl);\r\n                if (state) {\r\n                    params = params.set('state', state);\r\n                }\r\n            }\r\n            for (let key in customParameters) {\r\n                params = params.set(key, customParameters[key]);\r\n            }\r\n            logoutUrl =\r\n                this.logoutUrl +\r\n                    (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\r\n                    params.toString();\r\n        }\r\n        this.config.openUri(logoutUrl);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createAndSaveNonce() {\r\n        const that = this;\r\n        return this.createNonce().then(function (nonce) {\r\n            // Use localStorage for nonce if possible\r\n            // localStorage is the only storage who survives a\r\n            // redirect in ALL browsers (also IE)\r\n            // Otherwiese we'd force teams who have to support\r\n            // IE into using localStorage for everything\r\n            if (that.saveNoncesInLocalStorage &&\r\n                typeof window['localStorage'] !== 'undefined') {\r\n                localStorage.setItem('nonce', nonce);\r\n            }\r\n            else {\r\n                that._storage.setItem('nonce', nonce);\r\n            }\r\n            return nonce;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnDestroy() {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n        this.removeSilentRefreshEventListener();\r\n        const silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);\r\n        if (silentRefreshFrame) {\r\n            silentRefreshFrame.remove();\r\n        }\r\n        this.stopSessionCheckTimer();\r\n        this.removeSessionCheckEventListener();\r\n        const sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (sessionCheckFrame) {\r\n            sessionCheckFrame.remove();\r\n        }\r\n    }\r\n    createNonce() {\r\n        return new Promise((resolve) => {\r\n            if (this.rngUrl) {\r\n                throw new Error('createNonce with rng-web-api has not been implemented so far');\r\n            }\r\n            /*\r\n             * This alphabet is from:\r\n             * https://tools.ietf.org/html/rfc7636#section-4.1\r\n             *\r\n             * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n             */\r\n            const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n            let size = 45;\r\n            let id = '';\r\n            const crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\r\n            if (crypto) {\r\n                let bytes = new Uint8Array(size);\r\n                crypto.getRandomValues(bytes);\r\n                // Needed for IE\r\n                if (!bytes.map) {\r\n                    bytes.map = Array.prototype.map;\r\n                }\r\n                bytes = bytes.map((x) => unreserved.charCodeAt(x % unreserved.length));\r\n                id = String.fromCharCode.apply(null, bytes);\r\n            }\r\n            else {\r\n                while (0 < size--) {\r\n                    id += unreserved[(Math.random() * unreserved.length) | 0];\r\n                }\r\n            }\r\n            resolve(base64UrlEncode(id));\r\n        });\r\n    }\r\n    checkAtHash(params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.tokenValidationHandler) {\r\n                this.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');\r\n                return true;\r\n            }\r\n            return this.tokenValidationHandler.validateAtHash(params);\r\n        });\r\n    }\r\n    checkSignature(params) {\r\n        if (!this.tokenValidationHandler) {\r\n            this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.tokenValidationHandler.validateSignature(params);\r\n    }\r\n    /**\r\n     * Start the implicit flow or the code flow,\r\n     * depending on your configuration.\r\n     */\r\n    initLoginFlow(additionalState = '', params = {}) {\r\n        if (this.responseType === 'code') {\r\n            return this.initCodeFlow(additionalState, params);\r\n        }\r\n        else {\r\n            return this.initImplicitFlow(additionalState, params);\r\n        }\r\n    }\r\n    /**\r\n     * Starts the authorization code flow and redirects to user to\r\n     * the auth servers login url.\r\n     */\r\n    initCodeFlow(additionalState = '', params = {}) {\r\n        if (this.loginUrl !== '') {\r\n            this.initCodeFlowInternal(additionalState, params);\r\n        }\r\n        else {\r\n            this.events\r\n                .pipe(filter((e) => e.type === 'discovery_document_loaded'))\r\n                .subscribe((_) => this.initCodeFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n    initCodeFlowInternal(additionalState = '', params = {}) {\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        let addParams = {};\r\n        let loginHint = null;\r\n        if (typeof params === 'string') {\r\n            loginHint = params;\r\n        }\r\n        else if (typeof params === 'object') {\r\n            addParams = params;\r\n        }\r\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n            .then(this.config.openUri)\r\n            .catch((error) => {\r\n            console.error('Error in initAuthorizationCodeFlow');\r\n            console.error(error);\r\n        });\r\n    }\r\n    createChallangeVerifierPairForPKCE() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.crypto) {\r\n                throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\r\n            }\r\n            const verifier = yield this.createNonce();\r\n            const challengeRaw = yield this.crypto.calcHash(verifier, 'sha-256');\r\n            const challenge = base64UrlEncode(challengeRaw);\r\n            return [challenge, verifier];\r\n        });\r\n    }\r\n    extractRecognizedCustomParameters(tokenResponse) {\r\n        let foundParameters = new Map();\r\n        if (!this.config.customTokenParameters) {\r\n            return foundParameters;\r\n        }\r\n        this.config.customTokenParameters.forEach((recognizedParameter) => {\r\n            if (tokenResponse[recognizedParameter]) {\r\n                foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\r\n            }\r\n        });\r\n        return foundParameters;\r\n    }\r\n    /**\r\n     * Revokes the auth token to secure the vulnarability\r\n     * of the token issued allowing the authorization server to clean\r\n     * up any security credentials associated with the authorization\r\n     */\r\n    revokeTokenAndLogout(customParameters = {}, ignoreCorsIssues = false) {\r\n        let revokeEndpoint = this.revocationEndpoint;\r\n        let accessToken = this.getAccessToken();\r\n        let refreshToken = this.getRefreshToken();\r\n        if (!accessToken) {\r\n            return;\r\n        }\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() });\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                params = params.set(key, this.customQueryParams[key]);\r\n            }\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let revokeAccessToken;\r\n            let revokeRefreshToken;\r\n            if (accessToken) {\r\n                let revokationParams = params\r\n                    .set('token', accessToken)\r\n                    .set('token_type_hint', 'access_token');\r\n                revokeAccessToken = this.http.post(revokeEndpoint, revokationParams, { headers });\r\n            }\r\n            else {\r\n                revokeAccessToken = of(null);\r\n            }\r\n            if (refreshToken) {\r\n                let revokationParams = params\r\n                    .set('token', refreshToken)\r\n                    .set('token_type_hint', 'refresh_token');\r\n                revokeRefreshToken = this.http.post(revokeEndpoint, revokationParams, { headers });\r\n            }\r\n            else {\r\n                revokeRefreshToken = of(null);\r\n            }\r\n            if (ignoreCorsIssues) {\r\n                revokeAccessToken = revokeAccessToken.pipe(catchError((err) => {\r\n                    if (err.status === 0) {\r\n                        return of(null);\r\n                    }\r\n                    return throwError(err);\r\n                }));\r\n                revokeRefreshToken = revokeRefreshToken.pipe(catchError((err) => {\r\n                    if (err.status === 0) {\r\n                        return of(null);\r\n                    }\r\n                    return throwError(err);\r\n                }));\r\n            }\r\n            combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe((res) => {\r\n                this.logOut(customParameters);\r\n                resolve(res);\r\n                this.logger.info('Token successfully revoked');\r\n            }, (err) => {\r\n                this.logger.error('Error revoking token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Clear location.hash if it's present\r\n     */\r\n    clearLocationHash() {\r\n        // Checking for empty hash is necessary for Firefox\r\n        // as setting an empty hash to an empty string adds # to the URL\r\n        if (location.hash != '') {\r\n            location.hash = '';\r\n        }\r\n    }\r\n}\r\nOAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthService, deps: [{ token: i0.NgZone }, { token: i1.HttpClient }, { token: OAuthStorage, optional: true }, { token: ValidationHandler, optional: true }, { token: AuthConfig, optional: true }, { token: UrlHelperService }, { token: OAuthLogger }, { token: HashHandler, optional: true }, { token: DOCUMENT }, { token: DateTimeProvider }], target: i0.ɵɵFactoryTarget.Injectable });\r\nOAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.NgZone }, { type: i1.HttpClient }, { type: OAuthStorage, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: ValidationHandler, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: AuthConfig, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: UrlHelperService }, { type: OAuthLogger }, { type: HashHandler, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: DateTimeProvider }];\r\n    } });\n\nclass OAuthModuleConfig {\r\n}\r\nclass OAuthResourceServerConfig {\r\n}\n\nclass OAuthResourceServerErrorHandler {\r\n}\r\nclass OAuthNoopResourceServerErrorHandler {\r\n    handleError(err) {\r\n        return throwError(err);\r\n    }\r\n}\n\nclass DefaultOAuthInterceptor {\r\n    constructor(oAuthService, errorHandler, moduleConfig) {\r\n        this.oAuthService = oAuthService;\r\n        this.errorHandler = errorHandler;\r\n        this.moduleConfig = moduleConfig;\r\n    }\r\n    checkUrl(url) {\r\n        if (this.moduleConfig.resourceServer.customUrlValidation) {\r\n            return this.moduleConfig.resourceServer.customUrlValidation(url);\r\n        }\r\n        if (this.moduleConfig.resourceServer.allowedUrls) {\r\n            return !!this.moduleConfig.resourceServer.allowedUrls.find((u) => url.toLowerCase().startsWith(u.toLowerCase()));\r\n        }\r\n        return true;\r\n    }\r\n    intercept(req, next) {\r\n        const url = req.url.toLowerCase();\r\n        if (!this.moduleConfig ||\r\n            !this.moduleConfig.resourceServer ||\r\n            !this.checkUrl(url)) {\r\n            return next.handle(req);\r\n        }\r\n        const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\r\n        if (!sendAccessToken) {\r\n            return next\r\n                .handle(req)\r\n                .pipe(catchError((err) => this.errorHandler.handleError(err)));\r\n        }\r\n        return merge(of(this.oAuthService.getAccessToken()).pipe(filter((token) => !!token)), this.oAuthService.events.pipe(filter((e) => e.type === 'token_received'), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError((_) => of(null)), // timeout is not an error\r\n        map((_) => this.oAuthService.getAccessToken()))).pipe(take(1), mergeMap((token) => {\r\n            if (token) {\r\n                const header = 'Bearer ' + token;\r\n                const headers = req.headers.set('Authorization', header);\r\n                req = req.clone({ headers });\r\n            }\r\n            return next\r\n                .handle(req)\r\n                .pipe(catchError((err) => this.errorHandler.handleError(err)));\r\n        }));\r\n    }\r\n}\r\nDefaultOAuthInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultOAuthInterceptor, deps: [{ token: OAuthService }, { token: OAuthResourceServerErrorHandler }, { token: OAuthModuleConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nDefaultOAuthInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultOAuthInterceptor });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultOAuthInterceptor, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () {\r\n        return [{ type: OAuthService }, { type: OAuthResourceServerErrorHandler }, { type: OAuthModuleConfig, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    } });\n\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\r\nclass NullValidationHandler {\r\n    validateSignature(validationParams) {\r\n        return Promise.resolve(null);\r\n    }\r\n    validateAtHash(validationParams) {\r\n        return Promise.resolve(true);\r\n    }\r\n}\n\nfunction createDefaultLogger() {\r\n    return console;\r\n}\r\nfunction createDefaultStorage() {\r\n    return typeof sessionStorage !== 'undefined'\r\n        ? sessionStorage\r\n        : new MemoryStorage();\r\n}\n\nclass OAuthModule {\r\n    static forRoot(config = null, validationHandlerClass = NullValidationHandler) {\r\n        return {\r\n            ngModule: OAuthModule,\r\n            providers: [\r\n                OAuthService,\r\n                UrlHelperService,\r\n                { provide: OAuthLogger, useFactory: createDefaultLogger },\r\n                { provide: OAuthStorage, useFactory: createDefaultStorage },\r\n                { provide: ValidationHandler, useClass: validationHandlerClass },\r\n                { provide: HashHandler, useClass: DefaultHashHandler },\r\n                {\r\n                    provide: OAuthResourceServerErrorHandler,\r\n                    useClass: OAuthNoopResourceServerErrorHandler,\r\n                },\r\n                { provide: OAuthModuleConfig, useValue: config },\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: DefaultOAuthInterceptor,\r\n                    multi: true,\r\n                },\r\n                { provide: DateTimeProvider, useClass: SystemDateTimeProvider },\r\n            ],\r\n        };\r\n    }\r\n}\r\nOAuthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nOAuthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthModule, imports: [CommonModule] });\r\nOAuthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthModule, imports: [[CommonModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [],\r\n                    exports: [],\r\n                }]\r\n        }] });\n\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\r\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\r\nclass JwksValidationHandler extends NullValidationHandler {\r\n    constructor() {\r\n        super();\r\n        console.error(err);\r\n    }\r\n}\n\nconst AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DateTimeProvider, DefaultHashHandler, DefaultOAuthInterceptor, HashHandler, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, SystemDateTimeProvider, UrlHelperService, ValidationHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}