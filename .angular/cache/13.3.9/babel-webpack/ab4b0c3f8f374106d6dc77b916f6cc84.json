{"ast":null,"code":"import { Category, MovieType, tvType } from 'shared/enums';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./services/catalog.service\";\nimport * as i3 from \"./components/page-header/page-header.component\";\nimport * as i4 from \"./components/movie-grid/movie-grid.component\";\nexport let CatalogComponent = /*#__PURE__*/(() => {\n  class CatalogComponent {\n    constructor(_route, catService) {\n      this._route = _route;\n      this.catService = catService;\n      this.data = [];\n\n      this._route.params.subscribe(param => {\n        this.category = param;\n        this.keyword = undefined;\n        this.data = [];\n\n        switch (this.category['cateType']) {\n          case Category.movie:\n            this.catService.fetchMovies(MovieType.upcoming, {});\n            break;\n\n          default:\n            this.catService.fetchTvList(tvType.popular, {});\n        }\n\n        ;\n      });\n    }\n\n    ngOnInit() {\n      this.subs = [this.catService._movies$.subscribe(movies => {\n        this.data = [...this.data, ...movies];\n      }), this.catService._tvSeries$.subscribe(tvSeries => {\n        this.data = [...this.data, ...tvSeries];\n      }), this.catService._currentPage$.subscribe(page => {\n        this.currentPage = page;\n      }), this.catService._totalPages$.subscribe(totalPages => {\n        this.totalPages = totalPages;\n      })];\n    }\n\n    loadMore(event) {\n      if (!this.keyword) {\n        switch (this.category['cateType']) {\n          case Category.movie:\n            this.catService.fetchMovies(MovieType.upcoming, {\n              page: event\n            });\n            break;\n\n          default:\n            this.catService.fetchTvList(tvType.popular, {\n              page: event\n            });\n        }\n\n        ;\n      } else {\n        this.catService.filterMoviesByQueryParams(this.category['cateType'], {\n          page: event,\n          query: this.keyword\n        });\n      }\n    }\n\n    searchQuery(event) {\n      this.keyword = event;\n\n      if (!event) {\n        switch (this.category['cateType']) {\n          case Category.movie:\n            this.catService.fetchMovies(MovieType.upcoming, {});\n            break;\n\n          default:\n            this.catService.fetchTvList(tvType.popular, {});\n        }\n\n        ;\n      } else {\n        this.data = [];\n        this.catService.filterMoviesByQueryParams(this.category['cateType'], {\n          page: 1,\n          query: event\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n  }\n\n  CatalogComponent.ɵfac = function CatalogComponent_Factory(t) {\n    return new (t || CatalogComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CatalogService));\n  };\n\n  CatalogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CatalogComponent,\n    selectors: [[\"app-catalog\"]],\n    decls: 5,\n    vars: 5,\n    consts: [[1, \"catalog\"], [3, \"category\"], [1, \"container\"], [1, \"section\", \"mb-3\"], [3, \"category\", \"data\", \"currentPage\", \"totalPages\", \"_loadMore$\", \"_searchQuery$\"]],\n    template: function CatalogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-page-header\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"app-movie-grid\", 4);\n        i0.ɵɵlistener(\"_loadMore$\", function CatalogComponent_Template_app_movie_grid__loadMore__4_listener($event) {\n          return ctx.loadMore($event);\n        })(\"_searchQuery$\", function CatalogComponent_Template_app_movie_grid__searchQuery__4_listener($event) {\n          return ctx.searchQuery($event);\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"category\", ctx.category);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"category\", ctx.category[\"cateType\"])(\"data\", ctx.data)(\"currentPage\", ctx.currentPage)(\"totalPages\", ctx.totalPages);\n      }\n    },\n    directives: [i3.PageHeaderComponent, i4.MovieGridComponent],\n    styles: [\"\"]\n  });\n  return CatalogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}