{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { Category } from \"shared/enums\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst dbUrl = environment.apiConfig.apiUrl;\nconst apiKey = environment.apiConfig.apiKey;\nexport let CatalogService = /*#__PURE__*/(() => {\n  class CatalogService {\n    constructor(http) {\n      this.http = http;\n      this._movies$ = new Subject();\n      this._tvSeries$ = new Subject();\n      this._currentPage$ = new Subject();\n      this._totalPages$ = new Subject();\n    }\n\n    fetchMovies(type, params) {\n      return this.http.get(`${dbUrl}/movie/${type}`, {\n        params: Object.assign(Object.assign({}, params), {\n          api_key: apiKey\n        })\n      }).subscribe(response => {\n        this._movies$.next(response === null || response === void 0 ? void 0 : response.results);\n\n        this._currentPage$.next(response === null || response === void 0 ? void 0 : response.page);\n\n        this._totalPages$.next(response === null || response === void 0 ? void 0 : response.total_pages);\n      });\n    }\n\n    fetchTvList(type, params) {\n      return this.http.get(`${dbUrl}/tv/${type}`, {\n        params: Object.assign(Object.assign({}, params), {\n          api_key: apiKey\n        })\n      }).subscribe(response => {\n        this._tvSeries$.next(response === null || response === void 0 ? void 0 : response.results);\n\n        this._currentPage$.next(response === null || response === void 0 ? void 0 : response.page);\n\n        this._totalPages$.next(response === null || response === void 0 ? void 0 : response.total_pages);\n      });\n    }\n\n    filterMoviesByQueryParams(type, params) {\n      return this.http.get(`${dbUrl}/search/${type}`, {\n        params: Object.assign(Object.assign({}, params), {\n          api_key: apiKey\n        })\n      }).subscribe(response => {\n        if (type === Category.tv) {\n          this._tvSeries$.next(response === null || response === void 0 ? void 0 : response.results);\n        } else {\n          this._movies$.next(response === null || response === void 0 ? void 0 : response.results);\n        }\n\n        ;\n\n        this._currentPage$.next(response === null || response === void 0 ? void 0 : response.page);\n\n        this._totalPages$.next(response === null || response === void 0 ? void 0 : response.total_pages);\n      });\n    }\n\n  }\n\n  CatalogService.ɵfac = function CatalogService_Factory(t) {\n    return new (t || CatalogService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CatalogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CatalogService,\n    factory: CatalogService.ɵfac,\n    providedIn: 'root'\n  });\n  return CatalogService;\n})();","map":null,"metadata":{},"sourceType":"module"}